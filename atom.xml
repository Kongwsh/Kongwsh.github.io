<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kongwsh</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-15T13:50:06.085Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kong</name>
    <email>echokws@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浏览器模式和文档模式</title>
    <link href="http://yoursite.com/2016/10/02/html-1/"/>
    <id>http://yoursite.com/2016/10/02/html-1/</id>
    <published>2016-10-02T07:36:08.000Z</published>
    <updated>2016-10-15T13:50:06.085Z</updated>
    
    <content type="html">&lt;h1 id=&quot;浏览器模式（Browser-Mode）&quot;&gt;&lt;a href=&quot;#浏览器模式（Browser-Mode）&quot; class=&quot;headerlink&quot; title=&quot;浏览器模式（Browser Mode）&quot;&gt;&lt;/a&gt;浏览器模式（Browser Mode）&lt;/h1&gt;&lt;p&gt;浏览器模式（Browser Mode），用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件注释解析、决定请求头里userAgent的值。它在浏览器发出请求之前就已经确定，网站没有办法修改这个值。它代表的是用户以何种浏览器访问网站。&lt;br&gt;IE11已经改名为“用户代理字符串”，其实是用来设置navigator.userAgent和navigator.appVersion的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/images/IE11.png&quot; title=&quot;IE11开发者工具栏&quot;&gt;
&lt;p&gt;在不同的IE版本中，它与文档模式的关系可不相同。&lt;/p&gt;
&lt;p&gt;IE89中，倘若浏览器模式被设置为IE7，那么文档模式的只能设置为7,6,5；&lt;/p&gt;
&lt;p&gt;IE11中，用户代理字符串设置和文档模式并没有什么关系。&lt;/p&gt;
&lt;h1 id=&quot;文档模式（Document-Mode）&quot;&gt;&lt;a href=&quot;#文档模式（Document-Mode）&quot; class=&quot;headerlink&quot; title=&quot;文档模式（Document Mode）&quot;&gt;&lt;/a&gt;文档模式（Document Mode）&lt;/h1&gt;&lt;p&gt;“文档模式”用于指定IE的页面排版引擎（Trident）以哪个版本的方式来解析并渲染网页代码。切换文档模式会导致网页被刷新，但不会更改用户代理字符串中的版本号，也不会从服务器重新下载网页。切换浏览器模式的同时，浏览器也会自动切换到相应的文档模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;历史&lt;/strong&gt;：在很久以前的网络上，页面通常有两种版本：为网景（Netscape）的 Navigator准备的版本以及为微软（Microsoft）的 Internet Explorer准备的版本。当 W3C 创立网络标准后，为了不破坏当时既有的网站，浏览器不能直接起用这些标准。因此，浏览器采用了两种模式，用以把能符合新规范的网站和老旧网站区分开。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;怪异模式（Quirks mode）&lt;br&gt;简单来说，怪异模式就是浏览器为了兼容很早之前针对旧版本浏览器设计、并未严格遵循 W3C 标准的网页而产生的一种页面渲染模式。&lt;/li&gt;
&lt;li&gt;标准模式（Standards mode）&lt;br&gt;标准模式是与 Quirks Mode 对应的，在“标准模式”(standards mode) 页面按照 HTML 与 CSS 的定义渲染。&lt;/li&gt;
&lt;li&gt;接近标准模式（Almost standards mode）&lt;br&gt;接近标准模式和标准模式几乎一致，唯一的区别就在于某些情况下接近标准模式会采用与 怪异模式相同的方式来绘制页面。当把图片分割后显示在一个表格单元中时，接近标准模式与怪异模式采用同样的绘制方式从而让图片显示不像在标准模式中那么的四分五裂。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;文档模式的不同由渲染引擎(Rendering Engine)即浏览器内核产生的，渲染引擎主要包含两部分，一部分为排版引擎负责 HTML、CSS 代码的解析，另一部分javascript引擎负责脚本代码解析，这两部分合起来就可以绘制出完整的页面。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;browser&lt;/th&gt;
&lt;th style=&quot;text-align:left&quot;&gt;内核&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;IE&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Trident&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Edge&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Edge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Chrome&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Blink&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Firefox&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;gecko&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Safari&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;webkit&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Opera&lt;/td&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Blink&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对每一种渲染引擎而言，随着版本的发展其渲染页面的方式也有很大的不同。&lt;br&gt;IE 是最早提出 Quirks Mode 与 Standards Mode（与 Quirks 相对应的一种模式）的，后来 Firefox、Chrome、Safari、Opera 等浏览器也都支持了这两种渲染方式。&lt;/p&gt;
&lt;h1 id=&quot;服务器改变浏览器文档模式的方法&quot;&gt;&lt;a href=&quot;#服务器改变浏览器文档模式的方法&quot; class=&quot;headerlink&quot; title=&quot;服务器改变浏览器文档模式的方法&quot;&gt;&lt;/a&gt;服务器改变浏览器文档模式的方法&lt;/h1&gt;&lt;p&gt;浏览器模式决定：1）发送给服务端的UA；2）默认的文档模式；3）如何解析条件注释。它在请求发送前就已经确定，且不受服务端控制。&lt;br&gt;文档模式决定：1）排版引擎；2）JS引擎。它在浏览器得到响应后最终确定，服务端可通过doctype或X-UA-Compatible来控制。&lt;/p&gt;
&lt;h2 id=&quot;Doctype-检测&quot;&gt;&lt;a href=&quot;#Doctype-检测&quot; class=&quot;headerlink&quot; title=&quot;Doctype 检测&quot;&gt;&lt;/a&gt;Doctype 检测&lt;/h2&gt;&lt;p&gt;DOCTYPE是document type(文档类型)的简写，用来说明XHTML或者HTML是什么版本。&lt;br&gt;其中的DTD(document type definition)叫文档类型定义，里面包含了文档的规则，浏览器就根据你定义的DTD来解释你页面的标识，并展现出来。要建立符合标准的网页，DOCTYPE声明是必不可少的关键组成部分。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 HTML5中，DOCTYPE 唯一的作用是启用标准模式。&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用标准模式HTML 4.01 Strict&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启用接近标准模式HTML 4.01 Transitional&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当 doctype 缺失的时候，浏览器会选择怪异模式。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;x-ua-compatible-信息&quot;&gt;&lt;a href=&quot;#x-ua-compatible-信息&quot; class=&quot;headerlink&quot; title=&quot;x-ua-compatible 信息&quot;&gt;&lt;/a&gt;x-ua-compatible 信息&lt;/h2&gt;&lt;p&gt;触发IE 最新版本的标准模式，在&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;标签中加入元标签&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;IE=Edge&quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在请求消息对应的响应头加入下面代码与上一句效果一样&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;IE=Edge&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;页面、服务器HTTP Header都设置了X-UA-Compatible的情况，使用页面的X-UA-Compatible设置。页面无X-UA-Compatible，才使用HTTP Header设置的值。&lt;/p&gt;
&lt;p&gt;把X-UA-Compatible写在&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;或&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签下面，否则X-UA-Compatible的设置无效。&lt;/p&gt;
&lt;h1 id=&quot;参考链接&quot;&gt;&lt;a href=&quot;#参考链接&quot; class=&quot;headerlink&quot; title=&quot;参考链接&quot;&gt;&lt;/a&gt;参考链接&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2014年&lt;a href=&quot;http://www.cnblogs.com/fsjohnhuang/p/3817418.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JS魔法堂：浏览器模式和文档模式怎么玩？ &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2013年&lt;a href=&quot;http://www.ibm.com/developerworks/cn/web/1310_shatao_quirks/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;怪异模式（Quirks Mode）对 HTML 页面的影响&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2012年&lt;a href=&quot;https://imququ.com/post/browser-mode-and-document-mode-in-ie.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于浏览器模式和文本模式的困惑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;浏览器模式（Browser-Mode）&quot;&gt;&lt;a href=&quot;#浏览器模式（Browser-Mode）&quot; class=&quot;headerlink&quot; title=&quot;浏览器模式（Browser Mode）&quot;&gt;&lt;/a&gt;浏览器模式（Browser Mode）&lt;/h1&gt;&lt;p&gt;浏览器模式（Browser Mode），用于切换IE针对该网页的默认文档模式、对不同版本浏览器的条件注释解析、决定请求头里userAgent的值。它在浏览器发出请求之前就已经确定，网站没有办法修改这个值。它代表的是用户以何种浏览器访问网站。&lt;br&gt;IE11已经改名为“用户代理字符串”，其实是用来设置navigator.userAgent和navigator.appVersion的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>理解回调函数，回调地狱，Promise</title>
    <link href="http://yoursite.com/2016/10/01/callback/"/>
    <id>http://yoursite.com/2016/10/01/callback/</id>
    <published>2016-10-01T07:36:08.000Z</published>
    <updated>2016-10-15T15:07:06.236Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在计算机程序设计中，回调函数，或简称回调（Callback 即call then back 被主函数&lt;br&gt;调用运算后会返回主函数），是指通过函数参数传递到其它代码的，某一块可执行代码&lt;br&gt;的引用。这一设计允许了底层代码调用在高层定义的子程序。&lt;br&gt;                                                                 —维基百科&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;回调函数&quot;&gt;&lt;a href=&quot;#回调函数&quot; class=&quot;headerlink&quot; title=&quot;回调函数&quot;&gt;&lt;/a&gt;回调函数&lt;/h1&gt;&lt;p&gt;因为JavaScript是单线程执行的，所以JavaScript的所有网络操作，浏览器事件，都必须是异步执行。异步就是不是马上发生，异步执行可以用回调函数实现，通常，只有在做一些I/O操作的时候会使用回调函数，比如下载，读取文件，与数据库交互等。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;callback&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Done&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;before setTimeout()&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setTimeout(callback, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 1秒钟后调用callback函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;after setTimeout()&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;输出：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;before setTimeout()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;after setTimeout()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;(等待&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;秒后)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Done&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;回调地狱&quot;&gt;&lt;a href=&quot;#回调地狱&quot; class=&quot;headerlink&quot; title=&quot;回调地狱&quot;&gt;&lt;/a&gt;回调地狱&lt;/h1&gt;&lt;p&gt;callback hell是指，回调的多了，会让代码看起来不好理解，因为在视觉上，代码是从上到下执行的。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;fs.readdir(source, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; err, files &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( err ) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Error finding files: &#39;&lt;/span&gt; + err);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        files.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; filename, fileIndex &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(filename);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            gm(source + filename).size(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; err, values &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( err ) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Error identifying file size: &#39;&lt;/span&gt; + err);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(filename + &lt;span class=&quot;string&quot;&gt;&#39; : &#39;&lt;/span&gt; + values);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    aspect = (values.width / values.height);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    widths.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; width, widthIndex &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        height = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.round(width / aspect);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;resizing &#39;&lt;/span&gt; + filename + &lt;span class=&quot;string&quot;&gt;&#39;to &#39;&lt;/span&gt; + height + &lt;span class=&quot;string&quot;&gt;&#39;x&#39;&lt;/span&gt; + height);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.resize(width, height).write(dest + &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt; + width + &lt;span class=&quot;string&quot;&gt;&#39;_&#39;&lt;/span&gt; + filename, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt; err &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ( err ) &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Error writing file: &#39;&lt;/span&gt; + err);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;.bind(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.erichain.me/front-end/full-stack/2016/02/27/how-to-avoid-callback-hell.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“回调地狱”如何避免&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Promise&quot;&gt;&lt;a href=&quot;#Promise&quot; class=&quot;headerlink&quot; title=&quot;Promise&quot;&gt;&lt;/a&gt;Promise&lt;/h1&gt;&lt;p&gt;Promise为异步编程而生，有了Promise对象就可以将异步操作以同步操作的流程表达出来，避免了层层嵌套的回调函数。&lt;br&gt;Promise/A+规范, 规定Promise对象是一个有限状态机。它三个状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;pending（执行中）&lt;/li&gt;
&lt;li&gt;fulfilled（成功）&lt;/li&gt;
&lt;li&gt;reject（拒绝）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; promise = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ... some code&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;comment&quot;&gt;/* 异步操作成功 */&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    resolve(value);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    reject(error);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;API:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.prototype.then()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Promise实例的状态变为Resolved，就会触发then方法绑定的回调函数。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.prototype.catch()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Promise.prototype.catch方法是.then(null, rejection)的别名，用于指定发生错误时的回调函数。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.race()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将多个Promise实例，包装成一个新的Promise实例。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.resolve()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将现有对象转为Promise对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;.reject(reason)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回一个新的Promise实例，该实例的状态为rejected。它的参数用法与Promise.resolve方法完全一致。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;done()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//总是处于回调链的尾端，保证抛出任何可能出现的错误&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;finally&lt;/span&gt;()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//指定不管Promise对象最后状态如何，都会执行的操作&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;举个例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//生成一个0-2之间的随机数，如果小于1，则等待一段时间后返回成功，否则返回失败&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;resolve, reject&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; timeOut = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.random() * &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    log(&lt;span class=&quot;string&quot;&gt;&#39;set timeout to: &#39;&lt;/span&gt; + timeOut + &lt;span class=&quot;string&quot;&gt;&#39; seconds.&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    setTimeout(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (timeOut &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            log(&lt;span class=&quot;string&quot;&gt;&#39;call resolve()...&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            resolve(&lt;span class=&quot;string&quot;&gt;&#39;200 OK&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            log(&lt;span class=&quot;string&quot;&gt;&#39;call reject()...&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            reject(&lt;span class=&quot;string&quot;&gt;&#39;timeout in &#39;&lt;/span&gt; + timeOut + &lt;span class=&quot;string&quot;&gt;&#39; seconds.&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;, timeOut * &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//有了执行函数，我们就可以用一个Promise对象来执行它，并在将来某个时刻获得成功或失败的结果&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Promise&lt;/span&gt;(test);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当test函数执行成功时&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p2 = p1.then(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;成功：&#39;&lt;/span&gt; + result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当test函数执行失败时&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; p3 = p2.catch(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;reason&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;失败：&#39;&lt;/span&gt; + reason);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://es6.ruanyifeng.com/#docs/promise#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阮一峰 ECMAScript 6 入门之Promise对象&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰学习网站之Promise&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在计算机程序设计中，回调函数，或简称回调（Callback 即call then back 被主函数&lt;br&gt;调用运算后会返回主函数），是指通过函数参数传递到其它代码的，某一块可执行代码&lt;br&gt;的引用。这一设计允许了底层代码调用在高层定义的子程序。&lt;br&gt;                                                                 —维基百科&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>理解响应式布局</title>
    <link href="http://yoursite.com/2016/09/25/responsiveweb-0/"/>
    <id>http://yoursite.com/2016/09/25/responsiveweb-0/</id>
    <published>2016-09-25T07:36:08.000Z</published>
    <updated>2016-10-15T13:47:00.611Z</updated>
    
    <content type="html">&lt;h1 id=&quot;响应式布局概念&quot;&gt;&lt;a href=&quot;#响应式布局概念&quot; class=&quot;headerlink&quot; title=&quot;响应式布局概念&quot;&gt;&lt;/a&gt;响应式布局概念&lt;/h1&gt;&lt;p&gt;自适应布局：排版不变，对于分辨率和视区的变化不能很好的响应。&lt;br&gt;2010年，Ethan Marrate 首次提出响应式网站是一个理念，是多项技术的综合体。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;需要三个技术：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;弹性网格布局 flexible grid layout&lt;/li&gt;
&lt;li&gt;弹性图片 flexible image&lt;/li&gt;
&lt;li&gt;媒体查询 media queries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;响应式设计使网站可以在任何的设备和任何尺寸的屏幕友好的访问，网站仅需要一个版本，可以完美适配任何尺寸的屏幕，在不同尺寸的设备中，网站展现出不同的设计风格。&lt;/p&gt;
&lt;p&gt;响应式布局的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;减少工作量&lt;/li&gt;
&lt;li&gt;节省时间&lt;/li&gt;
&lt;li&gt;每个设备都能得到正确的设计&lt;/li&gt;
&lt;li&gt;搜索优化&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;响应式布局的缺点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;加载更多的样式和脚本&lt;/li&gt;
&lt;li&gt;设计比较难精确定位和控制&lt;/li&gt;
&lt;li&gt;老版本浏览器兼容性不好&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;弹性布局&quot;&gt;&lt;a href=&quot;#弹性布局&quot; class=&quot;headerlink&quot; title=&quot;弹性布局&quot;&gt;&lt;/a&gt;弹性布局&lt;/h1&gt;&lt;p&gt;所谓的弹性布局，说的是在创建网站的时候，采用流体网格布局方式，动态地调整网站布局宽度以此来适应各种设备屏幕大小。&lt;/p&gt;
&lt;h2 id=&quot;测量单位使用相对长度单位（em-rem）&quot;&gt;&lt;a href=&quot;#测量单位使用相对长度单位（em-rem）&quot; class=&quot;headerlink&quot; title=&quot;测量单位使用相对长度单位（em/rem）&quot;&gt;&lt;/a&gt;测量单位使用相对长度单位（em/rem）&lt;/h2&gt;&lt;p&gt;因为视窗（ viewport ）的高度和宽度在不同设备之间是不断变化的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;em相对参照物为父元素font-size&lt;/li&gt;
&lt;li&gt;继承性，继续向上找祖父元素的font-size&lt;/li&gt;
&lt;li&gt;如果没有设置font-size，则使用浏览器默认的字体大小，1em = 16px&lt;/li&gt;
&lt;li&gt;缺点是容易混乱，因为祖父元素的font-size不一定一致。&lt;/li&gt;
&lt;li&gt;rem的相对参照物为跟元素html，相对参照固定不变，解决了em的缺点，当没有设置font-size时，浏览器会有一个默认的rem，1rem=16px&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;flexbox&quot;&gt;&lt;a href=&quot;#flexbox&quot; class=&quot;headerlink&quot; title=&quot;flexbox&quot;&gt;&lt;/a&gt;flexbox&lt;/h2&gt;&lt;p&gt;CSS3 弹性盒子(Flexible Box 或 Flexbox)，是一种布局方式，当页面需要适应不同的屏幕大小以及设备类型时，它依然能确保元素拥有更恰当的排布行为。对很多应用程序来说，当不使用浮动，且弹性容器的外边距也不需要与其内容的外边距合并时，弹性盒子模型比起方框模型要好一些。&lt;br&gt;弹性盒子布局主要适用于应用程序的组件及小规模的布局，而（新兴的）栅格布局则针对大规模的布局。这二者都是 CSS 工作组为在不同用户代理、不同书写模式和其他灵活性要求下的网页应用程序有更好的互操作性而做出的更广泛的努力的一部分。&lt;br&gt;更多见：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://www.w3.org/html/ig/zh/css-flex-1/#flex-containers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;媒体查询&quot;&gt;&lt;a href=&quot;#媒体查询&quot; class=&quot;headerlink&quot; title=&quot;媒体查询&quot;&gt;&lt;/a&gt;媒体查询&lt;/h1&gt;&lt;p&gt;css3中的媒体查询包含了一个媒体类型和至少一个使用如宽度、高度和颜色等媒体属性来限制样式表范围的表达式。&lt;br&gt;IE8及以下只能实现CSS2中的部分，即只可以设置媒体类型&lt;br&gt;媒体查询可以被用在CSS中的@media和@import规则上,也可以被用在HTML和XML中。&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@media screen and (width:800px)&amp;#123; … &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@import url(example.css) screen and (width:800px);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screen and (width:800px)&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;example.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;?xml-stylesheet media=&quot;screen and (width:800px)&quot; rel=&quot;stylesheet&quot; href=&quot;example.css&quot; ?&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;弹性媒介&quot;&gt;&lt;a href=&quot;#弹性媒介&quot; class=&quot;headerlink&quot; title=&quot;弹性媒介&quot;&gt;&lt;/a&gt;弹性媒介&lt;/h1&gt;&lt;p&gt;图片、视频和其它媒介类型应该具备可伸缩性，能根据浏览器窗口的大小，自动调整自身尺寸，保证页面布局整齐一致。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;图片排版布局&lt;/li&gt;
&lt;li&gt;加载与用户设备相匹配的小图片，既快速，又不会影响用户体验&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如何实现响应式图片呢？&lt;br&gt;图片的宽度max-width：100%.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;js或服务端&lt;br&gt;通过js来控制图片加载，跟踪risize事件，修改图片的路径；或者通过把屏幕或者设备信息写入cookie，获取图片的时候在服务器端决定返回的图片。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;srcset&lt;br&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;中srcset属性,以逗号分隔的一个或多个字符串列表，字符串由图片路径 和尺寸描述符组成如&lt;code&gt;480w&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png 480w,img/800.png 800w，img/1600.png 1600w&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;srcset配合sizes&lt;br&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;中还有sizes属性配合srcset使用&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/*====100vw默认视口宽度====*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png 480w,img/800.png 800w，img/1600.png 1600w&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;50vw&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/*媒体查询,当屏幕尺寸大于等于800px，图片的预估宽度为800px，其他情况是100vw*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/480.png 480w,img/800.png 800w，img/1600.png 1600w&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;(min-width:800px) 800px ,100vw&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;标签&lt;br&gt;一个&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;标签包含任意个&lt;code&gt;&amp;lt;source/&amp;gt;&lt;/code&gt;和一个&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;,浏览器会遍历source设置，哪一个满足条件就用那个，每个source设置媒体查询&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;picture&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;(max-width:36em)&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/123.jpg 768w&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;(orientation:landscape)&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/123.jpg 768w&quot;&lt;/span&gt;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/svg+xml&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;logo.svg 480w &quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/webp&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;logo.webp 480w &quot;&lt;/span&gt; &amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;srcset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/123.jpg 1800w&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;img/12311.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;picture&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SVG格式图片&lt;br&gt;SVG是可缩放矢量图形，缩放不变形，失真，矢量图形不是基于像素的，基于绘制规则&lt;br&gt;与位图相比的缺点是很难表现色彩丰富逼真的效果，很大。&lt;br&gt;一般来说logo，网站图片可以svg矢量图形&lt;br&gt;绘制工具：AI，Sketch&lt;br&gt;在线绘制：&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://editor.method.ac/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;editor.method.ac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://icomoon.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;icomoon.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;响应式布局概念&quot;&gt;&lt;a href=&quot;#响应式布局概念&quot; class=&quot;headerlink&quot; title=&quot;响应式布局概念&quot;&gt;&lt;/a&gt;响应式布局概念&lt;/h1&gt;&lt;p&gt;自适应布局：排版不变，对于分辨率和视区的变化不能很好的响应。&lt;br&gt;2010年，Ethan Marrate 首次提出响应式网站是一个理念，是多项技术的综合体。&lt;/p&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>理解AJAX</title>
    <link href="http://yoursite.com/2016/09/04/AJAX/"/>
    <id>http://yoursite.com/2016/09/04/AJAX/</id>
    <published>2016-09-04T07:36:08.000Z</published>
    <updated>2016-10-15T13:24:20.490Z</updated>
    
    <content type="html">&lt;p&gt;2005年Jesse James Garrett 发明的一项技术，Ajax（Asynchronous JavaScript and XML），即用JavaScript执行异步网络请求。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;通常情况下，一次http请求对应一个页面。&lt;/p&gt;
&lt;p&gt;如果要让用户留在当前页面中，同时发出新的HTTP请求，就必须用JavaScript发送这个新请求，接收到数据后，再用JavaScript更新页面，这样一来，用户就感觉自己仍然停留在当前页面，但是数据却可以不断地更新。&lt;/p&gt;
&lt;p&gt;Ajax的核心是XMLHttpRequest对象（XHR），可以由XHR对象取得新数据，然后在通过DOM将新数据插入到页面中。&lt;/p&gt;
&lt;h1 id=&quot;XHR&quot;&gt;&lt;a href=&quot;#XHR&quot; class=&quot;headerlink&quot; title=&quot;XHR&quot;&gt;&lt;/a&gt;XHR&lt;/h1&gt;&lt;p&gt;创建XHR&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; request;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.XMLHttpRequest) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    request = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    request = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&#39;Microsoft.XMLHTTP&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当创建了XMLHttpRequest对象后，要先设置onreadystatechange的回调函数。在回调函数中，通常我们只需通过readyState === 4判断请求是否完成，如果已完成，再根据status === 200判断是否是一个成功的响应。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;request.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;comment&quot;&gt;// 状态发生变化时，函数被回调&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (request.readyState === &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// 成功完成&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 判断响应结果:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (request.status === &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 成功，通过responseText拿到响应的文本:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; success(request.responseText);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;// 失败，根据响应码判断失败原因:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; fail(request.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// HTTP请求还在继续...&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 发送请求:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;/api/categories&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.send();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;方法&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;open(method,url,async)&lt;/td&gt;
&lt;td&gt;规定请求类型，以及url是否异步&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;send(string)&lt;/td&gt;
&lt;td&gt;将请求发送到服务器上，string仅用于POST请求&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;setRequestHeader()&lt;/td&gt;
&lt;td&gt;设置http头信息，放在open()与send()中间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getAllRequestHeader()&lt;/td&gt;
&lt;td&gt;获取所有响应报头&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;getRequestHeader()&lt;/td&gt;
&lt;td&gt;查询响应中的某个字段的值&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;调用send()方法，请求被发往服务器，服务器根据请求生成响应（Response），传回给XHR对象，在收到响应后相应数据会填充到XHR对象的属性，有四个相关属性会被填充：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;responseText：作为响应主体被返回的文本&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;responseXML：如果响应内容的类型是”text/xml”或”application/xml”，这个属性将保存包含着相应数据的XML文档&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;status：响应的HTTP状态（200,404,500等）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;statusText：HTTP状态说明&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;XHR对象有一个readyState属性，该属性表示请求/响应过程中的当前活动阶段，每当readyState值改变的时候都会触发一次onreadystatechange事件。&lt;/p&gt;
&lt;h1 id=&quot;手动封装&quot;&gt;&lt;a href=&quot;#手动封装&quot; class=&quot;headerlink&quot; title=&quot;手动封装&quot;&gt;&lt;/a&gt;手动封装&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//创建xhr&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__createXHR&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Firefox, Opera 8.0+, Safari，IE7+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;comment&quot;&gt;// Internet Explorer&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&quot;Msxml2.XMLHTTP&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            xhr = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ActiveXObject(&lt;span class=&quot;string&quot;&gt;&quot;Microsoft.XMLHTTP&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            xhr = &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; xhr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ajax: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;configs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; settings = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;,  &lt;span class=&quot;comment&quot;&gt;//请求地址&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//请求使用方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//用户名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//密码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//参数(text/json)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;responseType&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//返回值获取方式 text/xml&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;headers&quot;&lt;/span&gt;: &amp;#123;&amp;#125;, &lt;span class=&quot;comment&quot;&gt;//自定义的HttpHeader&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;enableCache&quot;&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//是否使用缓存&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;onSucceed&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//成功句柄&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;onClientError&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//客户端错误句柄&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;onServerError&quot;&lt;/span&gt;: &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//服务器端错误句柄&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (s &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; settings) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        settings[s] = configs[s] ? configs[s] : settings[s];  &lt;span class=&quot;comment&quot;&gt;//应用自定义配置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; xhr = _createXHR();  &lt;span class=&quot;comment&quot;&gt;//创建XHR对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    xhr.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xhr.readyState == &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;  &lt;span class=&quot;comment&quot;&gt;//请求完成，响应就绪&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; result = settings[&lt;span class=&quot;string&quot;&gt;&quot;responseType&quot;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&quot;text&quot;&lt;/span&gt; ? xhr.responseText : xhr.responseXML; &lt;span class=&quot;comment&quot;&gt;//返回值类型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (((xhr.status &amp;gt;= &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &amp;amp;&amp;amp; xhr.status &amp;lt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;) || xhr.status == &lt;span class=&quot;number&quot;&gt;304&lt;/span&gt;) &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; settings[&lt;span class=&quot;string&quot;&gt;&#39;onSucceed&#39;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;function&#39;&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//成功&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                settings[&lt;span class=&quot;string&quot;&gt;&#39;onSucceed&#39;&lt;/span&gt;](result, xhr.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xhr.status &amp;gt;= &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt; &amp;amp;&amp;amp; xhr.status &amp;lt; &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//客户端出错，404啊神马的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                settings[&lt;span class=&quot;string&quot;&gt;&#39;onClientError&#39;&lt;/span&gt;](result, xhr.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (xhr.status &amp;gt;= &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//服务器端出错&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                settings[&lt;span class=&quot;string&quot;&gt;&#39;onServerError&#39;&lt;/span&gt;](result, xhr.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    xhr.open(settings[&lt;span class=&quot;string&quot;&gt;&#39;method&#39;&lt;/span&gt;], settings[&lt;span class=&quot;string&quot;&gt;&#39;url&#39;&lt;/span&gt;], settings[&lt;span class=&quot;string&quot;&gt;&#39;user&#39;&lt;/span&gt;], settings[&lt;span class=&quot;string&quot;&gt;&#39;password&#39;&lt;/span&gt;]); &lt;span class=&quot;comment&quot;&gt;//发送请求&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; settings[&lt;span class=&quot;string&quot;&gt;&#39;headers&#39;&lt;/span&gt;] == &lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//设置自定义headers&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; headers = settings[&lt;span class=&quot;string&quot;&gt;&#39;headers&#39;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (h &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; headers) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            xhr.setRequestHeader(h, headers[h]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(!settings[&lt;span class=&quot;string&quot;&gt;&#39;enableCache&#39;&lt;/span&gt;])&amp;#123; &lt;span class=&quot;comment&quot;&gt;//禁用缓存&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        xhr.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;If-Modified-Since&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;0&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (settings[&lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;].toLowerCase() == &lt;span class=&quot;string&quot;&gt;&quot;post&quot;&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;//post请求&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        xhr.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;application/x-www-form-urlencoded;charset=UTF-8&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data=&lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; settings[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;]==&lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(d &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; settings[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;])&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                data+=(d+&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;+settings[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;][d]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                          &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            data=settings[&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        xhr.send(data); &lt;span class=&quot;comment&quot;&gt;//传递参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        xhr.send(); &lt;span class=&quot;comment&quot;&gt;//get请求&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//调用&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ssLib.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;url&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;testajax.php&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Byron&quot;&lt;/span&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&quot;onSucceed&quot;&lt;/span&gt;: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;result&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                alert(result);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;jQuery封装&quot;&gt;&lt;a href=&quot;#jQuery封装&quot; class=&quot;headerlink&quot; title=&quot;jQuery封装&quot;&gt;&lt;/a&gt;jQuery封装&lt;/h1&gt;&lt;p&gt;jQuery封装的ajax&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//保存数据到服务器，成功时显示信息&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: &lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  url: &lt;span class=&quot;string&quot;&gt;&quot;some.php&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  data: &amp;#123; name: &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;, location: &lt;span class=&quot;string&quot;&gt;&quot;Boston&quot;&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;).done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; msg &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  alert( &lt;span class=&quot;string&quot;&gt;&quot;Data Saved: &quot;&lt;/span&gt; + msg );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type：类型，”POST”或”GET”,默认为”GET”&lt;/li&gt;
&lt;li&gt;url:发送请求的地址&lt;/li&gt;
&lt;li&gt;data:一个对象，连同请求发送到服务器的数据&lt;/li&gt;
&lt;li&gt;dataType：预期服务器返回的数据类型，如果不指定，jQuery将自动根据HTTP包MIME信息来只能判断，一般我们采用json格式，可设置”json”&lt;/li&gt;
&lt;li&gt;success:请求成功后的回调函数，传入返回后的数据，以及包含成功代码的字符串&lt;/li&gt;
&lt;li&gt;error：请求失败时的回调此函数，传入XHR对象&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;JSONP&quot;&gt;&lt;a href=&quot;#JSONP&quot; class=&quot;headerlink&quot; title=&quot;JSONP&quot;&gt;&lt;/a&gt;JSONP&lt;/h1&gt;&lt;p&gt;Ajax的核心是通过XmlHttpRequest获取非本页内容，而JSONP的核心则是动态添加&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签来调用服务器提供的js脚本,利用了浏览器允许跨域引用JavaScript资源。&lt;/p&gt;
&lt;p&gt;出于安全考虑，浏览器都有同源策略。即相同domain的页面运行在一个沙箱（sandbox）中，与其他domain的沙箱隔离，不能跨越domain直接访问其他domain下的资源。但HTML中有几个标签可以忽略同源限制去请求其他domain下的资源，比如&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; 和&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;等。这里主要说&lt;code&gt;&amp;lt;script src=&amp;quot;url&amp;quot;&amp;gt;&lt;/code&gt;,当浏览器解析到&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签，就会发起一个get请求，请求的URL即为scr所指定的url。这就相当于跨域访问了一个资源。&lt;/p&gt;
&lt;p&gt;比如运行一下代码：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;script = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;script.type = &lt;span class=&quot;string&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;script.src = &lt;span class=&quot;string&quot;&gt;&#39;http://www.someWebApiServer.com/some-data&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可能得到的是一个script元素，元素的innerHTML是请求返回的对象：&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;javascript&quot;&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123;[&lt;span class=&quot;string&quot;&gt;&#39;some string 1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;some data&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;whatever data&#39;&lt;/span&gt;]&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们已经得到了想要的内容，但解析它并不方便。如果使用了JSONP是什么样的呢：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;script = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;script.type = &lt;span class=&quot;string&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;script.src = &lt;span class=&quot;string&quot;&gt;&#39;http://www.someWebApiServer.com/some-data?callback=my_callback&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;返回的结果是：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;my_callback(&amp;#123;[&lt;span class=&quot;string&quot;&gt;&#39;some string 1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;some data&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;whatever data&#39;&lt;/span&gt;]&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到，这里的返回结果是直接执行了一个函数my_callback(…),实参就是我们需要的数据&lt;br&gt;那么只要在客户端页面里实现my_callback 函数，就可以做任何想做的事了&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        function my_callback(data)&amp;#123;alert(data.name etc.)&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/script&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在客户端页面定义函数，在远程服务器端传入数据调用该函数。&lt;/p&gt;
&lt;p&gt;在JQuery.ajax中应用，在前端页面的ajax方法中设置dataType:”jsonp”，并增加jsonp:”callback”,（jsonp的值可为任意值），然后在服务器端的方法中$jsonp = $_GET[“callback”];注意此处的callback需要和jsonp的值保持一致，然后再将$jsonp和返回结果连接起来。&lt;br&gt;jQuery实现jsonp调用，，jquery在处理jsonp类型的ajax时，自动生成回调函数并把数据取出来供success属性方法来调用。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;type:&lt;span class=&quot;string&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;url:&lt;span class=&quot;string&quot;&gt;&quot;http://127.0.0.1:8080/ajaxdemo/service.php?number&quot;&lt;/span&gt;+$(&lt;span class=&quot;string&quot;&gt;&quot;#keyword&quot;&lt;/span&gt;).val(),&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;dataType:&lt;span class=&quot;string&quot;&gt;&quot;jsonp&quot;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//由&quot;json&quot;改为&quot;jsonp&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jsonp:&lt;span class=&quot;string&quot;&gt;&quot;callback&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;//传递给请求处理程序或页面的，用以获得jsonp回调函数名的参数名(一般默认为:callback)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;jsonpCallback:&lt;span class=&quot;string&quot;&gt;&quot;callback11&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自定义的jsonp回调函数名称，默认为jQuery自动生成的随机函数名，也可以写&quot;?&quot;，jQuery会自动为你处理数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;success:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;data&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(data.success)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#searchResult&quot;&lt;/span&gt;).html(data.msg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;#searchResult&quot;&lt;/span&gt;).html(&lt;span class=&quot;string&quot;&gt;&quot;出现错误&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;error:&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;er&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(er.status);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在远程服务器端页面：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$jsonp = $_GET[&lt;span class=&quot;string&quot;&gt;&quot;callback&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$result = $jsonp . &lt;span class=&quot;string&quot;&gt;&#39;(&amp;#123;&quot;success&quot;:false,&quot;msg&quot;:&quot;没有找到员工。&quot;&amp;#125;)&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在PHP中连接字符串使用“.”&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;跨域处理之JSONP，看到这篇文章，受益匪浅：&lt;a href=&quot;http://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【原创】说说JSON和JSONP，也许你会豁然开朗，含jQuery用例&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CORS&quot;&gt;&lt;a href=&quot;#CORS&quot; class=&quot;headerlink&quot; title=&quot;CORS&quot;&gt;&lt;/a&gt;CORS&lt;/h1&gt;&lt;p&gt;CORS全称Cross-Origin Resource Sharing，是HTML5规范定义的如何跨域访问资源。&lt;br&gt;Origin表示本域，也就是浏览器当前页面的域。当JavaScript向外域（如sina.com）发起请求后，浏览器收到响应后，首先检查Access-Control-Allow-Origin是否包含本域，如果是，则此次跨域请求成功，如果不是，则请求失败，JavaScript将无法获取到响应的任何数据。&lt;br&gt;XHR2：HTML5提供的XMLHttpRequest Level2已经实现了跨域访问以及其他的一些新功能&lt;br&gt;IE10以下版本浏览器不支持，在XHR2中对CORS有了很好的支持。&lt;br&gt;用法：&lt;br&gt;在服务器端&amp;lt;?php?&amp;gt;中增加设置即可：&lt;br&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;、header(&lt;span class=&quot;string&quot;&gt;&#39;Access-Control-Allow-Origin:*&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//“*”表示支持所有域名，也可以设置特定的域名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;、header(&lt;span class=&quot;string&quot;&gt;&#39;Access-Control-Allow-Methods:Post/Get&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;表示请求是post还是get&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;跨域处理之CORS:&lt;a href=&quot;https://www.w3.org/TR/cors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;W3C Cross-Origin Resource Sharing&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2005年Jesse James Garrett 发明的一项技术，Ajax（Asynchronous JavaScript and XML），即用JavaScript执行异步网络请求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>offsetHeight,clientHeight,scrollHeight</title>
    <link href="http://yoursite.com/2016/09/02/html-0/"/>
    <id>http://yoursite.com/2016/09/02/html-0/</id>
    <published>2016-09-02T03:31:08.000Z</published>
    <updated>2016-10-15T13:52:07.240Z</updated>
    
    <content type="html">&lt;h1 id=&quot;HTMLElement-offsetHeight&quot;&gt;&lt;a href=&quot;#HTMLElement-offsetHeight&quot; class=&quot;headerlink&quot; title=&quot;HTMLElement.offsetHeight&quot;&gt;&lt;/a&gt;HTMLElement.offsetHeight&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;只读属性,且是一个整数&lt;/li&gt;
&lt;li&gt;元素的边框+垂直内边距+元素的水平滚动条（如果存在且渲染）+元素的CSS高度&lt;/li&gt;
&lt;li&gt;offsetHeight 是一个DOM属性，由MSIE首次提出。它有时被称为一个元素的物理/图形的尺寸，或是一个元素的边界框（border-box）的高度。&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;img src=&quot;/images/offset.png&quot; title=&quot;offsetHeight&quot;&gt;
&lt;h1 id=&quot;Element-clientHeight&quot;&gt;&lt;a href=&quot;#Element-clientHeight&quot; class=&quot;headerlink&quot; title=&quot;Element.clientHeight&quot;&gt;&lt;/a&gt;Element.clientHeight&lt;/h1&gt;&lt;img src=&quot;/images/client.png&quot; title=&quot;clientHeight&quot;&gt;
&lt;ol&gt;
&lt;li&gt;只读属性,且是一个整数&lt;/li&gt;
&lt;li&gt;CSS height + CSS padding - 水平滚动条高度 (如果存在)&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;Element-scrollHeight&quot;&gt;&lt;a href=&quot;#Element-scrollHeight&quot; class=&quot;headerlink&quot; title=&quot;Element.scrollHeight&quot;&gt;&lt;/a&gt;Element.scrollHeight&lt;/h1&gt;&lt;img src=&quot;/images/ScrollHeight.png&quot; title=&quot;scrollHeight&quot;&gt;
&lt;ol&gt;
&lt;li&gt;只读属性,且是一个整数&lt;/li&gt;
&lt;li&gt;CSS height + CSS padding + overflow样式属性导致的视图中不可见内容&lt;/li&gt;
&lt;li&gt;没有垂直滚动条的情况下，scrollHeight值与元素视图填充所有内容所需要的最小值clientHeight相同&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTMLElement-offsetHeight&quot;&gt;&lt;a href=&quot;#HTMLElement-offsetHeight&quot; class=&quot;headerlink&quot; title=&quot;HTMLElement.offsetHeight&quot;&gt;&lt;/a&gt;HTMLElement.offsetHeight&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;只读属性,且是一个整数&lt;/li&gt;
&lt;li&gt;元素的边框+垂直内边距+元素的水平滚动条（如果存在且渲染）+元素的CSS高度&lt;/li&gt;
&lt;li&gt;offsetHeight 是一个DOM属性，由MSIE首次提出。它有时被称为一个元素的物理/图形的尺寸，或是一个元素的边界框（border-box）的高度。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript高级程序设计学习笔记（二）继承模式</title>
    <link href="http://yoursite.com/2016/08/25/javascript-3/"/>
    <id>http://yoursite.com/2016/08/25/javascript-3/</id>
    <published>2016-08-25T09:35:08.000Z</published>
    <updated>2016-10-10T01:14:05.311Z</updated>
    
    <content type="html">&lt;h1 id=&quot;原型链&quot;&gt;&lt;a href=&quot;#原型链&quot; class=&quot;headerlink&quot; title=&quot;原型链&quot;&gt;&lt;/a&gt;原型链&lt;/h1&gt;&lt;p&gt;JavaScript的继承主要依靠原型链来实现的。我们知道，构造函数，原型，和实例之间的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个原型对象的指针。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;实现原型链的方式如下&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.property=&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SuperType.prototype.getSuperValue=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.property;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.subpropertype=&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//让原型对象称为另一个构造函数的实例&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SuperType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.getSubValue=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.subpropertype;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;  instance=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance.getSuperValue());&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//？这个实例继承了SuperType.prototype的constructor属性？&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance.constructor==SuperType);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上述代码继承是通过&lt;code&gt;SubType.prototype=new SuperType();&lt;/code&gt;来实现，创建&lt;code&gt;SuperType&lt;/code&gt;的实例，并将该实例赋给&lt;code&gt;SubType.prototype&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;继承实现的本质是重写原型对象，代之以一个新类型的实例。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下图为构造函数，实例以及原型之间的关系图：&lt;br&gt;&lt;img src=&quot;/images/Inheritance.jpg&quot; title=&quot;继承&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原型链顶端:所有引用类型都默认继承Object，所以，所有函数的默认原型都是Object的实例，默认原型都会包含一个内部指针[[prototype]]，指向Object.prototype。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;原型链缺点&quot;&gt;&lt;a href=&quot;#原型链缺点&quot; class=&quot;headerlink&quot; title=&quot;原型链缺点&quot;&gt;&lt;/a&gt;原型链缺点&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;实例属性变为原型属性&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color=[&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SuperType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance1.color.push(&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance1.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue,black&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance2.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue,black&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个问题似曾相识，正是原型模式创建对象时由于共享引用类型属性，导致牵一发动全身的问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在创建子类型时，不能向超类型的构造函数传递参数。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，单独使用原型链情况较少。&lt;/p&gt;
&lt;h1 id=&quot;借用构造函数&quot;&gt;&lt;a href=&quot;#借用构造函数&quot; class=&quot;headerlink&quot; title=&quot;借用构造函数&quot;&gt;&lt;/a&gt;借用构造函数&lt;/h1&gt;&lt;p&gt;针对原型链的第一个问题，我们可采用借用构造函数的技术来解决。基本思想就是在子类型构造函数的内部调用超类型构造函数。看例子：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color=[&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//继承自SuperType&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SuperType.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance1.color.push(&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance1.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue,black&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance2.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在新创建的SubType子类型的实例中调用SuperType超类型构造函数，就可以在新的实例对象上执行SuperType()函数中定义的所有对象初始化代码。问题不就解决了吗！&lt;br&gt;&lt;strong&gt;但是&lt;/strong&gt;，这种模式的缺点是在超类型中定义的方法，对子类型是不可见的，无法实现共享方法。&lt;br&gt;所以，这种方法也不常用。&lt;/p&gt;
&lt;h1 id=&quot;组合继承&quot;&gt;&lt;a href=&quot;#组合继承&quot; class=&quot;headerlink&quot; title=&quot;组合继承&quot;&gt;&lt;/a&gt;组合继承&lt;/h1&gt;&lt;p&gt;组合上述两种方法就是组合继承。用原型链实现对原型属性和方法的继承，用借用构造函数技术来实现实例属性的继承。无疑，集两者之大成，这才是最常用的继承模式。看：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color=[&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SuperType.prototype.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//继承了SuperType&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SuperType.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//自己又添加了一个&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//构建原型链&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SuperType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//重写SubType.prototype的constructor属性，指向自己的构造函数SubType&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.constructor=SubType;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//原型方法，被实例们共享&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.sayAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType(&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance1.color.push(&lt;span class=&quot;string&quot;&gt;&quot;black&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance1.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue,black&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance1.sayName();&lt;span class=&quot;comment&quot;&gt;//&quot;Nichola&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance1.sayAge();&lt;span class=&quot;comment&quot;&gt;//29&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType(&lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(instance2.color);&lt;span class=&quot;comment&quot;&gt;//&quot;red,green,blue&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance2.sayAge();&lt;span class=&quot;comment&quot;&gt;//24&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;instance2.sayName();&lt;span class=&quot;comment&quot;&gt;//&quot;Grey&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个方案已经看似perfect了。&lt;strong&gt;但是&lt;/strong&gt;，后面再说。&lt;/p&gt;
&lt;h1 id=&quot;原型式继承&quot;&gt;&lt;a href=&quot;#原型式继承&quot; class=&quot;headerlink&quot; title=&quot;原型式继承&quot;&gt;&lt;/a&gt;原型式继承&lt;/h1&gt;&lt;p&gt;&lt;em&gt;借助原型&lt;/em&gt;可以基于已有的对象创建新的对象，不必因此创建自定义类型。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;object&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;o&lt;/span&gt;)&lt;/span&gt;&amp;#123;     &lt;span class=&quot;comment&quot;&gt;//返回一个对象以传入对象为原型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    F.prototype = o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person =&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    friends:[&lt;span class=&quot;string&quot;&gt;&quot;Shelly&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Court&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Van&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = object(person);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.name = &lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&lt;span class=&quot;string&quot;&gt;&quot;Rob&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = object(person);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person2.name = &lt;span class=&quot;string&quot;&gt;&quot;Linda&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person2.friends.push(&lt;span class=&quot;string&quot;&gt;&quot;Barble&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person.friends);&lt;span class=&quot;comment&quot;&gt;//&quot;Shelly,Court,Van,Grey,Barble&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用场合：需求简单，只需要让新对象与已有对象保持相似。优点，不必创建构造函数，缺点，包含引用类型值的属性始终共享相应的值。&lt;br&gt;&lt;strong&gt;Object.create()正是为实现这种模式诞生。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;寄生式继承&quot;&gt;&lt;a href=&quot;#寄生式继承&quot; class=&quot;headerlink&quot; title=&quot;寄生式继承&quot;&gt;&lt;/a&gt;寄生式继承&lt;/h1&gt;&lt;p&gt;与原型式继承相似，也是基于某个对象或某些信息创建对象，然后增强对象，最后返回对象。实现方法：创建一个仅用于封装继承过程的函数，该函数在内部以某种方式来增强对象，最后返回这个对象。看！&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createAnother&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;original&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; clone = object(original);&lt;span class=&quot;comment&quot;&gt;//通过调用函数创建对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    clone.sayHi= &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;    &lt;span class=&quot;comment&quot;&gt;//增强对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;string&quot;&gt;&quot;Hi&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; clone;&lt;span class=&quot;comment&quot;&gt;//返回对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以返回新对象的函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;object&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;o&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;F&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    F.prototype = o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; F();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person =&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    friends:[&lt;span class=&quot;string&quot;&gt;&quot;Shelly&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Court&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Van&quot;&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; anotherPerson = createAnother(person);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;anotherPerson.sayHi();&lt;span class=&quot;comment&quot;&gt;//&quot;Hi&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这种继承模式适用的场合：任何返回新对象的函数都可以。缺点是不能做到函数复用。&lt;/p&gt;
&lt;h1 id=&quot;寄生组合式继承&quot;&gt;&lt;a href=&quot;#寄生组合式继承&quot; class=&quot;headerlink&quot; title=&quot;寄生组合式继承&quot;&gt;&lt;/a&gt;寄生组合式继承&lt;/h1&gt;&lt;p&gt;上面说到组合继承也有缺点，就是无论在何种情况下，都会调用两次超类型构造函数，一次是在创建子类型原型时，还有一次是在子类型构造函数内部。&lt;br&gt;这种模式集中了寄生式和组合式继承的优点。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color=[&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//第二次调用SuperType()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SuperType.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;,name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第一次调用SuperType()&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SuperType();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.constructor=SubType;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.sayAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType(&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第一次调用SuperType():给SubType.prototype写入两个属性name，color&lt;br&gt;第二次调用SuperType()：给instance1写入两个属性name，color&lt;br&gt;实例对象instance1上的两个属性就屏蔽了其原型对象SubType.prototype的两个同名属性。所以，组合模式的缺点就是在SubType.prototype上创建不必要的重复的属性。&lt;br&gt;寄生组合式继承基本模式：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;inheritPrototype&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;SubType,SuperType&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; prototype = object(superType.prototype);&lt;span class=&quot;comment&quot;&gt;//创建对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    prototype.constructor = SubType;&lt;span class=&quot;comment&quot;&gt;//增强对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SubType.prototype = prototype;&lt;span class=&quot;comment&quot;&gt;//制定对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;首先，创建超类型的一个副本；&lt;br&gt;其次，为副本添加constructor属性，使其指向子类型构造函数；&lt;br&gt;最后，将副本赋值给子类型原型。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SuperType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.color=[&lt;span class=&quot;string&quot;&gt;&quot;red&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;green&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;blue&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;SubType&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SuperType.call(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;inheritPrototype&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;SubType,SuperType&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; prototype = object(superType.prototype);&lt;span class=&quot;comment&quot;&gt;//创建对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    prototype.constructor = SubType;&lt;span class=&quot;comment&quot;&gt;//增强对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SubType.prototype = prototype;&lt;span class=&quot;comment&quot;&gt;//制定对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;SubType.prototype.sayAge = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; instance1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; SubType(&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;借用构造函数来继承实例属性，使用寄生式继承来继承超类型的原型，然后再将结果赋给子类型原型。这样既可以继承超类型的实例属性，也可继承超类型原型中的原型属性。这是最优解。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;原型链&quot;&gt;&lt;a href=&quot;#原型链&quot; class=&quot;headerlink&quot; title=&quot;原型链&quot;&gt;&lt;/a&gt;原型链&lt;/h1&gt;&lt;p&gt;JavaScript的继承主要依靠原型链来实现的。我们知道，构造函数，原型，和实例之间的关系：每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个原型对象的指针。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>实现侧边信息栏</title>
    <link href="http://yoursite.com/2016/08/25/sidebar/"/>
    <id>http://yoursite.com/2016/08/25/sidebar/</id>
    <published>2016-08-25T07:36:08.000Z</published>
    <updated>2016-10-15T15:41:55.122Z</updated>
    
    <content type="html">&lt;h1 id=&quot;TODO&quot;&gt;&lt;a href=&quot;#TODO&quot; class=&quot;headerlink&quot; title=&quot;TODO&quot;&gt;&lt;/a&gt;TODO&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;点击sidebar下方的关闭按钮（x），sidebar向左方滑出屏幕，关闭按钮向右方滑动，同时旋转为（+）。&lt;/li&gt;
&lt;li&gt;点击（+），sidebar向右滑动，加号（+）向左滑动，并旋转为（x）。&lt;/li&gt;
&lt;li&gt;点击sidebar上的菜单栏，相应的内容栏（从左向右）滑动。&lt;/li&gt;
&lt;li&gt;如果有已经打开的内容栏，则已打开的内容栏关闭，新点击的相应的内容栏从下向上滑动。&lt;/li&gt;
&lt;li&gt;打开的内容栏的右上方有关闭（&amp;lt;），点击后内容栏向右滑动关闭。&lt;/li&gt;
&lt;li&gt;如果已经有打开的内容栏，点击sidebar下方的关闭按钮，则sidebar关闭，已经打开的内容栏应该关闭。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;实现步骤&quot;&gt;&lt;a href=&quot;#实现步骤&quot; class=&quot;headerlink&quot; title=&quot;实现步骤&quot;&gt;&lt;/a&gt;实现步骤&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;HTML文档&lt;/li&gt;
&lt;li&gt;编写js，添加事件，函数和逻辑&lt;/li&gt;
&lt;li&gt;添加动画效果&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TODO&quot;&gt;&lt;a href=&quot;#TODO&quot; class=&quot;headerlink&quot; title=&quot;TODO&quot;&gt;&lt;/a&gt;TODO&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;点击sidebar下方的关闭按钮（x），sidebar向左方滑出屏幕，关闭按钮向右方滑动，同时旋转为（+）。&lt;/
    
    </summary>
    
    
      <category term="demo" scheme="http://yoursite.com/tags/demo/"/>
    
  </entry>
  
  <entry>
    <title>原生JavaScript与jQueryAPI对比</title>
    <link href="http://yoursite.com/2016/08/25/javascript-4/"/>
    <id>http://yoursite.com/2016/08/25/javascript-4/</id>
    <published>2016-08-25T07:36:08.000Z</published>
    <updated>2016-10-15T15:27:55.572Z</updated>
    
    <content type="html">&lt;h1 id=&quot;元素查找&quot;&gt;&lt;a href=&quot;#元素查找&quot; class=&quot;headerlink&quot; title=&quot;元素查找&quot;&gt;&lt;/a&gt;元素查找&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Node&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(id); &lt;span class=&quot;comment&quot;&gt;// document.getElementById(&#39;test&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(selectors);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//该方法接收一个css选择符，返回与该模式匹配的第一个元素，如果没有，返回null&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Document类型调用会在文档元素内容类查找，Element类型调用会该元素后代范围内查找&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// document.querySelector(&#39;#test div&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.doctype；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//doctype 是一个只读属性.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前文档关联的文档类型定义(DTD).&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//如果当前文档没有DTD,则该属性返回null.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在HTML文档中,如果文档有DTD,则该属性等价于document.firstChild.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//document.documentElement 是一个只读属性，返回文档对象（document）的根元素（例如，HTML文档的 &amp;lt;html&amp;gt; 元素）。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.head&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前文档中的 &amp;lt;head&amp;gt; 元素。如果有多个 &amp;lt;head&amp;gt; 元素，则返回第一个。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//document.head 是个只读属性&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.title&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取或设置文档的标题。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//title 是一个包含 document 标题的字符串。如果通过设置 document.title 将标题覆盖，则返回覆盖后的值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前文档中的&amp;lt;body&amp;gt;元素或者&amp;lt;frameset&amp;gt;元素.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//该属性是可写的,且为该属性赋的值必须是一个&amp;lt;body&amp;gt;元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// NodeList&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByClassName(names) &lt;span class=&quot;comment&quot;&gt;// document.getElementsByClassName(&#39;test&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByName(name) &lt;span class=&quot;comment&quot;&gt;// document.getElementsByName(&#39;demo&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(name) &lt;span class=&quot;comment&quot;&gt;// document.getElementsByTagName(&#39;div&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagNameNS(namespace, name) &lt;span class=&quot;comment&quot;&gt;// document.getElementsByTagNameNS(&#39;http://www.w3.org/1999/xhtml&#39;, &#39;div&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(selectors) &lt;span class=&quot;comment&quot;&gt;// document.querySelectorAll(&#39;#test div&#39;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.links&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//links 属性返回一个包含文档中所有具有 href 属性值的 &amp;lt;area&amp;gt; 元素 &amp;lt;a&amp;gt; 元素的集合&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.scripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回一个HTMLCollection对象,包含了当前文档中所有&amp;lt;script&amp;gt;元素的集合.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以像使用数组一样通过索引来获取其中包含的&amp;lt;script&amp;gt;元素.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.images&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//document.images 返回当前文档中所有 image 元素的集合.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.embeds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回一个HTMLCollection对象,包含了嵌入到当前文档中的所有的OBJECT对象&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.forms&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回一个包含了当前文档中的所有 form 元素的集合 (一个HTMLCollection对象)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//var selectForm = document.forms[index];&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//var selectFormElement = document.forms[index].elements[index];&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery：选择器&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;126&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;127&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;128&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;129&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;130&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$( &lt;span class=&quot;string&quot;&gt;&quot;#id&quot;&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//id选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$( &lt;span class=&quot;string&quot;&gt;&quot;.class&quot;&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//class选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$( &lt;span class=&quot;string&quot;&gt;&quot;element&quot;&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//元素选择器，根据给定（html）标记名称选择所有的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$( &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt; )&lt;span class=&quot;comment&quot;&gt;//全选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;parent &amp;gt; child&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//子选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;ancestor descentdant&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//后代选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;prev + next&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//相邻兄弟选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;prev ~ next&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//一般兄弟选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//基本筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:first&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配的第一个元素，如第一个div元素为$(&quot;.div:first&quot;).css(&quot;color&quot;,&quot;#CD00CD&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:last&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配的最后一个元素，如最后一个div元素为$(&quot;.div:last&quot;).css(&quot;color&quot;,&quot;#CD00CD&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:not(selector)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择不包含括号里面的选择器元素，如 选中所有没有checked属性的input元素后的p元素，赋予颜色$(&quot;input:not(checked)+p  &quot;).css(&quot;background-color&quot;, &quot;#CD00CD&quot;);&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;eq(index)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在匹配的集合选择索引值等于index的元素【eq=equal,等于的意思】&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:even&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择索引值为偶数的元素，从0开始计数。【even偶数】&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:odd&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择索引值为奇数的元素，从0开始计数。【odd奇数】&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:gt(index)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择匹配集合中，所有大于给定index(索引值)的元素。【gt=greater than(意思是大于)】&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:lt(index)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择匹配集合中，所有小于等于给定index(索引值)的元素。【less than(意思是小于)】&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:header&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有标题元素，如h1,h2,h3等&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:lang(language)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定语言的所有元素。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:root&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择该文档的根元素。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:animated&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有正在执行动画效果的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//内容筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:contains(text)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有包含指定文本的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:parent&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有含有子元素或者文本的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:empty&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有没有子元素或者文本的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:has(selector)&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择元素中至少包含指定元素的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可见性筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:visible&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有显示的元素，如果元素任然占据空间布局时，是被浏览器认为是可见的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所有visibility:hidden和opacity:0 仍然被认为是可见的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:hidden&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有隐藏的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//display的值是none。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//type=&quot;hidden&quot;的表单元素。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//宽度和高度都显式设置为0。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//一个祖先元素是隐藏的，该元素是不会在页面上显示&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//visibility的值是hidden&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//opacity的指是0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//属性筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute = &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定属性值等于给定字符串或以该字符串为前缀（该字符串后跟一个连字符&quot;-&quot;）的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute *= &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定属性具有包含一个给定的子字符串的元素。（选择给定的属性是以包含某些值得元素）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute ~= &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定属性用空格分隔的值中包含一个给定值得元素。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute = &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 选择指定属性是给定值得元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute != &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择不存在指定属性，或者指定的属性值不等于给定值得元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute ^= &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定属性是以给定字符串开始的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute $= &#39;value&#39;]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择指定属性是以给定值结尾的元素。这个比较是区分大小写的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attribute]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有具有指定属性的元素，该属性是可以是任何值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;[attributeFilter1][attributeFilterN]&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择匹配所有指定的属性筛选器的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//子元素筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.fist-chill&quot;&lt;/span&gt;）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有父级元素下的第一个字元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.last-child&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所要父级下的最后一个子元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.only-child&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//唯一的子元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.nth-child&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所有父级下第n个子元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;.nth-last-child&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所有父级下倒数第n个子元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//表单选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;:input&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//选择所有input、textarea、select和button元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:text&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有文本框&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:password&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有密码档&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:radio&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有单选按钮&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:checkbox&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有复选框&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:submit&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有提交按钮&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:image&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有图像域&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:reset&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有重置按钮&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:button&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有按钮&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;input:file&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//匹配所有文件域&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//表单对象属性筛选选择器&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;:enabled&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//所有可用的input&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;:disabled&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//所有不可用的input&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;:checked&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//所有被选中的选项框&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;:selected&#39;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;//所有被选中的下拉框&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//特殊选择器this&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//$(this)代表的上下文对象是一个jquery的上下文对象，可以调用jQuery的方法和属性值。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//this，表示当前的上下文对象是一个html对象，可以调用html对象所拥有的属性和方法。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;class-属性&quot;&gt;&lt;a href=&quot;#class-属性&quot; class=&quot;headerlink&quot; title=&quot;class 属性&quot;&gt;&lt;/a&gt;class 属性&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// add class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.className += &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt; + className;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// has class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hasClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el,className&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;(^| )&#39;&lt;/span&gt; + className + &lt;span class=&quot;string&quot;&gt;&#39;( |$)&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;gi&#39;&lt;/span&gt;).test(el.className);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// toggle class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;toggleClass&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el,className&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; classes = el.className.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; existingIndex = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = classes.length; i--;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (classes[i] === className)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      existingIndex = i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (existingIndex &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    classes.splice(existingIndex, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    classes.push(className);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  el.className = classes.join(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// remove class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el,className&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  el.className = el.className.replace(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;RegExp&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;(^|\\b)&#39;&lt;/span&gt; + className.split(&lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;).join(&lt;span class=&quot;string&quot;&gt;&#39;|&#39;&lt;/span&gt;) + &lt;span class=&quot;string&quot;&gt;&#39;(\\b|$)&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;gi&#39;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39; &#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie 10&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.classList.add(className); &lt;span class=&quot;comment&quot;&gt;// add class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.classList.remove(className); &lt;span class=&quot;comment&quot;&gt;// remove class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.classList.contains(className); &lt;span class=&quot;comment&quot;&gt;// has class&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.classList.toggle(className); &lt;span class=&quot;comment&quot;&gt;// toggle class&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jquery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.addClass();&lt;span class=&quot;comment&quot;&gt;//为每个匹配的元素添加指定的样式类名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.hasClass();&lt;span class=&quot;comment&quot;&gt;//确定任何一个匹配元素是否有被分配给定的（样式）类。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.removeClass();&lt;span class=&quot;comment&quot;&gt;//移除集合中每个匹配元素上一个，多个或全部样式。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$.toggleClass();&lt;span class=&quot;comment&quot;&gt;//在匹配的元素集合中的每个元素上切换属性。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Node-Element操作&quot;&gt;&lt;a href=&quot;#Node-Element操作&quot; class=&quot;headerlink&quot; title=&quot;Node,Element操作&quot;&gt;&lt;/a&gt;Node,Element操作&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建元素节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; el = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 复制节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.cloneNode(&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// 默认为false(克隆节点及其后代), true(克隆节点及其属性，以及后代)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 向节点添加最后一个子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;parent.appendChild(el);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在指定子节点之前插入新的子节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;parent.insertBefore(el, parent.childNodes[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// insertAdjacentHTML方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.insertAdjacentHTML(where, htmlString);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.insertAdjacentHTML(&lt;span class=&quot;string&quot;&gt;&#39;beforeBegin&#39;&lt;/span&gt;, htmlString); &lt;span class=&quot;comment&quot;&gt;// 在该元素前插入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.insertAdjacentHTML(&lt;span class=&quot;string&quot;&gt;&#39;afterBegin&#39;&lt;/span&gt;, htmlString); &lt;span class=&quot;comment&quot;&gt;// 在该元素第一个子元素前插入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.insertAdjacentHTML(&lt;span class=&quot;string&quot;&gt;&#39;beforeEnd&#39;&lt;/span&gt;, htmlString);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在该元素最后一个子元素后面插入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.insertAdjacentHTML(&lt;span class=&quot;string&quot;&gt;&#39;afterEnd&#39;&lt;/span&gt;, htmlString); &lt;span class=&quot;comment&quot;&gt;// 在该元素后插入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 删除节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.parentNode.removeChild(el);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 兄弟节点 ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; siblings = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.filter.call(el.parentNode.children, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;child&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; child !== el;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 下一个兄弟节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;nextElementSibling&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123; el = el.nextSibling; &amp;#125; &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( el &amp;amp;&amp;amp; el.nodeType !== &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; el;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nextElementSibling(el);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.nextElementSibling;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 上一个兄弟节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;previousElementSibling&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    el = el.previousSibling;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ( el &amp;amp;&amp;amp; el.nodeType !== &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; el;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;previousElementSibling(el);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.previousElementSibling;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// Children&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; children = [];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = el.children.length; i--;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Skip comment nodes on IE8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (el.children[i].nodeType != &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    children.unshift(el.children[i]);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Element.children&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//是一个只读属性，返回一个包含当前元素的子元素的集合&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//该集合为一个即时更新的（live）HTMLCollection。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以使用 elementNodeReference.children[1].nodeName 来获取某个子元素的标签名称&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Element.firstElementChild&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前元素的第一个子元素节点，如果没有子元素节点，则返回null。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Element.lastElementChild&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前元素的最后一个子元素节点,如果没有子元素节点,则返回null.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node.firstChild&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回当前节点在 DOM 树中的第一个子节点, 如果没有子节点，则返回 null。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node.childNodes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回包含指定节点的子节点的集合，该集合为即时更新的集合（live collection）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 父节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Node.parentNode&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回指定的节点在DOM树中的父节点.&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;HTML结构&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 复制&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.clone();&lt;span class=&quot;comment&quot;&gt;//.clone()方法深度 复制所有匹配的元素集合，包括所有匹配元素、匹配元素的下级元素、文字节点。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DOM 插入现有元素内&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.append()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将特定内容插入到每个匹配元素里面的最后面，作为它的最后一个子元素（last child）, (如果要作为第一个子元素 （first child）, 用.prepend()).&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//appendTo()与.append()实现同样的功能，语法不同&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.prepend()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将指定元素插入到匹配元素里面，作为它的第一个子元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.prependTo()与.prepend()实现同样的功能，语法不同&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DOM 插入现有元素外&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.after()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//向元素后面添加html代码，如果元素后面有元素，则将元素后移，将html代码插入&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.insertAfter()与 .after()实现同样的功能，语法不同&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.before()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在匹配元素的前面插入内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.insertBefore()与 .before()实现同样的功能，语法不同&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//DOM 移除&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.detach()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//保留数据的删除操作，即从当前页面中移除该元素，但保留这个元素的内存模型对象。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.empty()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//移除指定元素所有子节点，不删除本身节点&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.remove()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//会将元素本身以及元素内部一切包括绑定的事件以及jQuery数据删除，&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//可以选择性删除指定节点通过传递参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//兄弟元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.prev()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//紧邻的前一个同辈元素的元素集合&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.prevAll()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所有前面的兄弟元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.siblings()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获得匹配元素集合中每个元素的兄弟元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.next()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//紧邻的后面同辈元素的元素集合&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.nextAll()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//所有下面的同辈元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Children&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.children()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//父子查找，查找合集中第一级子元素（仅儿子辈）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.find()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//后代查找&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//父元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.parent()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//查找父元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.parents()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//祖先元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.closest()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//向上查找，从元素本身开始，向上匹配，返回最先匹配的祖先元素&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;属性操作&quot;&gt;&lt;a href=&quot;#属性操作&quot; class=&quot;headerlink&quot; title=&quot;属性操作&quot;&gt;&lt;/a&gt;属性操作&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取属性值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.getAttribute(&lt;span class=&quot;string&quot;&gt;&#39;alt&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置属性值&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.setAttribute(&lt;span class=&quot;string&quot;&gt;&#39;alt&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;图片描述&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.attr()&lt;span class=&quot;comment&quot;&gt;//获取和设置元素属性&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.removeAttr()&lt;span class=&quot;comment&quot;&gt;//为匹配的元素集合中的每个元素中移除一个属性（attribute）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.prop()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.removeProp()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Attribute就是dom节点自带的属性，html中常用的id、class、title、align等&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//Property是这个DOM元素作为对象，其附加的内容，例如,tagName, nodeName, nodeType,, defaultChecked, 和 defaultSelected 使用.prop()方法进行取值或赋值等&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取Attribute就需要用attr，获取Property就需要用prop&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;内容操作&quot;&gt;&lt;a href=&quot;#内容操作&quot; class=&quot;headerlink&quot; title=&quot;内容操作&quot;&gt;&lt;/a&gt;内容操作&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.innerHTML&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置元素内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.innerHTML = string&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取元素内容(包含元素自身)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.outerHTML&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置元素内容(包含元素自身)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.outerHTML = string&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取文本内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.innerText&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.textContent&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置文本内容&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.innerText = string&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.textContent = string&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jquery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.html()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取集合中第一个匹配元素的HTML内容 设置每一个匹配元素的html内容。对应DOM的innerHTML属性&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.text()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//得到匹配元素集合中每个元素的文本内容结合，包括他们的后代，或设置匹配元素集合中每个元素的文本内容为指定的文本内容。返回一个字符串，包含所有匹配元素的合并文本。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.val()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//用于处理表单元素的值，比如 input, select 和 textarea。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;CSS操作&quot;&gt;&lt;a href=&quot;#CSS操作&quot; class=&quot;headerlink&quot; title=&quot;CSS操作&quot;&gt;&lt;/a&gt;CSS操作&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 获取css样式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.currentStyle[attrName]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getComputedStyle(el)[attrName]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 伪类&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getComputedStyle(el , &lt;span class=&quot;string&quot;&gt;&quot;:after&quot;&lt;/span&gt;)[attrName];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置CSS样式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.style.display = &lt;span class=&quot;string&quot;&gt;&#39;none&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.css()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;//获取元素样式属性的计算值或者设置元素的CSS属性&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;位置大小&quot;&gt;&lt;a href=&quot;#位置大小&quot; class=&quot;headerlink&quot; title=&quot;位置大小&quot;&gt;&lt;/a&gt;位置大小&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// getBoundingClientRect返回一个对象，包含top,left,right,bottom,width,height&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// width、height 元素自身宽高&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// top 元素上外边界距窗口最上面的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// right 元素右外边界距窗口最上面的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// bottom 元素下外边界距窗口最上面的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// left 元素左外边界距窗口最上面的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// width 元素自身宽(包含border,padding)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// height 元素自身高(包含border,padding)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元素在页面上的偏移量&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; rect = el.getBoundingClientRect()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  top: rect.top + &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollTop,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  left: rect.left + &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollLeft&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元素自身宽(包含border,padding)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.offsetWidth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元素自身高(包含border,padding)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.offsetHeight&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元素的左外边框至包含元素的左内边框之间的像素距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.offsetLeft&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 元素的上外边框至包含元素的上内边框之间的像素距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;el.offsetTop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//通常认为 &amp;lt;html&amp;gt; 元素是在 Web 浏览器的视口中滚动的元素（IE6 之前版本运行在混杂模式下时是 &amp;lt;body&amp;gt; 元素）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//因此，带有垂直滚动条的页面总高度就是 document.documentElement.scrollHeight&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在没有滚动条的情况下，元素内容的总高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scrollHeight&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在没有滚动条的情况下，元素内容的总宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scrollWidth&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 被隐藏在内容区域左侧的像素数。通过设置这个属性可以改变元素的滚动位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scrollLeft&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 被隐藏在内容区域上方的像素数。通过设置这个属性可以改变元素的滚动位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;scrollTop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 视口大小&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; pageWidth = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerWidth,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pageHeight = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.innerHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; pageWidth != &lt;span class=&quot;string&quot;&gt;&quot;number&quot;&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.compatMode == &lt;span class=&quot;string&quot;&gt;&quot;CSS1Compat&quot;&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pageWidth = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientWidth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pageHeight = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ie6混杂模式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pageWidth = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientWidth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    pageHeight = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.height()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.height()返回一个没有单位的数值，当一个元素的高度需要数学计算的时候推荐使用.height() 方法。总是返回内容高度,不管CSS box-sizing属性值。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.height(&#39;value&#39;)设置的容器宽度是根据CSS box-sizing属性来定的, 将这个属性值改成border-box，将造成这个函数改变这个容器的outerHeight，而不是原来的内容高度。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.width()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.innerHeight()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//为匹配的元素集合中获取第一个元素的当前计算高度值,包括padding，但是不包括border。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.innerWidth()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.outerHeight()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在.outerHeight()计算中总是包含padding-top ,padding-bottom 和 border-top，border-bottom ；如果includeMargin参数是true，那么margin (top 和 bottom)也会被包含。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.outerWidth()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.position()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取匹配元素中第一个元素的当前坐标，相对于offset parent的坐标。( 译者注：offset parent指离该元素最近的而且被定位过的祖先元素 ),.position()返回一个包含 top 和 left属性的对象.&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.scrollLeft()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取匹配的元素集合中第一个元素的当前水平滚动条的位置或设置每个匹配元素的水平滚动条位置。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.scrollTop()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取匹配的元素集合中第一个元素的当前垂直滚动条的位置或设置每个匹配元素的垂直滚动条位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.offset()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//在匹配的元素集合中，获取的第一个元素的当前坐标，或设置每一个元素的坐标，坐标相对于文档。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// 事件触发&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if (document.createEvent) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // ie9+&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  var event = document.createEvent(&amp;apos;HTMLEvents&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  event.initEvent(&amp;apos;change&amp;apos;, true, false);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  el.dispatchEvent(event);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125; else &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  // ie8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  el.fireEvent(&amp;apos;onchange&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// event对象&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var event = window.event||event;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 事件的目标节点&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var target = event.target || event.srcElement;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// 事件代理&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ul.addEventListener(&amp;apos;click&amp;apos;, function(event) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  if (event.target.tagName.toLowerCase() === &amp;apos;li&amp;apos;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(event.target.innerHTML)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//事件绑定&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;elem&quot;&lt;/span&gt;).on(&lt;span class=&quot;string&quot;&gt;&quot;mousedown mouseup&quot;&lt;/span&gt;,fn)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//解除事件绑定&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&quot;elem&quot;&lt;/span&gt;).off(&lt;span class=&quot;string&quot;&gt;&quot;mousedown&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//事件对象event&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//事件对象是用来记录一些事件发生时的相关信息的对象。事件对象只有事件发生时才会产生，并且只能是事件处理函数内部访问，在所有事件处理函数运行结束后，事件对象就被销毁&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.target&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//event.target代表当前触发事件的元素，可以通过当前元素对象的一系列属性来判断是不是我们想要的元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.type&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取事件的类型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.pageX 和 event.pageY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取鼠标当前相对于页面的坐标&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.preventDefault()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//阻止默认行为&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.stopPropagation()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//阻止事件冒泡&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.which&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取在鼠标单击时，单击的是鼠标的哪个键&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;event.currentTarget&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 在事件冒泡过程中的当前DOM元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//jQuery自定义事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自定义事件对象，是jQuery模拟原生实现的&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//自定义事件可以传递参数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;trigger();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//根据绑定到匹配元素的给定的事件类型执行所有的处理程序和行为，trigger除了能够触发浏览器事件，同时还支持自定义事件，并且自定义事件还支持传递参数。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.triggerHandler()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.trigger() 相似，不冒泡，仅影响第一个匹配的元素，不会触发事件的默认行为，返回最后一个处理的事件的返回值。如果没有触发任何事件，会返回 undefined。&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;DOM加载完毕&quot;&gt;&lt;a href=&quot;#DOM加载完毕&quot; class=&quot;headerlink&quot; title=&quot;DOM加载完毕&quot;&gt;&lt;/a&gt;DOM加载完毕&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ready&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.readyState != &lt;span class=&quot;string&quot;&gt;&#39;loading&#39;&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;DOMContentLoaded&#39;&lt;/span&gt;, fn);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.attachEvent(&lt;span class=&quot;string&quot;&gt;&#39;onreadystatechange&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.readyState != &lt;span class=&quot;string&quot;&gt;&#39;loading&#39;&lt;/span&gt;)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        fn();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.ready()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//当DOM准备就绪时，指定一个函数来执行。&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.load()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//为 JavaScript 的 &quot;load&quot; 事件绑定一个处理函数,所有元素被加载之后才能触发该事件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.unload()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//为 JavaScript 的 &quot;unload&quot; 事件绑定一个处理函数&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;绑定上下文&quot;&gt;&lt;a href=&quot;#绑定上下文&quot; class=&quot;headerlink&quot; title=&quot;绑定上下文&quot;&gt;&lt;/a&gt;绑定上下文&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fn.apply(context, &lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fn.bind(context);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;去除空格&quot;&gt;&lt;a href=&quot;#去除空格&quot; class=&quot;headerlink&quot; title=&quot;去除空格&quot;&gt;&lt;/a&gt;去除空格&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;string.replace(&lt;span class=&quot;regexp&quot;&gt;/^\s+|\s+$/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;string.trim();&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Ajax&quot;&gt;&lt;a href=&quot;#Ajax&quot; class=&quot;headerlink&quot; title=&quot;Ajax&quot;&gt;&lt;/a&gt;Ajax&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// GET&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.open(&lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;user.php?fname=Bill&amp;amp;lname=Gates&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// false（同步）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.send();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.onreadystatechange = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.readyState === &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status &amp;gt;= &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.status &amp;lt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// Success!&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.responseText);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;// 错误&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.onload = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (request.status &amp;gt;= &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; &amp;amp;&amp;amp; request.status &amp;lt; &lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Success!&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; data = &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(request.responseText);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 服务器返回出错&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.onerror = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 连接错误&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// POST&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; request = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; XMLHttpRequest();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.open(&lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;user.php&#39;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// false（同步）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.setRequestHeader(&lt;span class=&quot;string&quot;&gt;&quot;Content-type&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;request.send(dataString);T&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jquery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: &lt;span class=&quot;string&quot;&gt;&quot;POST&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  url: &lt;span class=&quot;string&quot;&gt;&quot;some.php&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  data: &amp;#123; name: &lt;span class=&quot;string&quot;&gt;&quot;John&quot;&lt;/span&gt;, location: &lt;span class=&quot;string&quot;&gt;&quot;Boston&quot;&lt;/span&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;).done(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; msg &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  alert( &lt;span class=&quot;string&quot;&gt;&quot;Data Saved: &quot;&lt;/span&gt; + msg );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;JSON处理&quot;&gt;&lt;a href=&quot;#JSON处理&quot; class=&quot;headerlink&quot; title=&quot;JSON处理&quot;&gt;&lt;/a&gt;JSON处理&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.parse(string);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.String(&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;节点遍历&quot;&gt;&lt;a href=&quot;#节点遍历&quot; class=&quot;headerlink&quot; title=&quot;节点遍历&quot;&gt;&lt;/a&gt;节点遍历&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt; nodeList, callback &lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.forEach)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ie9+&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.prototype.forEach.call( nodeList, callback );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// ie8&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; nodeList.length; i++)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      callback(nodeList[i], i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;forEach(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(selector),&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;el, i&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jQuery:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.each()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//for循环的迭代器，它会迭代jQuery对象合集中的每一个DOM元素。每次回调函数执行时，会传递当前循环次数作为参数(从0开始计数）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;.add()&lt;span class=&quot;comment&quot;&gt;//添加元素到匹配的元素集合&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考链接：&lt;br&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000002650240&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JavaScript操作DOM的那些坑&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;元素查找&quot;&gt;&lt;a href=&quot;#元素查找&quot; class=&quot;headerlink&quot; title=&quot;元素查找&quot;&gt;&lt;/a&gt;元素查找&lt;/h1&gt;&lt;p&gt;JavaScript:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>瀑布流布局</title>
    <link href="http://yoursite.com/2016/08/25/waterfall/"/>
    <id>http://yoursite.com/2016/08/25/waterfall/</id>
    <published>2016-08-25T07:36:08.000Z</published>
    <updated>2016-10-17T01:48:41.595Z</updated>
    
    <content type="html">&lt;p&gt;瀑布流布局视觉表现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参差不齐的多栏布局，图片等宽不等高，下一行的第一张图片加载上一行图片高度最小的下面。&lt;/li&gt;
&lt;li&gt;图片持续加载到当前尾部。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;效果实现方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原生javascript&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;li&gt;css3 columns 多栏布局&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;HTML文档&quot;&gt;&lt;a href=&quot;#HTML文档&quot; class=&quot;headerlink&quot; title=&quot;HTML文档&quot;&gt;&lt;/a&gt;HTML文档&lt;/h1&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;瀑布流布局&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;css/style.css&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- &amp;lt;link type=&quot;text/css&quot; rel=&quot;stylesheet&quot; href=&quot;css/style.css&quot;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;script src=&quot;http://libs.baidu.com/jquery/1.10.2/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/script1.js&quot;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pic&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;images/P_00.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;pic&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;images/P_01.jpg&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;alt&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;hello&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;原生JavaScript&quot;&gt;&lt;a href=&quot;#原生JavaScript&quot; class=&quot;headerlink&quot; title=&quot;原生JavaScript&quot;&gt;&lt;/a&gt;原生JavaScript&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;图片定位&lt;br&gt;图片等宽，设置显示图片的列数，页面宽除以box的宽度&lt;br&gt;封装在waterfall()函数。先取得浏览器的可视宽度，然后通过除以每个展示框的宽度来计算出一排可以展示多少个展示框的，然后通过一个数组 hArr来保持每一列的高度。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;waterfall&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parent,box&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将.main下所有.box取出来,该功能封装在getByClass()中&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oParent = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(parent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBoxs = oParent.getElementsByClassName(&lt;span class=&quot;string&quot;&gt;&#39;box&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//计算列数 页面宽除以box的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBoxW = oBoxs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].offsetWidth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cols = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientWidth/oBoxW);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置main的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    oParent.style.cssText = &lt;span class=&quot;string&quot;&gt;&quot;width:&quot;&lt;/span&gt;+oBoxW*cols+&lt;span class=&quot;string&quot;&gt;&#39;px;margin:0 auto&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//hArr数组存放每一列高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hArr=[];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将box放入列高最短列&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; oBoxs.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i&amp;lt;cols) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr.push(oBoxs[i].offsetHeight);&lt;span class=&quot;comment&quot;&gt;//第一行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minH = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.min.apply(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,hArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index = getMinhIndex(hArr,minH);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.position = &lt;span class=&quot;string&quot;&gt;&#39;absolute&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.top = minH + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//oBoxs[i].style.left=oBoxW*index+&#39;px&#39;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.left = oBoxs[index].offsetLeft + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//更新最短列高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr[index] += oBoxs[i].offsetHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;图片排序&lt;br&gt;功能：下一行的第一张图片加载上一行图片高度最小的下面，依然封装在waterfall()函数中。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;waterfall&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;parent,box&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将.main下所有.box取出来,该功能封装在getByClass()中&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oParent = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(parent);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBoxs = oParent.getElementsByClassName(&lt;span class=&quot;string&quot;&gt;&#39;box&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//计算列数 页面宽除以box的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBoxW = oBoxs[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;].offsetWidth;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cols = &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientWidth/oBoxW);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置main的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    oParent.style.cssText = &lt;span class=&quot;string&quot;&gt;&quot;width:&quot;&lt;/span&gt;+oBoxW*cols+&lt;span class=&quot;string&quot;&gt;&#39;px;margin:0 auto&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//hArr数组存放每一列高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hArr=[];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将box依次放入列高最小的位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; oBoxs.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (i&amp;lt;cols) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr.push(oBoxs[i].offsetHeight);&lt;span class=&quot;comment&quot;&gt;//第一行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minH= &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.min.apply(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,hArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; index= getMinhIndex(hArr,minH);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.position  = &lt;span class=&quot;string&quot;&gt;&#39;absolute&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.top = minH+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//oBoxs[i].style.left=oBoxW*index+&#39;px&#39;;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            oBoxs[i].style.left = oBoxs[index].offsetLeft+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//修改每一列的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr[index] += oBoxs[i].offsetHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//获取数组中高度最小的索引&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getMinhIndex&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;arr,val&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; arr) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (arr[i]==val) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;图片持续加载&lt;br&gt;window.onscroll事件监听滚动条滚动事件，触发一个回调函数，先检测是否具有加载数据块的条件。思路：&lt;br&gt;判定最后一个盒子，根据wallterfall函数，下一个盒子一定会落在最短列上，而且马上更新最短列。缺点就是当某一张图片高度太大时，加载时周围可能会有空白。在checkScrollSlide()函数中最后一个盒子是指$(‘#main’)中的最后一个，就是已经加载的所有盒子的最后一个，随着滚动条下来$(‘#main’)中的盒子是不断增加的，被加载的盒子数量越来愈多，列高不断增加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onload=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    waterfall(&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//模拟后台传给前端渲染的数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dataInt=&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;:[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;]&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.onscroll=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkScrollSlide) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oParent=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//父级元素&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; dataInt.data.length; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//添加class为box的div&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBox=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oBox.className=&lt;span class=&quot;string&quot;&gt;&#39;box&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oParent.appendChild(oBox);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//添加class为pic的div&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oPic=&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oBox.className=&lt;span class=&quot;string&quot;&gt;&#39;pic&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oBox.appendChild(oPic);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//添加图片&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oImg= &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&#39;img&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oImg.src=&lt;span class=&quot;string&quot;&gt;&quot;images/&quot;&lt;/span&gt;+dataInt.data[i].src;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                oPic.appendChild(oImg);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//重新为新增的盒子定位&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            waterfall(&lt;span class=&quot;string&quot;&gt;&quot;main&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;box&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//检测是否具有加载数据块的条件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkScrollSlide&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oParent = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;main&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBoxs = oParent.getElementsByClassName(&lt;span class=&quot;string&quot;&gt;&#39;box&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//待加载图片距离父元素的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;  lastBoxH = oBoxs[oBoxs.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;].offsetTop + &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(oBoxs[oBoxs.length&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;].offsetHeight/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取滚动条滚动的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollTop = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.scrollTop||&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.scrollTop;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取窗口可视区的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; height = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.body.clientHeight||&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.documentElement.clientHeight;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (lastBoxH&amp;lt;scrollTop+height)?&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;jQuery&quot;&gt;&lt;a href=&quot;#jQuery&quot; class=&quot;headerlink&quot; title=&quot;jQuery&quot;&gt;&lt;/a&gt;jQuery&lt;/h1&gt;&lt;p&gt;思路与上面一致&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;).ready(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    waterfall();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//模拟后台传给前端渲染的数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; dateInt=&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;data&quot;&lt;/span&gt;:[&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;src&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;P_011.jpg&#39;&lt;/span&gt;&amp;#125;]&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(windows).scroll(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/* 添加滚动条滚动事件 */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (checkScrollSlide) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $.each(dataInt.data, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;key, val&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oBox=$(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div&amp;gt;&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;box&#39;&lt;/span&gt;).appendTo($(&lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; oPic=$(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;div&amp;gt;&#39;&lt;/span&gt;).addClass(&lt;span class=&quot;string&quot;&gt;&#39;pic&#39;&lt;/span&gt;).appendTo($(oBox));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 $(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;img&amp;gt;&#39;&lt;/span&gt;).attr(&lt;span class=&quot;string&quot;&gt;&#39;src&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;image/&#39;&lt;/span&gt;+$(val).attr(&lt;span class=&quot;string&quot;&gt;&#39;src&#39;&lt;/span&gt;)).appendTo($(oPic));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                 waterfall();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//动态添加瀑布图片的功能函数&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;waterfall&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $boxs=$(&lt;span class=&quot;string&quot;&gt;&quot;#main&amp;gt;div&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//一个图片框的宽&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; w=$boxs.eq(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;).outerWidth();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//计算列数 页面宽除以box的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cols=&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor($(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).width()/w);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置main的宽度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $(&lt;span class=&quot;string&quot;&gt;&#39;#main&#39;&lt;/span&gt;).width(w*cols).css(&lt;span class=&quot;string&quot;&gt;&#39;margin&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;0 auto&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//存放每一列高度的数组&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hArr=[];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//将box依次放入列高最小的位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    $boxs.each(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;index, el&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; h=$boxs.eq(index).outerHeight();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (index&amp;lt;cols) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//第一行&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr[index]=h;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//数组HArr中的最小值minH&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;  minH= &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.min.apply(&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;,hArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//获取数组中高度最小的索引&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; minHIndex=$.inArray(minH, hArr);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            $(el).css(&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;position&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;absolute&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;top&#39;&lt;/span&gt;:minH+ &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;left&#39;&lt;/span&gt;:minHIndex*w+&lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//更新添加了图片后的列高&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            hArr[minHIndex]+=$boxs.eq(index).outerHeight();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//检测是否具有加载数据块的条件&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;checkScrollSlide&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; $lastBox=$(&lt;span class=&quot;string&quot;&gt;&#39;#main&amp;gt;div&#39;&lt;/span&gt;).last();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;//待加载图片距离父元素的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; lastBoxDis=$lastBox.offset().top+&lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor($lastBox.outerHeight()/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获取滚动条滚动的距离&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; scrollTop=$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).scrollTop();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//获得窗口的高度&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt;  documentH=$(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;).height();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (lastBoxDis&amp;lt;scrollTop+documentH)?&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;:&lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;css3-columns-多栏布局&quot;&gt;&lt;a href=&quot;#css3-columns-多栏布局&quot; class=&quot;headerlink&quot; title=&quot;css3 columns 多栏布局&quot;&gt;&lt;/a&gt;css3 columns 多栏布局&lt;/h1&gt;&lt;p&gt;column-width计算方法是窗口宽度除以定义的column-width，所以column-count与column-width不必同时出现。&lt;br&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-id&quot;&gt;#main&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-webkit-column-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;202px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-moz-column-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;202px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;-o-column-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;202px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;column-width&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;202px&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;方式比较&quot;&gt;&lt;a href=&quot;#方式比较&quot; class=&quot;headerlink&quot; title=&quot;方式比较&quot;&gt;&lt;/a&gt;方式比较&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;javascript原生需要计算，列数 = 窗口宽度/图片框宽度，图片定位是根据每一列图片框的高度计算的。&lt;/li&gt;
&lt;li&gt;浏览器自动计算，性能高，但是图片排序按照垂直顺序排列。&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;瀑布流布局视觉表现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参差不齐的多栏布局，图片等宽不等高，下一行的第一张图片加载上一行图片高度最小的下面。&lt;/li&gt;
&lt;li&gt;图片持续加载到当前尾部。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;效果实现方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;原生javascript&lt;/li&gt;
&lt;li&gt;jQuery&lt;/li&gt;
&lt;li&gt;css3 columns 多栏布局&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习笔记之This</title>
    <link href="http://yoursite.com/2016/08/22/javascript-1/"/>
    <id>http://yoursite.com/2016/08/22/javascript-1/</id>
    <published>2016-08-22T09:48:08.000Z</published>
    <updated>2016-10-10T01:13:57.280Z</updated>
    
    <content type="html">&lt;p&gt;我们知道，this对象是在运行时基于函数的执行环境绑定的：在全局函数中，this等于window，当函数被作为某个对象方法调用时，this等于那个对象。匿名函数的执行环境具有全局性，因此this指向window。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;全局环境&quot;&gt;&lt;a href=&quot;#全局环境&quot; class=&quot;headerlink&quot; title=&quot;全局环境&quot;&gt;&lt;/a&gt;全局环境&lt;/h1&gt;&lt;p&gt;在全局环境中（在任何函数体外部），this指代全局对象，无论是否在严格模式下。&lt;/p&gt;
&lt;h1 id=&quot;函数环境&quot;&gt;&lt;a href=&quot;#函数环境&quot; class=&quot;headerlink&quot; title=&quot;函数环境&quot;&gt;&lt;/a&gt;函数环境&lt;/h1&gt;&lt;p&gt;在函数内部，this的值取决与函数是如何被调用的。&lt;/p&gt;
&lt;h2 id=&quot;直接调用&quot;&gt;&lt;a href=&quot;#直接调用&quot; class=&quot;headerlink&quot; title=&quot;直接调用&quot;&gt;&lt;/a&gt;直接调用&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;非严格模式&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f1() === &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;f1()是在全局上下文调用的，this 的值总是一个对象且默认为全局对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;严格模式&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;  &quot;use strict&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// 这里是严格模式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;f2() === &lt;span class=&quot;literal&quot;&gt;undefined&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在严格模式下，this 是在进入运行环境时设置的。若没有定义，this的值将维持undefined状态。&lt;/p&gt;
&lt;h2 id=&quot;对象方法中&quot;&gt;&lt;a href=&quot;#对象方法中&quot; class=&quot;headerlink&quot; title=&quot;对象方法中&quot;&gt;&lt;/a&gt;对象方法中&lt;/h2&gt;&lt;p&gt;当以对象方法的方式调用时，this是调用该函数的对象，this的绑定只受最靠近的成员引用的影响。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &amp;#123;prop: &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;independent&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.prop;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;o.b = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  g: independent,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  prop: &lt;span class=&quot;number&quot;&gt;42&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(o.b.g()); &lt;span class=&quot;comment&quot;&gt;// logs 42&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在原型链上，this指向是调用这个方法的对象，表现的好像这个方法存在于这个对象上一样。&lt;/p&gt;
&lt;h2 id=&quot;构造函数&quot;&gt;&lt;a href=&quot;#构造函数&quot; class=&quot;headerlink&quot; title=&quot;构造函数&quot;&gt;&lt;/a&gt;构造函数&lt;/h2&gt;&lt;p&gt;this与即将被创建的新对象绑定。&lt;br&gt;当构造器返回的默认值是一个this引用的对象时，手动的设置了返回对象，与this绑定的默认对象被取消，如果返回值不是一个对象，返回this。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Hello1&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.me = &lt;span class=&quot;string&quot;&gt;&quot;Kong&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Hello1();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(f1.me); &lt;span class=&quot;comment&quot;&gt;//Kong&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Hello2&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.he = &lt;span class=&quot;string&quot;&gt;&quot;Wang&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;she:&lt;span class=&quot;string&quot;&gt;&quot;Liu&quot;&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; f2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Hello2();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(f2.she); &lt;span class=&quot;comment&quot;&gt;//Liu&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(f2.he); &lt;span class=&quot;comment&quot;&gt;// undefined&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;call-apply&quot;&gt;&lt;a href=&quot;#call-apply&quot; class=&quot;headerlink&quot; title=&quot;call(),apply()&quot;&gt;&lt;/a&gt;call(),apply()&lt;/h2&gt;&lt;p&gt;this绑定到一个指定的对象，即传递给call(),apply()的第一个参数，如何这个参数不是对象，那么JavaScript 将会尝试使用内部 ToObject 操作将其转换为对象。&lt;/p&gt;
&lt;h2 id=&quot;bind&quot;&gt;&lt;a href=&quot;#bind&quot; class=&quot;headerlink&quot; title=&quot;bind()&quot;&gt;&lt;/a&gt;bind()&lt;/h2&gt;&lt;p&gt; &lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Function.prototype.bind&lt;/a&gt;&lt;br&gt;调用f.bind(someObject)会创建一个与f具有相同函数体和作用域的函数，但是在这个新函数中，this将永久地被绑定到了bind的第一个参数，无论这个函数是如何被调用的。&lt;/p&gt;
&lt;h2 id=&quot;闭包&quot;&gt;&lt;a href=&quot;#闭包&quot; class=&quot;headerlink&quot; title=&quot;闭包&quot;&gt;&lt;/a&gt;闭包&lt;/h2&gt;&lt;p&gt;下面看一个例子&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  name :&lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  getName : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(obj.getName());&lt;span class=&quot;comment&quot;&gt;//object&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不用闭包的情况下，this值为调用该方法的对象。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  name :&lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  getName : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(obj.getName()());&lt;span class=&quot;comment&quot;&gt;//window&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们编写一个闭包，这时this指向了全局对象。每个函数在调用时都会自动获取两个变量：this和arguments,内部函数在搜索这个变量时，只会搜到其活动对象为止，因此永远不可能直接访问外部函数中的这两个变量，又因为前面说过匿名函数的执行环境具有全局性，其this值指向window。所以就有了上面的结果，但是，我们可以把外部作用域的this保存到内部函数可以访问到的变量里，就可以让内部函数访问this了。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; name = &lt;span class=&quot;string&quot;&gt;&#39;window&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; obj = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  name :&lt;span class=&quot;string&quot;&gt;&#39;object&#39;&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  getName : &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; that =&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; that.name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(obj.getName()());&lt;span class=&quot;comment&quot;&gt;//object&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;DOM事件处理函数&quot;&gt;&lt;a href=&quot;#DOM事件处理函数&quot; class=&quot;headerlink&quot; title=&quot;DOM事件处理函数&quot;&gt;&lt;/a&gt;DOM事件处理函数&lt;/h2&gt;&lt;p&gt;当函数被用作事件处理函数时，它的this指向触发事件的元素;&lt;br&gt;当代码被内联处理函数调用时，它的this指向监听器所在的DOM元素。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们知道，this对象是在运行时基于函数的执行环境绑定的：在全局函数中，this等于window，当函数被作为某个对象方法调用时，this等于那个对象。匿名函数的执行环境具有全局性，因此this指向window。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript高级程序设计学习笔记（一）创建对象</title>
    <link href="http://yoursite.com/2016/08/22/javascript-0/"/>
    <id>http://yoursite.com/2016/08/22/javascript-0/</id>
    <published>2016-08-22T00:31:08.000Z</published>
    <updated>2016-10-09T14:53:34.154Z</updated>
    
    <content type="html">&lt;h1 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h1&gt;&lt;p&gt;可以使用构造函数Object或对象字面量创建单个对象，但是如果使用同一接口创建很多对象会产生大量重复代码。解决办法如下：用函数来封装以特定接口创建对象的细节。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createPerson&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age,job&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; o = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.sayName=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=createPerson(&lt;span class=&quot;string&quot;&gt;&quot;Nicholas&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;software Engineer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2=createPerson(&lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Doctor&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解决了多个相似对象的问题，没有解决对象识别问题。&lt;/p&gt;
&lt;h1 id=&quot;构造函数模式&quot;&gt;&lt;a href=&quot;#构造函数模式&quot; class=&quot;headerlink&quot; title=&quot;构造函数模式&quot;&gt;&lt;/a&gt;构造函数模式&lt;/h1&gt;&lt;p&gt;创建自定义的构造函数，从而定义自定义对象类型的属性和方法。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age,job&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Nocholas&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;software Engineer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Doctor&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Person()与createPerson()不同之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有显示创建对象&lt;/li&gt;
&lt;li&gt;直接将属性方法赋给this对象&lt;/li&gt;
&lt;li&gt;没有return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要创建Person的实例，有以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个新对象&lt;/li&gt;
&lt;li&gt;将构造函数作用域赋给新对象（this指向新对象）&lt;/li&gt;
&lt;li&gt;执行构造函数中的代码(为这个新对象添加属性)&lt;/li&gt;
&lt;li&gt;返回新对象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;创建的person1和person2实例都继承其原型有一个constructor属性，该属性指向Person。而constructor属性最初是用来表示对象类型的，这样就解决了工厂模式无法识别对象类型的问题。&lt;br&gt;构造函数模式也有缺点，每个方法都要在每个实例上重新创造一遍，而不同实例上的同名函数是不相等的。如何实现不同实例共享属性和方法呢，下面原型模式解决了这个问题。&lt;/p&gt;
&lt;h1 id=&quot;原型模式&quot;&gt;&lt;a href=&quot;#原型模式&quot; class=&quot;headerlink&quot; title=&quot;原型模式&quot;&gt;&lt;/a&gt;原型模式&lt;/h1&gt;&lt;h2 id=&quot;原型对象&quot;&gt;&lt;a href=&quot;#原型对象&quot; class=&quot;headerlink&quot; title=&quot;原型对象&quot;&gt;&lt;/a&gt;原型对象&lt;/h2&gt;&lt;p&gt;我们创建的每个函数都有一个prototype属性，这个属性是一个指针，指向原型对象。原型对象的用途是包含可以由特定类型的所有实例共享的属性和方法。在默认情况下，每个原型对象都有一个constructor（构造函数）属性，这个属性也是一个指针，指向prototype属性所在函数。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&lt;span class=&quot;string&quot;&gt;&quot;Nicola&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();&lt;span class=&quot;comment&quot;&gt;//&quot;Nicola&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person2.sayName();&lt;span class=&quot;comment&quot;&gt;//&quot;Nicola&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当调用构造函数创建一个实例后，该实例的内部将包含一个指针[[prototype]]指向原型对象。原型对象&lt;em&gt;最初&lt;/em&gt;只包含constructor属性，其他的方法是从Object继承而来。&lt;br&gt;&lt;img src=&quot;http://i1.buimg.com/567571/b30cde583c99e6b5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;[[prototype]]为内部属性，无法访问到。但是有两个方法：&lt;br&gt;1.isPrototypeOf()确定对象之间是否存在这种不正当关系。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(Person.prototype.isPrototypeOf(person1));&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(Person.prototype.isPrototypeOf(person2));&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.Object.getPrototypeOf()获取一个对象的原型。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.getPrototypeOf(person1)==Person.prototype);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.getPrototypeOf(person1).name);&lt;span class=&quot;comment&quot;&gt;//&quot;Nicola&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每当代码读取某个对象的属性时，都会在&lt;em&gt;原型链&lt;/em&gt;上搜索，目标是具有给定名字的属性。原型对象中的constructor属性也是实例共享的，可以通过对象实例访问。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.constructor==Person);&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当为对象实例添加一个属性时，这个属性就会屏蔽原型对象中的同名属性，这样就阻止我们访问原型对象中的同名属性，但不会修改那个属性，通过delet操作可完全删除实例属性，可重新对原型对象的访问。&lt;br&gt;hasOwnProperty():检测一个属性是否存在于实例中，继承自Object。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.name);&lt;span class=&quot;comment&quot;&gt;//&quot;Grey&quot;---来自实例&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.name);&lt;span class=&quot;comment&quot;&gt;//&quot;Nichola&quot;---来自原型&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.hasOwnProperty(&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;));&lt;span class=&quot;comment&quot;&gt;//false&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Object.getOwnPropertyDescriptor():返回指定对象上一个&lt;em&gt;实例属性&lt;/em&gt;对应的属性描述符,不能获取原型对象上的属性描述符。&lt;/p&gt;
&lt;h2 id=&quot;in操作符&quot;&gt;&lt;a href=&quot;#in操作符&quot; class=&quot;headerlink&quot; title=&quot;in操作符&quot;&gt;&lt;/a&gt;in操作符&lt;/h2&gt;&lt;p&gt;in操作符只要通过对象能够访问到属性，包括原型链上的，就会返回true。hasOwnProperty()只在属性存在于实例中才会返回true。结合使用可以判断原型链上的属性。&lt;br&gt;1.for-in 循环遍历&lt;br&gt;返回所有能通过对象访问的可枚举的属性，实例属性加原型属性。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&lt;span class=&quot;string&quot;&gt;&quot;Nicola&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; prop &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; person1)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (prop==&lt;span class=&quot;string&quot;&gt;&quot;name&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;string&quot;&gt;&quot;found!&quot;&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;span class=&quot;comment&quot;&gt;//&quot;found!&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(prop);&lt;span class=&quot;comment&quot;&gt;//&quot;sayName&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每个不同的属性，语句都会被执行一次。每次循环，一个不同的属性名将会赋予 prop,最后prop只存有最有一个迭代的属性名。&lt;br&gt;2.Object.keys()&lt;br&gt;该方法会返回一个由给定对象的所有可枚举&lt;em&gt;实例属性&lt;/em&gt;（不包括原形链上继承来的书香）的属性名组成的数组，数组中属性名的排列顺序和使用for-in循环遍历该对象时返回的顺序一致。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&lt;span class=&quot;string&quot;&gt;&quot;Nicola&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&lt;span class=&quot;string&quot;&gt;&quot;Rob&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.age=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1keys=object.keys(person1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1keys);&lt;span class=&quot;comment&quot;&gt;//&quot;name,age&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.Object.getOwnPropertyNames()&lt;br&gt;该方法返回一个由指定对象的所有&lt;em&gt;实例属性&lt;/em&gt;的属性名（包括不可枚举属性）组成的数组。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&lt;span class=&quot;string&quot;&gt;&quot;Nicola&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&lt;span class=&quot;string&quot;&gt;&quot;Rob&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.age=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.defineProperty(person1, &lt;span class=&quot;string&quot;&gt;&quot;key&quot;&lt;/span&gt;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  enumerable: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);&lt;span class=&quot;comment&quot;&gt;//属性key不可枚举&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;Object&lt;/span&gt;.getOwnPropertyNames(person1).sort());&lt;span class=&quot;comment&quot;&gt;//[&quot;age&quot;, &quot;key&quot;, &quot;name&quot;]&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;重写原型对象&quot;&gt;&lt;a href=&quot;#重写原型对象&quot; class=&quot;headerlink&quot; title=&quot;重写原型对象&quot;&gt;&lt;/a&gt;重写原型对象&lt;/h2&gt;&lt;p&gt;用包含所有属性的对象字面量重写原型对象，这样更简便一些，但是会断开了现有原型与任何之前已经存在的对象实例之间的联系，他们引用的仍然是最初的原型。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&quot;Nicola&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    age:23,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    job:&quot;Engineer&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName:function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();&lt;span class=&quot;comment&quot;&gt;//TypeError: person1.sayName is not a function&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重写原型对象之后的关系&lt;br&gt;&lt;img src=&quot;http://i4.buimg.com/567571/c2342edc484af3ef.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h2&gt;&lt;p&gt;1.由于不向构造函数传参，所有实例在默认情况下都会获得相同的属性值。&lt;br&gt;2.共享引用类型值得属性，牵一发动全身不是我们想要的，我们希望每个实例有属于自己的全部属性，改变其中一个的属性，不会影响其他。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&quot;Nicola&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    age:23,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    job:&quot;Engineer&quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    friends:[A,B],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName:function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends);&lt;span class=&quot;comment&quot;&gt;//&quot;A,B,C&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.friends);&lt;span class=&quot;comment&quot;&gt;//&quot;A,B,C&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;给person1添加一个朋友C，由于大家引用一个数组，person2也被动的添加了一个朋友C,这是大家不希望看到的，每个实例都应该有自己的隐私。&lt;/p&gt;
&lt;h1 id=&quot;组合使用构造函数和原型模式&quot;&gt;&lt;a href=&quot;#组合使用构造函数和原型模式&quot; class=&quot;headerlink&quot; title=&quot;组合使用构造函数和原型模式&quot;&gt;&lt;/a&gt;组合使用构造函数和原型模式&lt;/h1&gt;&lt;p&gt;这种方式就解决了大每个实例既想要有个对象类型，有共同的属性和方法，也不出卖隐私。构造函数定义实例属性。原型对象定义共享的属性和方法。每个实例有自己的一份实例属性副本，又共享着对方法的引用。这是一种最常见的方式。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age,job&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.friends=[&lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;constructor&lt;/span&gt;:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName: function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person2=&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Grey&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Doctor&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&lt;span class=&quot;string&quot;&gt;&quot;C&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends);&lt;span class=&quot;comment&quot;&gt;//&quot;A,B,C&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.friends);&lt;span class=&quot;comment&quot;&gt;//&quot;A,B&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.sayName()==person2.sayName());&lt;span class=&quot;comment&quot;&gt;//TRUE&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;动态原型模式&quot;&gt;&lt;a href=&quot;#动态原型模式&quot; class=&quot;headerlink&quot; title=&quot;动态原型模式&quot;&gt;&lt;/a&gt;动态原型模式&lt;/h1&gt;&lt;p&gt;动态原型是指视情况而定使用原型模式。把所有信息封装在构造函数之中，在构造函数中初始化原型（在必要情况下），这样就可以同时使用构造函数和原型的优点。通过检查某个应该存在的方法是否有效，来决定是否初始化原型。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;  &lt;span class=&quot;title&quot;&gt;Person&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,age,job&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//方法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.sayName !=&lt;span class=&quot;string&quot;&gt;&quot;function&quot;&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Person.prototype.sayName = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            alert(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; person1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Person(&lt;span class=&quot;string&quot;&gt;&quot;Nichola&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Engineer&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();&lt;span class=&quot;comment&quot;&gt;//&quot;Nichola&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h1&gt;&lt;p&gt;可以使用构造函数Object或对象字面量创建单个对象，但是如果使用同一接口创建很多对象会产生大量重复代码。解决办法如下：用函数来封装以特定接口创建对象的细节。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习笔记之闭包</title>
    <link href="http://yoursite.com/2016/08/17/javascript-2/"/>
    <id>http://yoursite.com/2016/08/17/javascript-2/</id>
    <published>2016-08-17T09:30:08.000Z</published>
    <updated>2016-10-10T01:14:01.530Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt; 一个闭包就是一个函数和被创建的函数中的作用域对象的组合。–MDN&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;执行环境及作用域链&quot;&gt;&lt;a href=&quot;#执行环境及作用域链&quot; class=&quot;headerlink&quot; title=&quot;执行环境及作用域链&quot;&gt;&lt;/a&gt;执行环境及作用域链&lt;/h1&gt;&lt;p&gt;&lt;em&gt;执行环境&lt;/em&gt;（execution context）定义了变量或函数有权访问的其他数据，决定了它们各自的行为。这个说法好抽象。每个执行环境都有一个与之关联的 &lt;em&gt;变量对象&lt;/em&gt;(variable object)，环境中定义的所有变量和函数都保存在这个对象中。如果这个环境是函数，则将其 &lt;em&gt;活动对象&lt;/em&gt;(activation object)作为变量对象。活动对象最初只包含一个arguments对象。&lt;br&gt;每个函数都有自己的执行环境。当执行流进入一个函数时，函数的执行环境就会被推入一个环境栈中。&lt;br&gt;作用域链创建过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建函数同时，创建一个预先包含全局变量对象的作用域链，这个会保存在内部的[[Scope]]属性中。&lt;/li&gt;
&lt;li&gt;当调用函数时，会为函数创建一个执行环境。&lt;/li&gt;
&lt;li&gt;通过复制函数的[[Scope]]属性中的对象构建起执行环境的作用域链。&lt;/li&gt;
&lt;li&gt;活动对象被创建并推入执行环境作用域链前端。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;作用域链本质：是一个指向变量对象的指针列表。&lt;br&gt;作用域链用途：是保证对执行环境有权访问的所有变量和函数的有序访问。&lt;/p&gt;
&lt;p&gt;标识符解析是沿着作用域链一级一级地搜索标识符的过程。搜索过程始终从作用域链最前端开始，然后逐级向后回溯，直到找到表示标识符为止。内部环境可以通过作用域链访问所有外部环境，反之不行，可见这些环境之间的联系是线性的，有次序的，单向的。&lt;/p&gt;
&lt;p&gt;一般来说，函数执行完毕，其对应的活动对象会被销毁。但是闭包情况下，，其外部函数在执行完毕后，其执行环境的作用域链会被销毁，但是其活动对象仍留在内存中。原因是，内部函数会将外部函数的活动对象添加到自己的作用域链中，即使外部函数执行完毕，内部函数的作用域链仍在引用其活动对象。&lt;/p&gt;
&lt;h1 id=&quot;for循环中闭包问题&quot;&gt;&lt;a href=&quot;#for循环中闭包问题&quot; class=&quot;headerlink&quot; title=&quot;for循环中闭包问题&quot;&gt;&lt;/a&gt;for循环中闭包问题&lt;/h1&gt;&lt;p&gt;作用域链这种配置机制引出一个副作用，即在迭代情况下，闭包只能取得包含函数中任何变量的最后一个值。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, arr = []; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    arr.push(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;](); &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;arr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;](); &lt;span class=&quot;comment&quot;&gt;//4&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;for循环执行四次，每次执行都向arr数组中添加一个匿名函数，但是这个匿名函数不执行，不会创建活动对象。当调用数组中的匿名函数时，for循环已经结束，i=4，所以arr中每一项执行的结果都是一样的。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, arr = []; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    arr.push((&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;j&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                alert(j);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;)(i)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    );&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;arr[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;](); &lt;span class=&quot;comment&quot;&gt;//0&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;arr[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;](); &lt;span class=&quot;comment&quot;&gt;//1&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;闭包有一个作用保护私有变量，这里j作为外部函数的私有变量被闭包保护起来。function(j)这个外部函数是自执行匿名函数，会创建活动对象，因为闭包的存在，每次执行产生活动对象会保留下来。&lt;br&gt;每次循环外部匿名函数执行时的作用域链之间的关系如图：&lt;br&gt;&lt;img src=&quot;/images/scopechain.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;相关资源：&lt;br&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-cn-closure/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;闭包的概念、形式与应用&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Closures&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN-闭包&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt; 一个闭包就是一个函数和被创建的函数中的作用域对象的组合。–MDN&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Canvas基础</title>
    <link href="http://yoursite.com/2016/07/28/canvas-0/"/>
    <id>http://yoursite.com/2016/07/28/canvas-0/</id>
    <published>2016-07-28T04:23:08.000Z</published>
    <updated>2016-10-14T15:18:11.837Z</updated>
    
    <content type="html">&lt;p&gt;HTML5 的 canvas 元素使用 JavaScript 在网页上绘制图像。&lt;/p&gt;
&lt;h1 id=&quot;创建canvas&quot;&gt;&lt;a href=&quot;#创建canvas&quot; class=&quot;headerlink&quot; title=&quot;创建canvas&quot;&gt;&lt;/a&gt;创建canvas&lt;/h1&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;200&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;100&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;canvas&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Canvas是一个HTML标签，设置id和样式：width属性和height属性，不带单位，因为这样也一同决定了画布的分辨率。&lt;/p&gt;
&lt;h1 id=&quot;初始化&quot;&gt;&lt;a href=&quot;#初始化&quot; class=&quot;headerlink&quot; title=&quot;初始化&quot;&gt;&lt;/a&gt;初始化&lt;/h1&gt;&lt;p&gt;JavaScript 使用 id 来寻找 canvas 元素：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; canvas = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&#39;canvas&#39;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//context绘图上下文环境，提供绘制接口&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; context = canvas.getContext(&lt;span class=&quot;string&quot;&gt;&#39;2d&#39;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接下来使用context绘制，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//指定大小&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;canvas.width&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;canvas.height&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;Canvas基于状态绘制&quot;&gt;&lt;a href=&quot;#Canvas基于状态绘制&quot; class=&quot;headerlink&quot; title=&quot;Canvas基于状态绘制&quot;&gt;&lt;/a&gt;Canvas基于状态绘制&lt;/h1&gt;&lt;p&gt;先设置绘图状态&lt;br&gt;再调用具体函数绘制&lt;/p&gt;
&lt;h1 id=&quot;状态函数&quot;&gt;&lt;a href=&quot;#状态函数&quot; class=&quot;headerlink&quot; title=&quot;状态函数&quot;&gt;&lt;/a&gt;状态函数&lt;/h1&gt;&lt;p&gt;context.moveTo();&lt;br&gt;contxt.lineTo();&lt;br&gt;//线段粗细&lt;br&gt;context.lineWidth = 5;&lt;br&gt;//线条颜色&lt;br&gt;context.strokeStyle = “blue”;&lt;br&gt;//填充颜色&lt;br&gt;context. fillStyle =”rgb(2,100,30)”;&lt;br&gt;//重新规划路径，清空&lt;br&gt;context.beginPath();&lt;br&gt;//自动闭合路径,对fill（）没有用&lt;br&gt;context.closePath();&lt;/p&gt;
&lt;h1 id=&quot;绘制函数&quot;&gt;&lt;a href=&quot;#绘制函数&quot; class=&quot;headerlink&quot; title=&quot;绘制函数&quot;&gt;&lt;/a&gt;绘制函数&lt;/h1&gt;&lt;p&gt;context.stroke();&lt;br&gt;context.fill();&lt;/p&gt;
&lt;h1 id=&quot;七巧板demo&quot;&gt;&lt;a href=&quot;#七巧板demo&quot; class=&quot;headerlink&quot; title=&quot;七巧板demo&quot;&gt;&lt;/a&gt;七巧板demo&lt;/h1&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;#弧&lt;br&gt;context.arc(&lt;br&gt;centerx,centery,radius,&lt;br&gt;startingAngle,endingAngle,&lt;br&gt;anticlockwise = false//顺时针默认&lt;br&gt;)&lt;/p&gt;
&lt;p&gt;#倒计时&lt;br&gt;第(i,j)个圆的圆心位置：&lt;br&gt;centerX：x+j&lt;em&gt;2(R+1) +(R+1)&lt;br&gt;centerY：y+i&lt;/em&gt;2(R+1) +(R+1)&lt;br&gt;时间相关的函数：&lt;br&gt;const endtime = new Date(2016,6,1,12,23,56);&lt;br&gt;//月份从零开始计，6代表7月&lt;/p&gt;
&lt;h1 id=&quot;简单动画架构&quot;&gt;&lt;a href=&quot;#简单动画架构&quot; class=&quot;headerlink&quot; title=&quot;简单动画架构&quot;&gt;&lt;/a&gt;简单动画架构&lt;/h1&gt;&lt;p&gt;setInterval(&lt;br&gt;//匿名函数&lt;br&gt;function(){&lt;br&gt;    //绘制当前画面&lt;br&gt;    render();&lt;br&gt;    //调整数据&lt;br&gt;    update();&lt;br&gt;},&lt;br&gt;50&lt;br&gt;);&lt;/p&gt;
&lt;h1 id=&quot;刷新&quot;&gt;&lt;a href=&quot;#刷新&quot; class=&quot;headerlink&quot; title=&quot;刷新&quot;&gt;&lt;/a&gt;刷新&lt;/h1&gt;&lt;p&gt;context.clearRect(x,y,width,height);&lt;/p&gt;
&lt;p&gt;#绘制封闭多边形&lt;br&gt;成对使用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;context.beginPath();//起始一条路径，或重置当前路径&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;context.closePath();//  创建从当前点回到起始点的路径&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我们绘制一个需要描边的填充图时，应该先填充颜色，在描边，否则填充颜色会覆盖边。&lt;/p&gt;
&lt;h1 id=&quot;四边形&quot;&gt;&lt;a href=&quot;#四边形&quot; class=&quot;headerlink&quot; title=&quot;四边形&quot;&gt;&lt;/a&gt;四边形&lt;/h1&gt;&lt;p&gt;context.rect(x,y,width,height)；//规划矩形路径,路径方向顺时针方向&lt;br&gt;context.fillRect(x,y,width,height);//直接使用当前的fillStyle，绘制出填充的矩形&lt;br&gt;context.strokeRect(x,y,wodth,height)；//使用当前的strokeStyle，绘制边框&lt;br&gt;clearRect();//在给定的矩形内清除指定的像素&lt;br&gt;后绘制图形会遮盖前绘制的图形&lt;/p&gt;
&lt;h1 id=&quot;颜色表示方法&quot;&gt;&lt;a href=&quot;#颜色表示方法&quot; class=&quot;headerlink&quot; title=&quot;颜色表示方法&quot;&gt;&lt;/a&gt;颜色表示方法&lt;/h1&gt;&lt;p&gt;#ffffff&lt;br&gt;#642&lt;br&gt;rgb(255,128,0)&lt;br&gt;rgba(100,100,100,0.8)&lt;br&gt;hsl(20,62%,28%)&lt;br&gt;hsla(40,82%,33%,0.6)&lt;br&gt;red&lt;/p&gt;
&lt;h1 id=&quot;线条的属性&quot;&gt;&lt;a href=&quot;#线条的属性&quot; class=&quot;headerlink&quot; title=&quot;线条的属性&quot;&gt;&lt;/a&gt;线条的属性&lt;/h1&gt;&lt;p&gt;lineWidth&lt;br&gt;线条两端，只能用于开始和结尾处，不能用于连接处,设置或返回线条的结束端点样式&lt;br&gt;lineCap:butt(default)&lt;br&gt;        round&lt;br&gt;        square&lt;br&gt;线条连接,设置或返回两条线相交时，所创建的拐角类型&lt;br&gt;lineJoin:miter(default)//尖角&lt;br&gt;         bevel//斜接&lt;br&gt;         round//圆角&lt;/p&gt;
&lt;p&gt;miterLimite：设置或返回最大斜接长度“当宽线条使用设置为 “miter” 的 lineJoin 属性绘制并且两条线段以锐角相交的时候，所得的斜面可能相当长。当斜面太长，就会变得不协调。miterLimit 属性为斜面的长度设置一个上限。这个属性表示斜面长度和线条长度的比值。默认是 10，意味着一个斜面的长度不应该超过线条宽度的 10 倍。如果斜面达到这个长度，它就变成斜角了。”&lt;/p&gt;
&lt;h1 id=&quot;图形变换&quot;&gt;&lt;a href=&quot;#图形变换&quot; class=&quot;headerlink&quot; title=&quot;图形变换&quot;&gt;&lt;/a&gt;图形变换&lt;/h1&gt;&lt;p&gt;位移 translate(x,y)//基坐标，叠加作用&lt;br&gt;旋转 rotate(deg)//弧度值&lt;br&gt;缩放 scale(sx,sy)&lt;/p&gt;
&lt;p&gt;context.save();//保存当前的图形状态&lt;br&gt;context.restore();//成对出现，恢复，返回在save()所有状态&lt;/p&gt;
&lt;p&gt;缩放 scale(sx,sy);&lt;br&gt;副作用:坐标，边框&lt;/p&gt;
&lt;h1 id=&quot;变换矩阵&quot;&gt;&lt;a href=&quot;#变换矩阵&quot; class=&quot;headerlink&quot; title=&quot;变换矩阵&quot;&gt;&lt;/a&gt;变换矩阵&lt;/h1&gt;&lt;p&gt;transform(a,b,c,d,e,f)&lt;br&gt;|a c e|&lt;br&gt;|b d f|&lt;br&gt;|0 0 1|&lt;br&gt;a水平缩放(1)&lt;br&gt;b水平倾斜(0)&lt;br&gt;c垂直倾斜(0)&lt;br&gt;d垂直缩放(1)&lt;br&gt;e水平位移(0)&lt;br&gt;f垂直位移(0)&lt;br&gt;多次级联&lt;br&gt;context.setTransform(a,b,c,d,e,f);//使之前的transform失效&lt;/p&gt;
&lt;h1 id=&quot;样式&quot;&gt;&lt;a href=&quot;#样式&quot; class=&quot;headerlink&quot; title=&quot;样式&quot;&gt;&lt;/a&gt;样式&lt;/h1&gt;&lt;p&gt;fillStyle||strokeStyle&lt;br&gt;线性渐变色&lt;br&gt;1.var grd = context.createLinearGradient(xstart,ystart,xend,yend);&lt;br&gt;2.grd.addColorStop(stop,color);//stop取0~1,规定渐变对象中的颜色和停止位置&lt;br&gt;径向渐变 Radial Gradient&lt;br&gt;1.var grd = context.createRadialGradient(x0,y0,r0,x1,y1,r1);&lt;br&gt;2.grd.addColorStop(stop,color);//stop取0~1&lt;/p&gt;
&lt;p&gt; 使用图片/画布/video创建样式&lt;br&gt;createPattern(canvas/img/video,repeat-style)；//在指定的方向上重复指定的元素&lt;br&gt;repeat-style：no-repeat 不重复&lt;br&gt;              repeat-x   沿x轴重复&lt;br&gt;              repeat-y   沿y轴重复&lt;br&gt;              repeat     x，y都重复&lt;/p&gt;
&lt;h1 id=&quot;曲线&quot;&gt;&lt;a href=&quot;#曲线&quot; class=&quot;headerlink&quot; title=&quot;曲线&quot;&gt;&lt;/a&gt;曲线&lt;/h1&gt;&lt;p&gt;cxt.arc(centerx,centery,radius,staertingAvgle,endingAngle,anticlockwise =flase);&lt;br&gt;//无论顺逆，角度不变&lt;br&gt;arcTo(x1,y1,x2,y2,radius)&lt;br&gt;控制点用moveTo指定&lt;br&gt;贝塞尔曲线Bazier&lt;br&gt;context.quadraticCurveTo(cpx,cpy,x,y);&lt;br&gt;context.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);&lt;/p&gt;
&lt;h1 id=&quot;文字渲染&quot;&gt;&lt;a href=&quot;#文字渲染&quot; class=&quot;headerlink&quot; title=&quot;文字渲染&quot;&gt;&lt;/a&gt;文字渲染&lt;/h1&gt;&lt;p&gt;fillText()  在画布上绘制“被填充的”文本&lt;br&gt;strokeText()    在画布上绘制文本（无填充）&lt;br&gt;参数：&lt;br&gt;text     规定在画布上输出的文本。&lt;br&gt;x   开始绘制文本的 x 坐标位置（相对于画布）。&lt;br&gt;y   开始绘制文本的 y 坐标位置（相对于画布）。&lt;br&gt;maxWidth    可选。允许的最大文本宽度，以像素计。&lt;br&gt;属性：&lt;br&gt;font    设置或返回文本内容的当前字体属性&lt;br&gt;textAlign   设置或返回文本内容的当前对齐方式&lt;br&gt;textBaseline    设置或返回在绘制文本时使用的当前文本基线&lt;/p&gt;
&lt;h1 id=&quot;阴影&quot;&gt;&lt;a href=&quot;#阴影&quot; class=&quot;headerlink&quot; title=&quot;阴影&quot;&gt;&lt;/a&gt;阴影&lt;/h1&gt;&lt;p&gt;shadowColor:设置或返回用于阴影的颜色&lt;br&gt;shadowBlur:设置或返回用于阴影的模糊级别&lt;br&gt;shadowOffsetX:设置或返回阴影距形状的水平距离&lt;br&gt;shadowOffsetY:设置或返回阴影距形状的垂直距离&lt;/p&gt;
&lt;h1 id=&quot;剪辑区域&quot;&gt;&lt;a href=&quot;#剪辑区域&quot; class=&quot;headerlink&quot; title=&quot;剪辑区域&quot;&gt;&lt;/a&gt;剪辑区域&lt;/h1&gt;&lt;p&gt;clip();&lt;br&gt;从原始画布剪切任意形状和尺寸的区域&lt;/p&gt;
&lt;h1 id=&quot;路径方向&quot;&gt;&lt;a href=&quot;#路径方向&quot; class=&quot;headerlink&quot; title=&quot;路径方向&quot;&gt;&lt;/a&gt;路径方向&lt;/h1&gt;&lt;p&gt;非零环绕原则&lt;/p&gt;
&lt;h1 id=&quot;交互&quot;&gt;&lt;a href=&quot;#交互&quot; class=&quot;headerlink&quot; title=&quot;交互&quot;&gt;&lt;/a&gt;交互&lt;/h1&gt;&lt;p&gt;cxt.clearRect(x,y,width,height);//自清空，用于动画&lt;br&gt;cxt.isPointInPath(x,y);//检测这个点是否在规划的路径中&lt;br&gt;canvas.addEventListener(“mouseup”,detect);&lt;br&gt;getBoundingClientRect获取元素位置。用于获得页面中某个元素的左，上，右和下分别相对浏览器视窗的位置。getBoundingClientRect是DOM元素到浏览器可视范围的距离（不包含文档卷起的部分）。该函数返回一个Object对象，该对象有6个属性：top,lef,right,bottom,width,height；这里的top、left和css中的理解很相似，width、height是元素自身的宽高，但是right，bottom和css中的理解有点不一样。right是指元素右边界距窗口最左边的距离，bottom是指元素下边界距窗口最上面的距离。&lt;/p&gt;
&lt;h1 id=&quot;图形库&quot;&gt;&lt;a href=&quot;#图形库&quot; class=&quot;headerlink&quot; title=&quot;图形库&quot;&gt;&lt;/a&gt;图形库&lt;/h1&gt;&lt;p&gt;canvasplus&lt;br&gt;&lt;a href=&quot;https://code.google.com/p/canvasplus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://code.google.com/p/canvasplus/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;artisan js&lt;br&gt;&lt;a href=&quot;http://artisanjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://artisanjs.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rgraph&lt;br&gt;&lt;a href=&quot;https://roopons.com.au/wp-content/plugins/viral-optins/js/rgraph/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://roopons.com.au/wp-content/plugins/viral-optins/js/rgraph/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;HTML5 的 canvas 元素使用 JavaScript 在网页上绘制图像。&lt;/p&gt;
&lt;h1 id=&quot;创建canvas&quot;&gt;&lt;a href=&quot;#创建canvas&quot; class=&quot;headerlink&quot; title=&quot;创建canvas&quot;&gt;&lt;/a&gt;创建canvas&lt;/h1&gt;&lt;
    
    </summary>
    
    
      <category term="canvas" scheme="http://yoursite.com/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3 基础篇</title>
    <link href="http://yoursite.com/2016/07/24/sublime-1/"/>
    <id>http://yoursite.com/2016/07/24/sublime-1/</id>
    <published>2016-07-24T08:19:08.000Z</published>
    <updated>2016-07-25T14:56:14.722Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装Sublime-Text3&quot;&gt;&lt;a href=&quot;#安装Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;安装Sublime Text3&quot;&gt;&lt;/a&gt;安装Sublime Text3&lt;/h1&gt;&lt;p&gt;Sublime Text&lt;a href=&quot;http://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;提供了Sublime Text各系统各版本的下载，目前Sublime Text的最新版本是&lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text3&lt;/a&gt;。这里以Windows版本的SublimeText3安装为例。注意在安装时勾选Add to explorer context menu，这样在右键单击文件时就可以直接使用Sublime Text打开。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;配置环境变量&quot;&gt;&lt;a href=&quot;#配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;配置环境变量&quot;&gt;&lt;/a&gt;配置环境变量&lt;/h1&gt;&lt;p&gt;使用&lt;code&gt;Win + R&lt;/code&gt;运行&lt;code&gt;sysdm.cpl&lt;/code&gt;打开“系统属性”。然后在“高级”选项卡里选择“环境变量”，编辑“Path”，增加Sublime Text的安装目录（例如D:\Sublime Text 3）。&lt;br&gt;接下来就可以在命令行里面利用subl命令直接使用Sublime Text了：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;subl file    :: 使用Sublime Text打开file文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subl folder  :: 使用Sublime Text打开folder文件夹&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subl .       :: 使用Sublime Text当前文件夹&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h1&gt;&lt;p&gt;按功能快捷键列表如下&lt;br&gt;通用（General）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl+Z: 撤销&lt;br&gt;   Ctrl+Y: 恢复撤销&lt;br&gt;   Ctrl+T：词互换&lt;br&gt;   Ctrl + U:回退，软撤销&lt;br&gt;   ↑↓←→：上下左右移动光标，注意不是不是KJHL！&lt;br&gt;   Alt：调出菜单&lt;br&gt;   Ctrl + Shift + P：调出命令板（Command Palette）&lt;br&gt;   Ctrl + `：调出控制台&lt;br&gt;   Ctrl+K+B 开启/关闭侧边栏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;缩进&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   ctrl+] 增加缩进&lt;br&gt;   ctrl+[ 减少缩进&lt;br&gt;   Tab：自动缩进四个空格&lt;br&gt;   Shift+Tab： 去除缩进&lt;br&gt;   ctrl+shift+v ：粘贴时缩进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编辑（Editing）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + Enter：在当前行下面新增一行然后跳至该行&lt;br&gt;   Ctrl + Shift + Enter：在当前行上面增加一行并跳至该行&lt;br&gt;   Ctrl + ←/→：进行逐词移动&lt;br&gt;   Ctrl + Shift + ←/→:进行逐词选择&lt;br&gt;   Ctrl + ↑/↓:移动当前显示区域&lt;br&gt;   Ctrl + Shift + ↑/↓:移动当前行，与上下行互换&lt;br&gt;   Ctrl+鼠标左键：可以同时选择要编辑的多处文本&lt;br&gt;   Ctrl+Shift+D ：复制光标所在整行，插入在该行之前&lt;br&gt;   Ctrl+Shift+K ：删除整行&lt;br&gt;   Ctrl+KK ：从光标处删除至行尾&lt;br&gt;   Ctrl+K Backspace ：从光标处删除至行首&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;选择（Selecting）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + D：选择当前光标所在的词并高亮该词所有出现的位置，再次Ctrl +&lt;br&gt;   D选择该词出现的下一个位置，在多重选词的过程中，使用Ctrl +&lt;br&gt;   K进行跳过，使用Ctrl + U进行回退，使用Esc退出多重编辑&lt;br&gt;   Ctrl + Shift + L：将当前选中区域打散&lt;br&gt;   Ctrl+L：选择整行（按住-继续选择下行）&lt;br&gt;   Ctrl + J：把当前选中区域合并为一行&lt;br&gt;   Ctrl + M：在起始括号和结尾括号间切换，光标移动至括号内开始或结束的位置&amp;gt;&lt;br&gt;   Ctrl + Shift + M：快速选择括号间的内容&lt;br&gt;   Ctrl + Shift + J：快速选择同缩进的内容&lt;br&gt;   Ctrl + Shift + Space：快速选择当前作用域（Scope）的内容&lt;br&gt;   Ctrl+Shift+A ：选择光标位置父标签对儿&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查找&amp;amp;替换（Finding&amp;amp;Replacing）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   F3：跳至当前关键字下一个位置&lt;br&gt;   Shift+F3：跳到当前关键字上一个位置，可一次性选择全部的相同文本进行同时编辑&lt;br&gt;   Alt + F3：选中当前关键字出现的所有位置&lt;br&gt;   Ctrl + F/H：进行标准查找/替换，之后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* Alt + C：切换大小写敏感（Case-sensitive）模式
* Alt + W：切换整字匹配（Whole matching）模式
* Alt + R：切换正则匹配（Regex matching）模式
* Ctrl + Shift + H：替换当前关键字
* Ctrl + Alt + Enter：替换所有关键字匹配
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   Ctrl + Shift + F：多文件搜索&amp;amp;替换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;格式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  Ctrl+Shift+[ ： 折叠代码&lt;br&gt;  Ctrl+Shift+] ：展开代码&lt;br&gt;  Ctrl+K+U ：改为大写&lt;br&gt;  Ctrl+K+L ：改为小写&lt;br&gt;  Alt+. ：闭合当前标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl+Shift+/ ：注释已选择内容&lt;br&gt;   Ctrl+/ ：注释整行（如已选择内容，同“Ctrl+Shift+/”效果）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;跳转（Jumping）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + P：跳转到指定文件，输入文件名后可以：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* @ 符号跳转：输入@symbol跳转到symbol符号所在的位置
* # 关键字跳转：输入#keyword跳转到keyword所在的位置
* : 行号跳转：输入:12跳转到文件的第12行。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   Ctrl + R：跳转到指定符号 快速列出/&lt;br&gt;   跳转到某个函数，对于Markdown，会列出其大纲&lt;br&gt;   Ctrl + G：跳转到指定行号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;窗口（Window）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + Shift + N：创建一个新窗口&lt;br&gt;   Ctrl + N：在当前窗口创建一个新标签&lt;br&gt;   Ctrl + W：关闭当前标签，当窗口内没有标签时会关闭该窗口&lt;br&gt;   Ctrl + Shift + T：恢复刚刚关闭的标签&lt;br&gt;   Ctrl+Tab： 当前窗口中的标签页切换&lt;br&gt;   Ctrl+F2 ：设置/取消书签&lt;br&gt;  Shift+F2 ：上一个书签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;屏幕（Screen）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   F11：切换普通全屏&lt;br&gt;   Shift + F11：切换无干扰全屏&lt;br&gt;   Alt+Shift+1:（非小键盘）窗口分屏，恢复默认1屏&lt;br&gt;   Alt+Shift+2:左右分屏-2列&lt;br&gt;   Alt+Shift+3:左右分屏-3列&lt;br&gt;   Alt+Shift+4: 左右分屏-4列&lt;br&gt;   Alt+Shift+5:等分4屏&lt;br&gt;   Alt+Shift+8: 垂直分屏-2屏&lt;br&gt;   Alt+Shift+9: 垂直分屏-3屏&lt;br&gt;   分屏之后，使用Ctrl + 数字键跳转到指定屏，使用Ctrl + Shift +&lt;br&gt;   数字键将当前屏移动到指定屏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;快捷键配置&quot;&gt;&lt;a href=&quot;#快捷键配置&quot; class=&quot;headerlink&quot; title=&quot;快捷键配置&quot;&gt;&lt;/a&gt;快捷键配置&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.io/en/latest/reference/settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;系统快捷键的默认配置&lt;/a&gt;&lt;br&gt;自定义快捷键配置：&lt;br&gt;打开&lt;code&gt;Preferences -&amp;gt; Key Bindings - User&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Sublime-Text内运行javascript-ES6&quot;&gt;&lt;a href=&quot;#Sublime-Text内运行javascript-ES6&quot; class=&quot;headerlink&quot; title=&quot;Sublime Text内运行javascript(ES6)&quot;&gt;&lt;/a&gt;Sublime Text内运行javascript(ES6)&lt;/h1&gt;&lt;p&gt;1.首先安装nodejs&lt;br&gt;当然你可以使用其它诸如jsc之类的环境来运行js, 本文使用的是nodejs. 首先确保你的电脑已经安装好nodejs, 并已将其添加到环境变量中 (一般安装时自动添加或者询问是否添加)&lt;/p&gt;
&lt;p&gt;2.添加build system&lt;br&gt;在sublime text中依次打开&lt;code&gt;Tools -&amp;gt; Build System -&amp;gt; New Build System…&lt;/code&gt;粘贴以下代码后保存(如Node.sublime-build), 然后把Build System设成Automatic&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; “cmd”: [“node”, “—use-strict”, “—harmony”, “$file”], “selector”: “source.js”&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.附加说明&lt;br&gt;在以上的build文件中(Node.sublime-build), node是执行命令,&lt;code&gt;—harmony&lt;/code&gt;和&lt;code&gt;—use-strict&lt;/code&gt;是执行参数, &lt;code&gt;$file&lt;/code&gt;是当前文件名, 所以一次build操作实际上相当于在命令行中执行了&lt;code&gt;node —use-strict —harmony filename&lt;/code&gt;. &lt;code&gt;—harmony&lt;/code&gt;表示启用ES Harmony features, 而这些features目前只能在strict模式下运行, 所以需要同时添加&lt;code&gt;use-strict&lt;/code&gt;参数(详见&lt;a href=&quot;http://stackoverflow.com/questions/17253509/what-is-extended-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;what-is-extended-mode&lt;/a&gt;).&lt;br&gt;如果不想启用es6的特性,把build文件更改成以下代码保存即可.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; “cmd”: [“node”, “$file”], “selector”: “source.js”&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.具体使用&lt;br&gt;在sublime test中新建一个test.js文件, 然后输入你的测试代码, 比如:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;for (let i = 0; i &amp;lt; 3; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(&amp;apos;i:&amp;apos;, i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用快捷键 &lt;code&gt;ctrl + b&lt;/code&gt;, 将得到以下执行结果:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;i: 0i: 1i: 2[Finished in 0.1s]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注解:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  (1)文件必须是存在于磁盘中的, 而不是untitled的,&lt;br&gt;  否则sublime无法找到相应的文件.&lt;br&gt;  (2)Nodejs安装目录需要加入path环境变量中，否则Ctrl+B运行 会出现：&lt;br&gt;  [WinError2] 系统找不到指定的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;正则表达式（学习中）·&quot;&gt;&lt;a href=&quot;#正则表达式（学习中）·&quot; class=&quot;headerlink&quot; title=&quot;正则表达式（学习中）·&quot;&gt;&lt;/a&gt;正则表达式（学习中）·&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式&lt;/a&gt;&lt;/em&gt;是非常强大的文本查找&amp;amp;替换工具，Sublime Text中使用Alt + R切换正则匹配模式的开启/关闭。Sublime Text的使用&lt;em&gt;&lt;a href=&quot;http://www.boost.org/doc/libs/1_44_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Boost里的Perl正则表达式风格&lt;/a&gt;&lt;/em&gt;。&lt;br&gt;&lt;a href=&quot;http://regex.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering Regex&lt;/a&gt;（中译本：&lt;a href=&quot;http://book.douban.com/subject/2154713/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;精通正则表达式&lt;/a&gt;）对正则表达式的原理和各语言下的使用进行了详细介绍。&lt;br&gt;优秀教程：&lt;br&gt;&lt;a href=&quot;http://deerchao.net/tutorials/regex/regex.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“正则表达式30分钟入门教程”&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://msdn.microsoft.com/zh-cn/library/ae5bf541(v=vs.90&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MSDN正则表达式教程&lt;/a&gt;)&lt;a href=&quot;http://www.williamlong.info/archives/433.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;月光博客～常用正则表达式&lt;/a&gt;在线测试工具：&lt;br&gt;&lt;a href=&quot;http://regexpal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regexpal&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.regexr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regexer&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;非官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.sublimetext.com/docs/3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://sublime.wbond.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package Control&lt;/a&gt; 大量的Sublime Text插件和主题。&lt;br&gt;&lt;a href=&quot;http://zh.lucida.me/blog/sublime-text-complete-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 全程指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/#three&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何优雅地使用Sublime Text&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装Sublime-Text3&quot;&gt;&lt;a href=&quot;#安装Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;安装Sublime Text3&quot;&gt;&lt;/a&gt;安装Sublime Text3&lt;/h1&gt;&lt;p&gt;Sublime Text&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;官方网站&lt;/a&gt;提供了Sublime Text各系统各版本的下载，目前Sublime Text的最新版本是&lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;Sublime Text3&lt;/a&gt;。这里以Windows版本的SublimeText3安装为例。注意在安装时勾选Add to explorer context menu，这样在右键单击文件时就可以直接使用Sublime Text打开。&lt;br&gt;
    
    </summary>
    
    
      <category term="sublime text3" scheme="http://yoursite.com/tags/sublime-text3/"/>
    
  </entry>
  
  <entry>
    <title>Git与Github</title>
    <link href="http://yoursite.com/2016/07/23/git-0/"/>
    <id>http://yoursite.com/2016/07/23/git-0/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-07-25T14:44:39.380Z</updated>
    
    <content type="html">&lt;p&gt;Git 是一个为了更好地管理 Linux内核开发而创立的分布式版本控制和软件配置管理软件。 国内外知名 Git 代码托管网站有：&lt;br&gt;&lt;a href=&quot;http://GitHub.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Coding.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coding&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://code.csdn.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;code.csdn&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub 使用 Git 作为版本控制系统（version control system）提供在线源码托管的服务，同时是个有社交功能的开发者社区。&lt;br&gt;国外类似服务：&lt;br&gt;&lt;a href=&quot;https://bitbucket.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bitbucket&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Gitlab.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitlab&lt;/a&gt;&lt;br&gt;国内类似服务：&lt;br&gt;&lt;a href=&quot;http://Gitcafe.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitcafe&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git教程 - 廖雪峰的官方网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pro Git&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git - 简明指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://marklodato.github.io/visual-git-guide/index-zh-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图解 Git&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.yangzhiping.com/tech/github.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何高效利用GitHub–阳志平&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.worldhello.net/gotgithub/#id4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;worldhello&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;help.github.com/&quot;&gt;Github帮助文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git Magic&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;过后填坑···&quot;&gt;&lt;a href=&quot;#过后填坑···&quot; class=&quot;headerlink&quot; title=&quot;过后填坑···&quot;&gt;&lt;/a&gt;过后填坑···&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Git 是一个为了更好地管理 Linux内核开发而创立的分布式版本控制和软件配置管理软件。 国内外知名 Git 代码托管网站有：&lt;br&gt;&lt;a href=&quot;http://GitHub.com&quot;&gt;github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Coding.net&quot;&gt;Coding&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://code.csdn.net/&quot;&gt;code.csdn&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="NODE" scheme="http://yoursite.com/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>JSHint使用基础</title>
    <link href="http://yoursite.com/2016/07/23/nodejs-1/"/>
    <id>http://yoursite.com/2016/07/23/nodejs-1/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-08-24T14:16:49.810Z</updated>
    
    <content type="html">&lt;p&gt;JSHint是一款在线的js代码验证工具，它能帮助你找出在开发中不经意犯下错误和可能存在的潜在问题。强烈建议尽可能的使用检查工具来确认你的编码风格以及设计模式的正确性。JSHint 提供在线和本地使用(基于 Node.js)。同时，还有很多插件支持VS，Eclipse，Notepad++，Sublime Text等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;JSHint主页：&lt;a href=&quot;http://jshint.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/&lt;/a&gt;&lt;br&gt;JSHint下载安装：&lt;a href=&quot;http://jshint.com/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/install/&lt;/a&gt;&lt;br&gt;JSHint官方文档：&lt;a href=&quot;http://jshint.com/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/docs/&lt;/a&gt;&lt;br&gt;Github：&lt;a href=&quot;https://github.com/jshint/jshint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jshint/jshint/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.hyjiacan.com/javascript-jshint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript代码验证工具 JSHint&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装jshint&quot;&gt;&lt;a href=&quot;#安装jshint&quot; class=&quot;headerlink&quot; title=&quot;安装jshint&quot;&gt;&lt;/a&gt;安装jshint&lt;/h1&gt;&lt;p&gt;在Node.js上全局安装jshint&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install jshint -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在对应目录下运行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ jshint move.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;move.js: line 41, col 10, Missing semicolon.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1 error&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一个错误，少一个分号。&lt;br&gt;如果路径是短横线 (-)，那么JSHint会从标准输入读取数据。&lt;/p&gt;
&lt;h1 id=&quot;配置JSHint&quot;&gt;&lt;a href=&quot;#配置JSHint&quot; class=&quot;headerlink&quot; title=&quot;配置JSHint&quot;&gt;&lt;/a&gt;配置JSHint&lt;/h1&gt;&lt;p&gt;有三种配置方式：&lt;br&gt;1.使用指定的配置文件 .jshintrc&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个设置允许您每个项目有不同的配置文件。把你的文件放到项目根目录,只要你运行&lt;br&gt;JSHint从任何地方在你的项目目录树,将使用相同的配置文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSHint默认使用用户home目录下的.jshintrc文件（json格式）作为配置文件,也可以在你的项目目录下添加一个.jshintrc文件，JSHint会在检测文件时从文件所在目录往上找，直到找到jshintrc文件为止。&lt;br&gt;&lt;a href=&quot;https://github.com/jshint/jshint/blob/master/examples/.jshintrc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jshintrc文件示例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.通过 –config标记手动配置&lt;br&gt;如果你并没有将规则文件命名为符合规则的名字（即用.jshintrc），那么可以在运行JSHint的时候手动指定规则文件，例如你将规则文件命名为jshint.json。那么可以使用一下命令来运行JSHint并应用你的规则：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jshint my_app.js --config /root/application/jshint.json  //指定规则文件路径&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.把配置写在 jshintConfig 目录下的 package.json 文件中&lt;br&gt; 配置文件是指定了JSHint配置选项开头的json数据格式，例如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;  &amp;quot;undef&amp;quot;: true,  &amp;quot;unused&amp;quot;: true,  &amp;quot;globals&amp;quot;: &amp;#123; &amp;quot;MY_GLOBAL&amp;quot;: false &amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的配置中，JSHint 会对未定义(undefined)和未使用(unused) 的变量发出警告，globals是指定全局变量。&lt;/p&gt;
&lt;h1 id=&quot;内置配置&quot;&gt;&lt;a href=&quot;#内置配置&quot; class=&quot;headerlink&quot; title=&quot;内置配置&quot;&gt;&lt;/a&gt;内置配置&lt;/h1&gt;&lt;p&gt;对于需要对单个文件进行特定设置的需求，我们可以在文件最上方使用注释行来设定JSHint:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint undef: true, unused: true */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* globals MY_GLOBAL */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码片段将启用警告未定义的和未使用的变量和告诉JSHint全局变量命名MY_GLOBAL。&lt;br&gt;类似对于文件的设定，对于函数的设定方式需要把相应的注释行移到函数内：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// From another file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function b() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;use strict&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  /* ... */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;屏蔽警告&quot;&gt;&lt;a href=&quot;#屏蔽警告&quot; class=&quot;headerlink&quot; title=&quot;屏蔽警告&quot;&gt;&lt;/a&gt;屏蔽警告&lt;/h2&gt;&lt;p&gt;某些警告是无法通过错误来进行屏蔽的，这时候你首先需要知道你要屏蔽错误的错误代码，通过添加&lt;code&gt;--verbose&lt;/code&gt;参数来获得：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jshint --verbose myfile.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myfile.js: line 6, col 3, Unnecessary directive &amp;quot;use strict&amp;quot;. (W034)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果需要屏蔽这个错误，可在文件中加入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint -W034 */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样，代码为 W034的警告就会被隐藏。有两点需要注意:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;这种语法只对警告(W开头的代码)有效，而对错误 (E开头的代码)是无效的。&lt;/li&gt;
&lt;li&gt;这种语法会隐藏所有指定代码的警告。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;要重新显示上面隐藏的警告，使用下面的语法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint +W034 */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;JSHint-指令&quot;&gt;&lt;a href=&quot;#JSHint-指令&quot; class=&quot;headerlink&quot; title=&quot;JSHint 指令&quot;&gt;&lt;/a&gt;JSHint 指令&lt;/h1&gt;&lt;p&gt;jshint: 设置JSHint选项指令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint strict: true */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jslint：设置是否兼容 JSLint&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jslint vars: true */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;globals: 告诉 JSHint 全局变量是在其它地方定义的。当值(value)为false(默认)时，JSHint会认为变量是只读的。通常和 undef 选项一起使用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* global MY_LIB: false */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在globals配置中，也可以把全局变量加到黑名单中，以使得变量在当前文件中禁用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* global -BAD_LIB */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exported: 告诉 JSHint 变量在当前文件定义但是会在其它文件中使用的指令，通常和 unused 指令一起使用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* exported EXPORTED_LIB */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ignore: 告诉 JSHint 要跳过的代码块&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// Code here will be linted with JSHint.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* jshint ignore:start */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// Code here will be linted with ignored by JSHint.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* jshint ignore:end */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JSHint会跳过检查所有位于/&lt;em&gt; jshint ignore:start &lt;/em&gt;/ 和/&lt;em&gt; jshint ignore:end &lt;/em&gt;/ 间的代码。&lt;br&gt;也可以在行的尾部添加行注释以跳过当前行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ignoreThis(); // jshint ignore:line&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;JSHint-选项&quot;&gt;&lt;a href=&quot;#JSHint-选项&quot; class=&quot;headerlink&quot; title=&quot;JSHint 选项&quot;&gt;&lt;/a&gt;JSHint 选项&lt;/h1&gt;&lt;p&gt;JSHint本身是个命令行工具，它提供了灵活了的选项设置方式。&lt;br&gt;JSHint 有两种选项: &lt;code&gt;enforcing&lt;/code&gt; 和&lt;code&gt;relaxing&lt;/code&gt;&lt;br&gt;&lt;code&gt;enforcing&lt;/code&gt; 用于使JSHint的检查更加严格，而&lt;code&gt;relaxing&lt;/code&gt;用于阻止一些警告。&lt;br&gt;&lt;a href=&quot;https://github.com/jshint/jshint/blob/master/examples/.jshintrc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多选项在jshintrc文件示例&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://jshint.com/docs/options/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多选项的含义见官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;hacker的方式&quot;&gt;&lt;a href=&quot;#hacker的方式&quot; class=&quot;headerlink&quot; title=&quot;hacker的方式&quot;&gt;&lt;/a&gt;hacker的方式&lt;/h1&gt;&lt;p&gt;上面说的方式官方的文档都有更加详细的说明，可如果你总是想禁用掉特定的警告该怎么办呢?比方说对于以下代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;if (err) return next(err);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JSHint会警告&lt;code&gt;Expected &amp;#39;{&amp;#39; and instead saw &amp;#39;return&amp;#39;.&lt;/code&gt;，因为我（node社区很多人也是）不喜欢在单行的返回代码前后添加大括号，但是我也不想总是在文件最上面添加注释添加一块专门的注释来禁用它。一种可行的办法是修改编辑器的代码检测插件，不过难度有点高，另一种方法就是修改JSHint 的代码，我们只需要对一个reporter文件稍做修改即可。打开文件&lt;code&gt;jshint/src/reporters/default.js&lt;/code&gt;，在&lt;code&gt;var error = result.error;&lt;/code&gt;下面加入两行代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var code = error.code;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if (code === &amp;apos;W116&amp;apos;) return;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大功告成，保存以后再用JSHint就再也看不到那样的警告了。（当然，如果你的JSHint使用别的reporter那就另当别论了）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;JSHint是一款在线的js代码验证工具，它能帮助你找出在开发中不经意犯下错误和可能存在的潜在问题。强烈建议尽可能的使用检查工具来确认你的编码风格以及设计模式的正确性。JSHint 提供在线和本地使用(基于 Node.js)。同时，还有很多插件支持VS，Eclipse，Notepad++，Sublime Text等。&lt;br&gt;
    
    </summary>
    
    
      <category term="JSHint" scheme="http://yoursite.com/tags/JSHint/"/>
    
  </entry>
  
  <entry>
    <title>Winsows上Nodejs的安装配置</title>
    <link href="http://yoursite.com/2016/07/23/nodejs-0/"/>
    <id>http://yoursite.com/2016/07/23/nodejs-0/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-07-25T14:05:05.454Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装Nodejs&quot;&gt;&lt;a href=&quot;#安装Nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装Nodejs&quot;&gt;&lt;/a&gt;安装Nodejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统：windows8.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最简单安装的方法，在&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载.msi格式，或者从我的百度云盘链接: &lt;a href=&quot;http://pan.baidu.com/s/1mim4hvU&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1mim4hvU&lt;/a&gt; 密码: scaf，默认安装会自动配置环境变量，也可以更改安装目录。我的安装目录&lt;code&gt;C:\Program Files\nodejs&lt;/code&gt;。npm已经集成在nodejs，不用单独安装。在该目录下新建两个文件夹node_cache和node_global。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://i1.piimg.com/567571/62c1c72771c19ca2.png&quot; alt=&quot;nodejs目录结构&quot;&gt;&lt;br&gt;node_cache是npm缓存目录，避免相同的包每次都下载。&lt;br&gt;node_global是全局安装的目录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install xxx -g&lt;/code&gt;时， 模块将被下载安装到”全局目录”中。”全局目录”通过&lt;br&gt;&lt;code&gt;npm config set prefix&lt;/code&gt;“目录路径” 来设置。&lt;br&gt;通过 &lt;code&gt;npm config get prefix&lt;/code&gt; 来获取当前设置的目录。使用全局安装方式统一安装的&lt;br&gt;一个目录中去,这样既方便管理、结构清晰还可以重复利用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在管理员身份下运行cmd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config set cache &amp;quot;C:\Program Files\nodejs\node_cache&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm config set prefix &amp;quot;C:\Program Files\nodejs\node_global&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;环境变量配置&quot;&gt;&lt;a href=&quot;#环境变量配置&quot; class=&quot;headerlink&quot; title=&quot;环境变量配置&quot;&gt;&lt;/a&gt;环境变量配置&lt;/h1&gt;&lt;p&gt;由于改变了node_modules的默认安装目录,需要重新配置环境变量,&lt;code&gt;计算机\&amp;gt;系统属性\&amp;gt;高级\&amp;gt;环境变量&lt;/code&gt;&lt;br&gt;用户环境变量&lt;br&gt;编辑PATH:&lt;code&gt;C:\Program Files\nodejs\node_modules\npm;C:\Program Files\nodejs\node_global&lt;/code&gt;&lt;br&gt;添加NODE_PATH:&lt;code&gt;C:\Program Files\nodejs\node_global\node_modules&lt;/code&gt;&lt;br&gt;系统环境变量&lt;br&gt;编辑path：&lt;code&gt;C:\Program Files\nodejs\&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Windows-系统下设置Nodejs-NPM全局路径&quot;&gt;&lt;a href=&quot;#Windows-系统下设置Nodejs-NPM全局路径&quot; class=&quot;headerlink&quot; title=&quot;Windows 系统下设置Nodejs NPM全局路径&quot;&gt;&lt;/a&gt;Windows 系统下设置Nodejs NPM全局路径&lt;/h1&gt;&lt;p&gt;在cmd下执行以下命令无效的情况下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config set cache &amp;quot;C:\Program Files\nodejs\node_cache&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm config set prefix &amp;quot;C:\Program Files\nodejs\node_global&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在nodejs的安装目录中找到&lt;code&gt;node_modules\npm\.npmrc文件&lt;/code&gt;（C:\Program Files\nodejs\node_modules\npm）&lt;/p&gt;
&lt;p&gt;修改如下即可：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;prefix=C:\Program Files\nodejs\node_global&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cache=C:\Program Files\nodejs\node_cache&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装成功&quot;&gt;&lt;a href=&quot;#安装成功&quot; class=&quot;headerlink&quot; title=&quot;安装成功&quot;&gt;&lt;/a&gt;安装成功&lt;/h1&gt;&lt;p&gt;安装完成后在管理员下运行cmd&lt;br&gt;&lt;img src=&quot;http://7xrn7f.com1.z0.glb.clouddn.com/16-7-23/79224504.jpg&quot; alt=&quot;安装nodejs版本号&quot;&gt;&lt;br&gt;如上图所示则安装成功&lt;/p&gt;
&lt;h1 id=&quot;安装相关环境&quot;&gt;&lt;a href=&quot;#安装相关环境&quot; class=&quot;headerlink&quot; title=&quot;安装相关环境&quot;&gt;&lt;/a&gt;安装相关环境&lt;/h1&gt;&lt;p&gt;切记在管理员下运行cmd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g jshint&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g csslint&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;全局安装与本地安装&quot;&gt;&lt;a href=&quot;#全局安装与本地安装&quot; class=&quot;headerlink&quot; title=&quot;全局安装与本地安装&quot;&gt;&lt;/a&gt;全局安装与本地安装&lt;/h1&gt;&lt;p&gt;&lt;code&gt;npm install -g ***&lt;/code&gt;表示全局安装，这样安装的安装包都在当前用户下，在磁盘的所有其他地方都可以访问到，比较方面。否则&lt;code&gt;npm install ***&lt;/code&gt;表示本地安装，安装在当前目录下，只能在当前目录下使用。&lt;br&gt;如果一个包是要当做命令一样的来使用，就推荐进行全局安装，而如果一个包是使用在项目里面的话，则使用本地安装，这样避免了不同项目对不同版本的包之间的相互依赖的问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装Nodejs&quot;&gt;&lt;a href=&quot;#安装Nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装Nodejs&quot;&gt;&lt;/a&gt;安装Nodejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统：windows8.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最简单安装的方法，在&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;官网&lt;/a&gt;下载.msi格式，或者从我的百度云盘链接: &lt;a href=&quot;http://pan.baidu.com/s/1mim4hvU&quot;&gt;http://pan.baidu.com/s/1mim4hvU&lt;/a&gt; 密码: scaf，默认安装会自动配置环境变量，也可以更改安装目录。我的安装目录&lt;code&gt;C:\Program Files\nodejs&lt;/code&gt;。npm已经集成在nodejs，不用单独安装。在该目录下新建两个文件夹node_cache和node_global。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NODE" scheme="http://yoursite.com/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3 前端插件安装与使用</title>
    <link href="http://yoursite.com/2016/07/05/sublime-0/"/>
    <id>http://yoursite.com/2016/07/05/sublime-0/</id>
    <published>2016-07-05T04:23:08.000Z</published>
    <updated>2016-08-26T01:02:18.820Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装package-control&quot;&gt;&lt;a href=&quot;#安装package-control&quot; class=&quot;headerlink&quot; title=&quot;安装package control&quot;&gt;&lt;/a&gt;安装package control&lt;/h1&gt;&lt;p&gt;安装插件需要先安装package control，有两种安装package control的方法，&lt;a href=&quot;https://packagecontrol.io/installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方安装方法&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制台安装&lt;br&gt;在sublime text3&lt;code&gt;ctrl+~&lt;/code&gt;呼出控制台或者&lt;code&gt;View &amp;gt; Show Console&lt;/code&gt;,然后在控制台粘贴以下Python code：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import urllib.request,os,hashlib; h = &amp;apos;2915d1851351e5ee549c20394736b442&amp;apos; + &amp;apos;8bc59f460fa1548d1514676163dafc88&amp;apos;; pf = &amp;apos;Package Control.sublime-package&amp;apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &amp;apos;http://packagecontrol.io/&amp;apos; + pf.replace(&amp;apos; &amp;apos;, &amp;apos;%20&amp;apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&amp;apos;Error validating download (got %s instead of %s), please try manual install&amp;apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &amp;apos;wb&amp;apos; ).write(by)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的代码根据版本不同会更新，所以每次使用都链接上方的地址获取&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的代码会创建安装&lt;code&gt;Installed Packages&lt;/code&gt;的文件夹，自动下载&lt;code&gt;Package Control.sublime-package&lt;/code&gt;到这个文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;手动安装&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入 Preferences &amp;gt; Browse Packages…&lt;/li&gt;
&lt;li&gt;进入 &lt;code&gt;Installed Packages/&lt;/code&gt; 目录下&lt;/li&gt;
&lt;li&gt;下载 &lt;code&gt;[Package Control.sublime-package](https://packagecontrol.io/Package%20Control.sublime-package)&lt;/code&gt;到 &lt;code&gt;Installed  Packages/&lt;/code&gt;目录下。&lt;/li&gt;
&lt;li&gt;重启 Sublime Text3&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装插件的常用方法&quot;&gt;&lt;a href=&quot;#安装插件的常用方法&quot; class=&quot;headerlink&quot; title=&quot;安装插件的常用方法&quot;&gt;&lt;/a&gt;安装插件的常用方法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl+shift+p&lt;/code&gt;进入Command Palette，输入&lt;code&gt;install&lt;/code&gt;进入 Package Control: Install Package，输入要安装的插件的名称回车安装。&lt;/li&gt;
&lt;li&gt;如果在在列表中没有要安装的插件，可以在github上下载插件安装包，然后打开菜单栏里的“Preferences”—&amp;gt;”Browse Packages”，打开包的位置，然后将下载的Zip包“解压”后复制到该文件夹内即可，重启Sublime Text3 插件就会安装成功了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Emmet&quot;&gt;&lt;a href=&quot;#Emmet&quot; class=&quot;headerlink&quot; title=&quot;Emmet&quot;&gt;&lt;/a&gt;Emmet&lt;/h1&gt;&lt;p&gt; &lt;a href=&quot;http://docs.emmet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet官方使用文档&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://yanxyz.github.io/emmet-docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EMMET中文文档参考 yanxyz@github&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;速查表&lt;/a&gt;&lt;br&gt; Emmet使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。&lt;br&gt; 直接在编辑器中输入HTML或CSS的代码的缩写，然后按tab键就可以拓展为完整的代码片。&lt;/p&gt;
&lt;h2 id=&quot;功能：&quot;&gt;&lt;a href=&quot;#功能：&quot; class=&quot;headerlink&quot; title=&quot;功能：&quot;&gt;&lt;/a&gt;功能：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 展开缩写
2. 匹配标签
3. 跳转到配对标签
4. 包裹缩写
5. 跳转到编辑点
6. 选择
7. 切换注释
8. 分割合并标签
9. 删除标签
10. 合并行
11. 更新图片尺寸
12. 计算数学表达式
13. 增减数字
14. 重构 CSS 值
15. 编码/解码图像为 data:URL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;缩写是 Emmet的核心：这些特殊的表达式被实时的解析转化为代码块，缩写的语法类似于 CSS 选择器。&lt;/p&gt;
&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;p&gt;所有未知的缩写都会转换成标签，例如，&lt;code&gt;foo → &amp;lt;foo&amp;gt;&amp;lt;/foo&amp;gt;&lt;/code&gt;&lt;br&gt;后代：&amp;gt;&lt;br&gt;兄弟：+&lt;br&gt;上级：^&lt;br&gt;分组：()&lt;br&gt;乘法：*&lt;br&gt;自增符号：$&lt;br&gt;ID：#&lt;br&gt;类属性：.&lt;br&gt;自定义属性：[title=”Hello world”]&lt;br&gt;文本：{}&lt;br&gt;隐式标签：当展开缩写时，Emmet 尝试获取缩写所处位置的父元素上下文，比如 HTML 元素。如果获取成功，Emmet 使用它的名字来解析隐式标签名。&lt;/p&gt;
&lt;h2 id=&quot;元素类型&quot;&gt;&lt;a href=&quot;#元素类型&quot; class=&quot;headerlink&quot; title=&quot;元素类型&quot;&gt;&lt;/a&gt;元素类型&lt;/h2&gt;&lt;p&gt;当编辑 HTML/XML 文档时，缩写展开为 HTML/XML 标签。不过一些元素，比如 a 或 img， 缩写展开后带有属性：&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;或&lt;code&gt;&amp;lt;img src=&amp;quot;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt;。Emmet 所有元素的定义放在 &lt;code&gt;snippets.json&lt;/code&gt; 文件里，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;html&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;abbreviations&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;a&amp;quot;: &amp;quot;&amp;lt;a href=\&amp;quot;\&amp;quot;&amp;gt;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;link&amp;quot;: &amp;quot;&amp;lt;link rel=\&amp;quot;stylesheet\&amp;quot; href=\&amp;quot;\&amp;quot; /&amp;gt;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;snippets&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;cc:ie6&amp;quot;: &amp;quot;&amp;lt;!--[if lte IE 6]&amp;gt;\n\t$&amp;#123;child&amp;#125;|\n&amp;lt;![endif]--&amp;gt;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;css&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;css缩写&quot;&gt;&lt;a href=&quot;#css缩写&quot; class=&quot;headerlink&quot; title=&quot;css缩写&quot;&gt;&lt;/a&gt;css缩写&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在属性前或缩写前放一个连字符，Emmet 会自动给这个属性添加厂商前缀。&lt;/li&gt;
&lt;li&gt;渐变&lt;br&gt;可以输入函数 lg(…) (或 linear-gradient(…)) 函数，并且像缩写一样展开。如果用做属性值，Emmet 将使用属性名来生成新的属性。&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linear-gradient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;模糊匹配&lt;br&gt;为了让书写 CSS 更容易， Emmet 实现了模糊查找。每次输入未知的缩写时，Emmet 尝试查找最相近的代码片断。&lt;br&gt;例如，缩写不是 ov:h(overflow: hidden;) ，而是 ov-h, ovh 甚至 oh。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;值&lt;br&gt;比如我们在写 width：100px的时候，只需要 w100 即可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;p 表示%&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;e 表示 em&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x 表示 ex&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;附加属性&lt;br&gt;@f可以生成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@font-face &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;font-family:;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;src:url();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;html-缩写&quot;&gt;&lt;a href=&quot;#html-缩写&quot; class=&quot;headerlink&quot; title=&quot;html 缩写&quot;&gt;&lt;/a&gt;html 缩写&lt;/h2&gt;&lt;p&gt;所有未知的缩写都会转换成标签，例如，foo → &lt;foo&gt;&lt;/foo&gt;&lt;br&gt;! ：生成后h5文档&lt;br&gt;a ：&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;br&gt;更多查&lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;速查表&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SublimeLinter&quot;&gt;&lt;a href=&quot;#SublimeLinter&quot; class=&quot;headerlink&quot; title=&quot;SublimeLinter&quot;&gt;&lt;/a&gt;SublimeLinter&lt;/h1&gt;&lt;p&gt;SublimeLinter 是前端编码利器——Sublime Text 的一款插件，用于高亮提示用户编写的代码中存在的不规范和错误的写法，支持 JavaScript、CSS、HTML、Java、PHP、Python、Ruby 等十多种开发语言。如何在 Windows 中配置 SublimeLinter 进行 JS &amp;amp; CSS 校验?&lt;/p&gt;
&lt;h2 id=&quot;SublimeLinter-jshint&quot;&gt;&lt;a href=&quot;#SublimeLinter-jshint&quot; class=&quot;headerlink&quot; title=&quot;SublimeLinter-jshint&quot;&gt;&lt;/a&gt;SublimeLinter-jshint&lt;/h2&gt;&lt;p&gt;安装此插件之前需要确保本机安装jshint,在安装nodejs(&lt;em&gt;Winsows上Nodejs的安装配置&lt;/em&gt;)下安装jshint（**）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g jshint&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g csslint&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SideBarEnhancements&quot;&gt;&lt;a href=&quot;#SideBarEnhancements&quot; class=&quot;headerlink&quot; title=&quot;SideBarEnhancements&quot;&gt;&lt;/a&gt;SideBarEnhancements&lt;/h1&gt;&lt;p&gt;侧边栏加强软件:CTRL+K,CTRL+B&lt;br&gt;可配置打开方式,使html文件直接通过快捷键以浏览器打开&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//chrome&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+1&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //Firefox&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+2&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;E:\\firefox\\firefox.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //opera&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+3&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files\\Opera developer\\launcher.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //ie&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+4&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/titoBouzout/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github主页&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SideBarFolders&quot;&gt;&lt;a href=&quot;#SideBarFolders&quot; class=&quot;headerlink&quot; title=&quot;SideBarFolders&quot;&gt;&lt;/a&gt;SideBarFolders&lt;/h1&gt;&lt;p&gt;打开的文件夹都太多了，再用这个来管理文件夹&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarFolders&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/titoBouzout/SideBarFolders&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;BracketHighlighter&quot;&gt;&lt;a href=&quot;#BracketHighlighter&quot; class=&quot;headerlink&quot; title=&quot;BracketHighlighter&quot;&gt;&lt;/a&gt;BracketHighlighter&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/BracketHighlighter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BracketHighlighter&lt;/a&gt;插件以高亮显示配对括号以及当前光标所在区域&lt;/p&gt;
&lt;h1 id=&quot;JSFormat&quot;&gt;&lt;a href=&quot;#JSFormat&quot; class=&quot;headerlink&quot; title=&quot;JSFormat&quot;&gt;&lt;/a&gt;JSFormat&lt;/h1&gt;&lt;p&gt;功能：Javascript的代码格式化插件&lt;br&gt;简介：很多网站的JS代码都进行了压缩，一行式的甚至混淆压缩，这让我们看起来很吃力。而这个插件能帮我们把原始代码进行格式的整理，包括换行和缩进等等，是代码一目了然，更快读懂。&lt;br&gt;使用：在已压缩的JS文件中，右键选择jsFormat或者使用默认快捷键（Ctrl+Alt+F）&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/JsFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/jdc0589/JsFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;TrailingSpaces&quot;&gt;&lt;a href=&quot;#TrailingSpaces&quot; class=&quot;headerlink&quot; title=&quot;TrailingSpaces&quot;&gt;&lt;/a&gt;TrailingSpaces&lt;/h1&gt;&lt;p&gt;有时候，在代码结尾打多了几个空格或Tab并没有任何显示效果TrailingSpaces这款插件能高亮显示多余的空格和Tab.&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/TrailingSpaces&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/SublimeText/TrailingSpaces&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Alignment&quot;&gt;&lt;a href=&quot;#Alignment&quot; class=&quot;headerlink&quot; title=&quot;Alignment&quot;&gt;&lt;/a&gt;Alignment&lt;/h1&gt;&lt;p&gt;功能：”=”号对齐&lt;br&gt;简介：变量定义太多，长短不一，可一键对齐&lt;br&gt;使用：默认快捷键Ctrl+Alt+A和QQ截屏冲突，可设置其他快捷键如：Ctrl+Shift+Alt+A；先选择要对齐的文本&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Alignment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;ColorPicker&quot;&gt;&lt;a href=&quot;#ColorPicker&quot; class=&quot;headerlink&quot; title=&quot;ColorPicker&quot;&gt;&lt;/a&gt;ColorPicker&lt;/h1&gt;&lt;p&gt;一款取色器:CTRL+ALT+C.&lt;/p&gt;
&lt;h1 id=&quot;sublimeREPL&quot;&gt;&lt;a href=&quot;#sublimeREPL&quot; class=&quot;headerlink&quot; title=&quot;sublimeREPL&quot;&gt;&lt;/a&gt;sublimeREPL&lt;/h1&gt;&lt;p&gt;SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等）。Sublime Text的Python控制台仅支持单行输入，十分不方便，所以Sublime​REPL以进行一些编码实验（Experiments）。&lt;/p&gt;
&lt;h1 id=&quot;DocBlocker&quot;&gt;&lt;a href=&quot;#DocBlocker&quot; class=&quot;headerlink&quot; title=&quot;DocBlocker&quot;&gt;&lt;/a&gt;DocBlocker&lt;/h1&gt;&lt;p&gt;对方法等进行注释,一个真正简单的方式来轻松地创建许多语言包括JavaScript，PHP和CoffeeScript的文档块。只要在函数的上面输入/**，按Tab就可以了。DocBlockr会观察函数需要的变量名和类型，并创建文档块。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spadgos/sublime-jsdocs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CSScomb&quot;&gt;&lt;a href=&quot;#CSScomb&quot; class=&quot;headerlink&quot; title=&quot;CSScomb&quot;&gt;&lt;/a&gt;CSScomb&lt;/h1&gt;&lt;p&gt;CssComb是为CSS属性进行排序和格式化插件,&lt;a href=&quot;http://csscomb.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;br&gt;它依赖于Node.js，安装NodeJS后，即可使用CssComb插件，nodejs安装见此（**）&lt;br&gt;使用：菜单&lt;code&gt;Tools-&amp;gt;Run CSScomb&lt;/code&gt;或在CSS文件中按快捷键&lt;code&gt;Ctrl+Shift+C&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Terminal&quot;&gt;&lt;a href=&quot;#Terminal&quot; class=&quot;headerlink&quot; title=&quot;Terminal&quot;&gt;&lt;/a&gt;Terminal&lt;/h1&gt;&lt;p&gt;在编程过程中，我们经常需要使用到命令行窗口,Terminal插件可以允许在Sublime Text 3中打开cmd命令窗口,安装好该插件后,即可使用快捷键&lt;code&gt;Ctrl+Shift+T&lt;/code&gt;呼出命令行窗口。&lt;/p&gt;
&lt;h1 id=&quot;MarkDown-Editing&quot;&gt;&lt;a href=&quot;#MarkDown-Editing&quot; class=&quot;headerlink&quot; title=&quot;MarkDown Editing&quot;&gt;&lt;/a&gt;MarkDown Editing&lt;/h1&gt;&lt;p&gt;支持Markdown语法高亮,支持Github Favored Markdown语法,自带3个主题。&lt;/p&gt;
&lt;h1 id=&quot;MarkdownPreview&quot;&gt;&lt;a href=&quot;#MarkdownPreview&quot; class=&quot;headerlink&quot; title=&quot;MarkdownPreview&quot;&gt;&lt;/a&gt;MarkdownPreview&lt;/h1&gt;&lt;p&gt;MarkdownPreview：按&lt;code&gt;CTRL + B&lt;/code&gt;生成网页HTML，在最前面添加&lt;code&gt;[TOC]&lt;/code&gt;自动生成目录。&lt;/p&gt;
&lt;h1 id=&quot;Autoprefixer&quot;&gt;&lt;a href=&quot;#Autoprefixer&quot; class=&quot;headerlink&quot; title=&quot;Autoprefixer&quot;&gt;&lt;/a&gt;Autoprefixer&lt;/h1&gt;&lt;p&gt;这是一款CSS3私有前缀自动补全插件，该插件使用CanIUse资料库，能精准判断哪些属性需要什么前缀，与CssComb插件一样，该插件也需要系统已安装Node.js环境。&lt;br&gt;使用方法：在输入CSS3属性后（冒号前）按Tab键。&lt;/p&gt;
&lt;h1 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h1&gt;&lt;p&gt;在工作中，版本控制软件最常用的软件之一，而最流行的VCS是Git。你是否厌倦了保存文本文件，并切换回终端运行一些 Git 命令。如果你能从文本编辑器本身执行Git命令，岂不是很好？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装package-control&quot;&gt;&lt;a href=&quot;#安装package-control&quot; class=&quot;headerlink&quot; title=&quot;安装package control&quot;&gt;&lt;/a&gt;安装package control&lt;/h1&gt;&lt;p&gt;安装插件需要先安装package control，有两种安装package control的方法，&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;官方安装方法&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="sublime text3" scheme="http://yoursite.com/tags/sublime-text3/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用</title>
    <link href="http://yoursite.com/2016/07/01/hexo-1/"/>
    <id>http://yoursite.com/2016/07/01/hexo-1/</id>
    <published>2016-07-01T04:23:08.000Z</published>
    <updated>2016-07-26T01:19:49.322Z</updated>
    
    <content type="html">&lt;h1 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h1&gt;&lt;p&gt;默认目录结构如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── .deploy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── public&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── package.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;deploy：执行hexo deploy命令部署到GitHub上的内容目录&lt;/li&gt;
&lt;li&gt;public：执行hexo generate命令，输出的静态网页内容目录&lt;/li&gt;
&lt;li&gt;scaffolds：layout模板文件目录，其中的md文件可以添加编辑&lt;/li&gt;
&lt;li&gt;scripts：扩展脚本目录，这里可以自定义一些javascript脚本&lt;/li&gt;
&lt;li&gt;source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这 里，该目录下可新建页面目录。&lt;ul&gt;
&lt;li&gt;_drafts：草稿文章&lt;/li&gt;
&lt;li&gt;_posts：发布文章&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;themes：主题文件目录&lt;/li&gt;
&lt;li&gt;_config.yml：全局配置文件，大多数的设置都在这里&lt;/li&gt;
&lt;li&gt;package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Hexo上传README文件&quot;&gt;&lt;a href=&quot;#Hexo上传README文件&quot; class=&quot;headerlink&quot; title=&quot;Hexo上传README文件&quot;&gt;&lt;/a&gt;Hexo上传README文件&lt;/h1&gt;&lt;p&gt;Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。&lt;/p&gt;
&lt;p&gt;Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？&lt;/p&gt;
&lt;p&gt;在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。&lt;/p&gt;
&lt;h1 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install &amp;lt;plugin-name&amp;gt; --save # 安装插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update                       # 升级插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm uninstall &amp;lt;plugin-name&amp;gt;      # 卸载插件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo插件&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Plugins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Plugins · hexojs/hexo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;RSS订阅插件&quot;&gt;&lt;a href=&quot;#RSS订阅插件&quot; class=&quot;headerlink&quot; title=&quot;RSS订阅插件&quot;&gt;&lt;/a&gt;RSS订阅插件&lt;/h2&gt;&lt;p&gt;以管理员运行命令行，进入hexo目录下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-feed --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个命令来自&lt;a href=&quot;https://www.npmjs.com/package/hexo-generator-feed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-feed&lt;/a&gt;&lt;br&gt;修改 Hexo 根目录下的 _config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;feed:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       type: atom&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       path: atom.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       limit: 20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意格式，‘feed’不能缩进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Sitemap插件&quot;&gt;&lt;a href=&quot;#Sitemap插件&quot; class=&quot;headerlink&quot; title=&quot;Sitemap插件&quot;&gt;&lt;/a&gt;Sitemap插件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Sitemap 的提交主要的目的，是要避免搜索引擎的爬虫没有完整的收录整个网页的内容，所以提交 Sitemap&lt;br&gt;是能够补足搜索引擎的不足，进而加速网页的收录速度，达到搜寻引擎友好的目的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-sitemap --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-baidu-sitemap --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个命令来自&lt;a href=&quot;https://www.npmjs.com/package/hexo-generator-sitemap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-sitemap&lt;/a&gt;&lt;br&gt;对于国内用户还需要安装插件 hexo-generator-baidu-sitemap&lt;br&gt;修改配置文件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       path: sitemap.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;baidusitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            path: baidusitemap.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;统计&quot;&gt;&lt;a href=&quot;#统计&quot; class=&quot;headerlink&quot; title=&quot;统计&quot;&gt;&lt;/a&gt;统计&lt;/h1&gt;&lt;p&gt;简单易使用&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不蒜子&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;评论&quot;&gt;&lt;a href=&quot;#评论&quot; class=&quot;headerlink&quot; title=&quot;评论&quot;&gt;&lt;/a&gt;评论&lt;/h1&gt;&lt;p&gt;在Hexo中，默认使用的评论是国外的Disqus,但是Disqus只支持G+ twitter等登陆，我改为国内的&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;评论系统。&lt;br&gt;我使用next主题，hexo 版本为3.2.2，在&lt;code&gt;\hexo\themes\next\layout\_partial\comment.ejs&lt;/code&gt;中自动配置多说评论框代码，只需在hexo根目录下的配置文件中加上&lt;code&gt;duoshuo_shortname: Kongwsh&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;404页面&quot;&gt;&lt;a href=&quot;#404页面&quot; class=&quot;headerlink&quot; title=&quot;404页面&quot;&gt;&lt;/a&gt;404页面&lt;/h1&gt;&lt;p&gt;Github Pages提供制作404页面的教程：&lt;a href=&quot;https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creating a custom 404 page for your GitHub Pages site&lt;/a&gt; 。不过 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want your Project Pages site to have a custom 404 page, you must use a custom domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接在根目录下创建自己的404.html或者404.md就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。&lt;br&gt;404公益是个特别好的想法，目前有以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.qq.com/404/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯公益404&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yibo.iyiyun.com/Index/web404&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;404公益_益云(公益互联网)社会创新中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://404page.missingkids.org.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;失蹤兒童少年資料管理中心404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;网站图标&quot;&gt;&lt;a href=&quot;#网站图标&quot; class=&quot;headerlink&quot; title=&quot;网站图标&quot;&gt;&lt;/a&gt;网站图标&lt;/h1&gt;&lt;p&gt;将favicon.ico放到工程根目录下即可，也就是hexo\source目录。可以在Faviconer制作你的ico图标，国内有&lt;a href=&quot;http://www.bitbug.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;比特虫&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;hexo更新&quot;&gt;&lt;a href=&quot;#hexo更新&quot; class=&quot;headerlink&quot; title=&quot;hexo更新&quot;&gt;&lt;/a&gt;hexo更新&lt;/h1&gt;&lt;p&gt;更新hexo:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm update -g hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更新主题：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd themes/你的主题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git pull&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更新插件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;图床&quot;&gt;&lt;a href=&quot;#图床&quot; class=&quot;headerlink&quot; title=&quot;图床&quot;&gt;&lt;/a&gt;图床&lt;/h1&gt;&lt;p&gt;图床专门用来存放图片，同时允许把图片对外连接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://portal.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maxiang.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;马克飞象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yotuku.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yotuku&lt;/a&gt; 我用的这个，免费的。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tietuku.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贴图库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;p&gt;以下还没做&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;绑定域名&lt;/li&gt;
&lt;li&gt;分享&lt;/li&gt;
&lt;li&gt;搜索&lt;/li&gt;
&lt;li&gt;同步 Dropbox &lt;/li&gt;
&lt;li&gt;将独立域名与GitHub Pages的空间绑定，官方教程：&lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using a custom domain with GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;迁移&lt;/li&gt;
&lt;li&gt;CDN加速&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h1&gt;&lt;p&gt;默认目录结构如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── .deploy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── public&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── package.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="Github Page" scheme="http://yoursite.com/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建Github Pages博客记录</title>
    <link href="http://yoursite.com/2016/06/30/hexo-0/"/>
    <id>http://yoursite.com/2016/06/30/hexo-0/</id>
    <published>2016-06-30T04:23:08.000Z</published>
    <updated>2016-07-24T12:43:13.289Z</updated>
    
    <content type="html">&lt;h1 id=&quot;HEXO-简介&quot;&gt;&lt;a href=&quot;#HEXO-简介&quot; class=&quot;headerlink&quot; title=&quot;HEXO 简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;HEXO 简介&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Hexo出自&lt;em&gt;&lt;a href=&quot;https://github.com/tommy351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tommy351&lt;/a&gt;&lt;/em&gt;之手，基于Node.js的静态博客程序，Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;Hexo &lt;em&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装前提&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;注意：系统：win8.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装git&lt;br&gt;下载安装&lt;em&gt; &lt;a href=&quot;https://git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;安装node.js&lt;br&gt;简单安装方法，&lt;em&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/em&gt;下载.msi格式，默认安装会自动配置环境变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;使用npm命令即可直接安装 (可以直接在屏幕任意地方直接右键: Git Bash Here)&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;“g”表示全局安装,静候几分钟安装完成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意要在管理员下运行命令行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;部署Hexo&quot;&gt;&lt;a href=&quot;#部署Hexo&quot; class=&quot;headerlink&quot; title=&quot;部署Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;部署Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;现在本地创建hexo文件夹（例如我的D:\HEXO），在哪都行，然后进入hexo目录，右键 Git Bash Here&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo init&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Hexo 自动创建所需的文件&lt;br&gt;npm 安装依赖环境&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ok了。&lt;/p&gt;
&lt;h1 id=&quot;运行Hexo&quot;&gt;&lt;a href=&quot;#运行Hexo&quot; class=&quot;headerlink&quot; title=&quot;运行Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;运行Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;现在在D:\HEXO内右键&lt;em&gt;Git Bash Here&lt;/em&gt; 输入以下命令&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行成功的界面&lt;br&gt;&lt;img src=&quot;http://i2.piimg.com/567571/efef15c89c1f71e8.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;访问 &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 查看效果&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/420c06e6efb72f6d.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Github&quot;&gt;&lt;a href=&quot;#Github&quot; class=&quot;headerlink&quot; title=&quot;Github&quot;&gt;&lt;/a&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;注册github账号&lt;/li&gt;
&lt;li&gt;添加SSH公钥&lt;/li&gt;
&lt;li&gt;使用GitHub Pages建立博客&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注册完github账号，如何让本地git项目与远程的github建立联系呢，使用SSH key。&lt;/p&gt;
&lt;h2 id=&quot;检查SSH-Key&quot;&gt;&lt;a href=&quot;#检查SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;检查SSH Key&quot;&gt;&lt;/a&gt;检查SSH Key&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd ~/.ssh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提示“No such file or directory”代表咱是第一回用。&lt;/p&gt;
&lt;h2 id=&quot;生成新的SSH-Key&quot;&gt;&lt;a href=&quot;#生成新的SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;生成新的SSH Key&quot;&gt;&lt;/a&gt;生成新的SSH Key&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &amp;quot;you@youremail.com&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;屏幕提示：Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):（回车）&lt;br&gt;Enter passphrase (empty for no passphrase):（回车）&lt;br&gt;Enter same passphrase again:（回车）&lt;br&gt;hexo 自动部署如果有密码就会失败。&lt;/p&gt;
&lt;h2 id=&quot;添加SSH-Key到GitHub&quot;&gt;&lt;a href=&quot;#添加SSH-Key到GitHub&quot; class=&quot;headerlink&quot; title=&quot;添加SSH Key到GitHub&quot;&gt;&lt;/a&gt;添加SSH Key到GitHub&lt;/h2&gt;&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd ~/.ssh/ &amp;amp;&amp;amp; ls&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到此目录下的文件：&lt;code&gt;id_rsa&lt;/code&gt; &lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat id_rsa.pub&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把SSH key 复制下来&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/e8bd1567403a0940.png&quot; alt=&quot;3&quot;&gt;&lt;br&gt;哈，登录自己的github账号 Settings —&amp;gt; SSH and GPG keys—&amp;gt; Add SSH keys &lt;a href=&quot;https://github.com/settings/keys&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/settings/keys&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/8a8501d59a29c75d.png&quot; alt=&quot;4&quot;&gt;&lt;br&gt;测试一下有没有添加成功&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; &lt;code&gt;Hi Kongwsh! You&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt;说明已经配置成功。&lt;/p&gt;
&lt;h2 id=&quot;设置用户信息&quot;&gt;&lt;a href=&quot;#设置用户信息&quot; class=&quot;headerlink&quot; title=&quot;设置用户信息&quot;&gt;&lt;/a&gt;设置用户信息&lt;/h2&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.name &amp;quot;Kongwsh&amp;quot;//用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.email  &amp;quot;echokws@163.com&amp;quot;//填写自己的邮箱&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本机已成功连接到github。&lt;/p&gt;
&lt;h2 id=&quot;使用GitHub-Pages建立博客&quot;&gt;&lt;a href=&quot;#使用GitHub-Pages建立博客&quot; class=&quot;headerlink&quot; title=&quot;使用GitHub Pages建立博客&quot;&gt;&lt;/a&gt;使用GitHub Pages建立博客&lt;/h2&gt;&lt;p&gt;Github Pages可以被认为是用户编写的、托管在github上的静态网页。点这里官方说明&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;amp;组织页（站），另一种是依附项目的pages。&lt;/p&gt;
&lt;p&gt;想建立个人博客是用的第一种，形如Kongwsh.github.io这样的可访问的站，每个用户名下面只能建立一个。建立与名字一致的仓库名，格式为yourname.github.io。&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/097549dcd2066599.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;开始使用hexo&quot;&gt;&lt;a href=&quot;#开始使用hexo&quot; class=&quot;headerlink&quot; title=&quot;开始使用hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;开始使用hexo&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;hexo-命令&quot;&gt;&lt;a href=&quot;#hexo-命令&quot; class=&quot;headerlink&quot; title=&quot;hexo 命令&quot;&gt;&lt;/a&gt;hexo 命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new &amp;quot;postName&amp;quot; #新建文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo new page &amp;quot;pageName&amp;quot; #新建页面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo generate #生成静态页面至public目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo server #开启预览访问端口（默认端口4000，&amp;apos;ctrl + c&amp;apos;关闭server）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo deploy #将.deploy目录部署到GitHub&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo clean # 清理 database 和 /public目录， /public 目录里是生成的静态文件数据&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简写为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo n == hexo new&lt;br&gt;hexo g == hexo generate&lt;br&gt;hexo s == hexo server&lt;br&gt;hexo d == hexo deploy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;组合命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo d -g #生成加部署 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s -g #预览加部署&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s -debug #开启调试模式，观察命令行输出是否有异常，这些信息有助于定位错误&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：当本地调试出现诡异现象时候，请先使用 hexo clean 清理已经生成的静态文件后重试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;进入hexo目录，右键&lt;em&gt;Git Bash Here&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-deployer-git --save ## 安装部署所需要的插件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;克隆hexo主题&quot;&gt;&lt;a href=&quot;#克隆hexo主题&quot; class=&quot;headerlink&quot; title=&quot;克隆hexo主题&quot;&gt;&lt;/a&gt;克隆hexo主题&lt;/h2&gt;&lt;p&gt;初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, &lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多主题&lt;/a&gt; 可以在官网中找到。&lt;br&gt;以&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;next&lt;/a&gt; 主题为例，Next主题&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;克隆主题&quot;&gt;&lt;a href=&quot;#克隆主题&quot; class=&quot;headerlink&quot; title=&quot;克隆主题&quot;&gt;&lt;/a&gt;克隆主题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;启用主题&quot;&gt;&lt;a href=&quot;#启用主题&quot; class=&quot;headerlink&quot; title=&quot;启用主题&quot;&gt;&lt;/a&gt;启用主题&lt;/h3&gt;&lt;p&gt;打开站点根目录下配置文件_config.yml， 找到 theme 字段，并将其值更改为 next。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; theme: next&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 修改配置文件冒号后一定空一格，否则不起作用。&lt;br&gt;在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。 &lt;/p&gt;
&lt;h3 id=&quot;验证主题&quot;&gt;&lt;a href=&quot;#验证主题&quot; class=&quot;headerlink&quot; title=&quot;验证主题&quot;&gt;&lt;/a&gt;验证主题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo s -debug&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用浏览器访问&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;，检查站点是否正确运行。&lt;/p&gt;
&lt;h2 id=&quot;Hexo配置&quot;&gt;&lt;a href=&quot;#Hexo配置&quot; class=&quot;headerlink&quot; title=&quot;Hexo配置&quot;&gt;&lt;/a&gt;Hexo配置&lt;/h2&gt;&lt;p&gt;配置 Hexo目录 下的 _config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Hexo Configuration&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Site&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;title: Kongwsh           # 网站标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subtitle:                # 副标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;description: Front-End   # 描述，给搜索引擎用的，在生成html中的head-&amp;gt;meta中可看到&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;author: Kong             # 网站作者&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;language: zh-Hans        # 语言&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;email: echokws@163.com   # 邮箱&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;timezone: Asia/Hong_Kong # 时区&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;avatar: /images/avatar.jpg # 头像&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# URL #域名和文件结构&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## If your site is put in a subdirectory, set url as &amp;apos;http://yoursite.com/child&amp;apos; and root as &amp;apos;/child/&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;url: http://ibruce.info #你的域名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;root: /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag_dir: tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;archive_dir: archives&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category_dir: categories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;code_dir: downloads/code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Writing #写文章选项&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new_post_name: :title.md # File name of new posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default_layout: post #默认layout方式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auto_spacing: false # Add spaces between asian characters and western characters&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;titlecase: false # Transform title into titlecase&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;external_link: true # Open external links in new tab&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max_open_file: 100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;multi_thread: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;filename_case: 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;render_drafts: false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;highlight: #代码高亮&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  enable: true #是否启用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line_number: false #是否显示行号&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  tab_replace:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Category &amp;amp; Tag #分类与标签&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default_category: uncategorized # default&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category_map:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag_map:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 2: Enable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 1: Disable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 0: Fully Disable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;archive: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Server #本地服务参数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Hexo uses Connect as a server&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## You can customize the logger format as defined in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## http://www.senchalabs.org/connect/logger.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port: 4000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;logger: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;logger_format:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Date / Time format #日期显示格式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## You can customize the date format as defined in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date_format: MMM D YYYY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;time_format: H:mm:ss&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Pagination #分页设置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Set per_page to 0 to disable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;per_page: 10 #每页10篇文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pagination_dir: page&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Disqus #社会化评论disqus&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;disqus_shortname:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Extensions #插件，暂时未安装插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Plugins: https://github.com/tommy351/hexo/wiki/Plugins&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Themes: https://github.com/tommy351/hexo/wiki/Themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 主题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;theme: modernist # raytaylorism # pacman # modernist # light&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;exclude_generator:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Deployment&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;deploy: &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: git   # 部署位置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  repository: git@github.com:Kongwsh/Kongwsh.github.io.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  # 这里填写项目的地址 git@github.com:Git用户名/Git用户名.github.io.git 参照上面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  branch: master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;写文章&quot;&gt;&lt;a href=&quot;#写文章&quot; class=&quot;headerlink&quot; title=&quot;写文章&quot;&gt;&lt;/a&gt;写文章&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new &amp;quot;postName&amp;quot;  #新建博文,其中postName是博文题目&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行命令后，会在项目\source_posts中生成postName.md文件，用编辑器打开编写即可。&lt;a href=&quot;http://wowubuntu.com/markdown/index.html#blockquote&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown语法说明&lt;/a&gt;&lt;br&gt;当然，也可以直接在\source_posts中新建一个md文件。&lt;br&gt;如果不想博文在首页全部显示, 并能出现 &lt;code&gt;阅读全文&lt;/code&gt;按钮效果, 需要在你想在首页显示的部分下添加  &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;此处及以上的内容会在首页显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;一下是在首页隐藏的部分&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HEXO-简介&quot;&gt;&lt;a href=&quot;#HEXO-简介&quot; class=&quot;headerlink&quot; title=&quot;HEXO 简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;HEXO 简介&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Hexo出自&lt;em&gt;&lt;a href=&quot;https://github.com/tommy351&quot;&gt;tommy351&lt;/a&gt;&lt;/em&gt;之手，基于Node.js的静态博客程序，Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;Hexo &lt;em&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;官方文档&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="Github Page" scheme="http://yoursite.com/tags/Github-Page/"/>
    
  </entry>
  
</feed>
