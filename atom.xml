<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kongwsh</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-24T14:10:45.583Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kong</name>
    <email>echokws@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript高级程序设计学习笔记（一）创建对象</title>
    <link href="http://yoursite.com/2016/08/22/javascript-0/"/>
    <id>http://yoursite.com/2016/08/22/javascript-0/</id>
    <published>2016-08-22T00:31:08.000Z</published>
    <updated>2016-08-24T14:10:45.583Z</updated>
    
    <content type="html">&lt;h1 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h1&gt;&lt;p&gt;可以使用构造函数Object或对象字面量创建单个对象，但是如果使用同一接口创建很多对象会产生大量重复代码。解决办法如下：&lt;br&gt;用函数来封装以特定接口创建对象的细节。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function createPerson(name,age,job)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var o = new Object();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    o.sayName=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    return o;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=createPerson(&amp;quot;Nicholas&amp;quot;,29,&amp;quot;software Engineer&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person2=createPerson(&amp;quot;Grey&amp;quot;,24,&amp;quot;Doctor&amp;quot;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解决了多个相似对象的问题，没有解决对象识别问题。&lt;/p&gt;
&lt;h1 id=&quot;构造函数模式&quot;&gt;&lt;a href=&quot;#构造函数模式&quot; class=&quot;headerlink&quot; title=&quot;构造函数模式&quot;&gt;&lt;/a&gt;构造函数模式&lt;/h1&gt;&lt;p&gt;创建自定义的构造函数，从而定义自定义对象类型的属性和方法。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person(name,age,job)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.sayName = function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1 = new Person(&amp;quot;Nocholas&amp;quot;,29,&amp;quot;software Engineer&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person2 = new Person(&amp;quot;Grey&amp;quot;,24,&amp;quot;Doctor&amp;quot;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Person()与createPerson()不同之处：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有显示创建对象&lt;/li&gt;
&lt;li&gt;直接将属性方法赋给this对象&lt;/li&gt;
&lt;li&gt;没有return&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要创建Person的实例，有以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建一个新对象&lt;/li&gt;
&lt;li&gt;将构造函数作用域赋给新对象（this指向新对象）&lt;/li&gt;
&lt;li&gt;执行构造函数中的代码(为这个新对象添加属性)&lt;/li&gt;
&lt;li&gt;返回新对象&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;创建的person1和person2实例都有一个constructor属性，该属性指向Person。而constructor属性最初是用来表示对象类型的，这样就解决了工厂模式无法识别对象类型的问题。&lt;br&gt;构造函数模式也有缺点，每个方法都要在每个实例上重新创造一遍，而不同实例上的同名函数是不相等的。如何实现不同实例共享属性和方法呢，下面原型模式解决了这个问题。&lt;/p&gt;
&lt;h1 id=&quot;原型模式&quot;&gt;&lt;a href=&quot;#原型模式&quot; class=&quot;headerlink&quot; title=&quot;原型模式&quot;&gt;&lt;/a&gt;原型模式&lt;/h1&gt;&lt;p&gt;##原型对象&lt;br&gt;我们创建的每个函数都有一个prototype属性，这个属性是一个指针，指向原型对象。原型对象的用途是包含可以由特定类型的所有实例共享的属性和方法。在默认情况下，每个原型对象都有一个constructor（构造函数）属性，这个属性也是一个指针，指向prototype属性所在函数。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&amp;quot;Nicola&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=23;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&amp;quot;Engineer&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();//&amp;quot;Nicola&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person2=new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person2.sayName();//&amp;quot;Nicola&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当调用构造函数创建一个实例后，该实例的内部将包含一个指针[[prototype]]指向原型对象。原型对象&lt;em&gt;最初&lt;/em&gt;只包含constructor属性，其他的方法是从Object继承而来。&lt;br&gt;&lt;img src=&quot;http://i1.buimg.com/567571/b30cde583c99e6b5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;[[prototype]]为内部属性，无法访问到。但是有两个方法：&lt;br&gt;1.isPrototypeOf()确定对象之间是否存在这种不正当关系。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(Person.prototype.isPrototypeOf(person1));//true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(Person.prototype.isPrototypeOf(person2));//true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2.Object.getPrototypeOf()获取一个对象的原型。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(Object.getPrototypeOf(person1)==Person.prototype);//true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(Object.getPrototypeOf(person1).name);//&amp;quot;Nicola&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每当代码读取某个对象的属性时，都会在&lt;em&gt;原型链&lt;/em&gt;上搜索，目标是具有给定名字的属性。原型对象中的constructor属性也是实例共享的，可以通过对象实例访问。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.constructor==Person);//true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当为对象实例添加一个属性时，这个属性就会屏蔽原型对象中的同名属性，这样就阻止我们访问原型对象中的同名属性，但不会修改那个属性，通过delet操作可完全删除实例属性，可重新对原型对象的访问。&lt;br&gt;hasOwnProperty():检测一个属性是否存在于实例中，继承自Object。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&amp;quot;Grey&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.name);//&amp;quot;Grey&amp;quot;---来自实例&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.hasOwnProperty(&amp;quot;name&amp;quot;));//true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.name);//&amp;quot;Nichola&amp;quot;---来自原型&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.hasOwnProperty(&amp;quot;name&amp;quot;));//false&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Object.getOwnPropertyDescriptor():返回指定对象上一个&lt;em&gt;自有属性&lt;/em&gt;对应的属性描述符,不能获取原型对象上的属性描述符。&lt;/p&gt;
&lt;h2 id=&quot;in操作符&quot;&gt;&lt;a href=&quot;#in操作符&quot; class=&quot;headerlink&quot; title=&quot;in操作符&quot;&gt;&lt;/a&gt;in操作符&lt;/h2&gt;&lt;p&gt;in操作符只要通过对象能够访问到属性，包括原型链上的，就会返回true。hasOwnProperty()只在属性存在于实例中才会返回true。结合使用可以判断原型链上的属性。&lt;br&gt;1.for-in 循环遍历&lt;br&gt;返回所有能通过对象访问的可枚举的属性，实例属性加原型属性。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&amp;quot;Nicola&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=23;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&amp;quot;Engineer&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;for(var prop in person1)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (prop==&amp;quot;name&amp;quot;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    alert(&amp;quot;found!&amp;quot;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;//&amp;quot;found!&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(prop);//&amp;quot;sayName&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;每个不同的属性，语句都会被执行一次。每次迭代，一个不同的属性名将会赋予 prop,最后prop只存有最有一个迭代的属性名。&lt;br&gt;2.Object.keys()&lt;br&gt;该方法会返回一个由给定对象的所有可枚举&lt;em&gt;实例属性&lt;/em&gt;（不包括原形链上继承来的书香）的属性名组成的数组，数组中属性名的排列顺序和使用for-in循环遍历该对象时返回的顺序一致。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&amp;quot;Nicola&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=23;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&amp;quot;Engineer&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&amp;quot;Rob&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.age=22;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1keys=object.keys(person1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1keys);//&amp;quot;name,age&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.Object.getOwnPropertyNames()&lt;br&gt;该方法返回一个由指定对象的所有&lt;em&gt;实例属性&lt;/em&gt;的属性名（包括不可枚举属性）组成的数组。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.name=&amp;quot;Nicola&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.age=23;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.job=&amp;quot;Engineer&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    Person.prototype.sayName=function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.name=&amp;quot;Rob&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.age=22;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Object.defineProperty(person1, &amp;quot;key&amp;quot;, &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  enumerable: false,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;);//属性key不可枚举&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;console.log(Object.getOwnPropertyNames(person1).sort());//[&amp;quot;age&amp;quot;, &amp;quot;key&amp;quot;, &amp;quot;name&amp;quot;]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;重写原型对象&quot;&gt;&lt;a href=&quot;#重写原型对象&quot; class=&quot;headerlink&quot; title=&quot;重写原型对象&quot;&gt;&lt;/a&gt;重写原型对象&lt;/h2&gt;&lt;p&gt;用包含所有属性的对象字面量重写原型对象，这样更简便一些，但是会断开了现有原型与任何之前已经存在的对象实例之间的联系，他们引用的仍然是最初的原型。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; var person1 = new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&amp;quot;Nicola&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    age:23,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    job:&amp;quot;Engineer&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName:function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();//TypeError: person1.sayName is not a function&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;重写原型对象之后的关系&lt;br&gt;&lt;img src=&quot;http://i4.buimg.com/567571/c2342edc484af3ef.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;缺点&quot;&gt;&lt;a href=&quot;#缺点&quot; class=&quot;headerlink&quot; title=&quot;缺点&quot;&gt;&lt;/a&gt;缺点&lt;/h2&gt;&lt;p&gt;1.由于不向构造函数传参，所有实例在默认情况下都会获得相同的属性值。&lt;br&gt;2.共享引用类型值得属性，牵一发动全身不是我们想要的，我们希望每个实例有属于自己的全部属性，改变其中一个的属性，不会影响其他。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function Person()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    name:&amp;quot;Nicola&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    age:23,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    job:&amp;quot;Engineer&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    friends:[A,B],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName:function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1 = new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person2 = new Person();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&amp;quot;C&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends);//&amp;quot;A,B,C&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.friends);//&amp;quot;A,B,C&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;给person1添加一个朋友C，由于大家引用一个数组，person2也被动的添加了一个朋友C,这是大家不希望看到的，每个实例都应该有自己隐私。&lt;/p&gt;
&lt;h1 id=&quot;组合使用构造函数和原型模式&quot;&gt;&lt;a href=&quot;#组合使用构造函数和原型模式&quot; class=&quot;headerlink&quot; title=&quot;组合使用构造函数和原型模式&quot;&gt;&lt;/a&gt;组合使用构造函数和原型模式&lt;/h1&gt;&lt;p&gt;这种方式就解决了大每个实例既想要有个对象类型，有共同的属性和方法，也不出卖隐私。构造函数定义实例属性。原型对象定义共享的属性和方法。每个实例有自己的一份实例属性副本，又共享着对方法的引用。这是一种最常见的方式。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function  Person(name,age,job)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.friends=[&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Person.prototype=&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    constructor:Person,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sayName: function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1=new Person(&amp;quot;Nichola&amp;quot;,29,&amp;quot;Engineer&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person2=new Person(&amp;quot;Grey&amp;quot;,23,&amp;quot;Doctor&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.friends.push(&amp;quot;C&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.friends);//&amp;quot;A,B,C&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person2.friends);//&amp;quot;A,B&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;alert(person1.sayName()==person2.sayName());//TRUE&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;动态原型模式&quot;&gt;&lt;a href=&quot;#动态原型模式&quot; class=&quot;headerlink&quot; title=&quot;动态原型模式&quot;&gt;&lt;/a&gt;动态原型模式&lt;/h1&gt;&lt;p&gt;动态原型是指视情况而定使用原型模式。把所有信息封装在构造函数之中，在构造函数中初始化原型（在必要情况下），这样就可以同时使用构造函数和原型的优点。通过检查某个应该存在的方法是否有效，来决定是否初始化原型。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;function  Person(name,age,job)&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.name=name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.age=age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    this.job=job;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    //方法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (typeof this.sayName !=&amp;quot;function&amp;quot;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        Person.prototype.sayName = function()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            alert(this.name);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var person1 = new Person(&amp;quot;Nichola&amp;quot;,29,&amp;quot;Engineer&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;person1.sayName();//&amp;quot;Nichola&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;工厂模式&quot;&gt;&lt;a href=&quot;#工厂模式&quot; class=&quot;headerlink&quot; title=&quot;工厂模式&quot;&gt;&lt;/a&gt;工厂模式&lt;/h1&gt;&lt;p&gt;可以使用构造函数Object或对象字面量创建单个对象，但是如果使用同一接口创建很多对象会产生大量重复代码。解决办法如下：&lt;b
    
    </summary>
    
    
      <category term="javascript" scheme="http://yoursite.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3 基础篇</title>
    <link href="http://yoursite.com/2016/07/24/sublime-1/"/>
    <id>http://yoursite.com/2016/07/24/sublime-1/</id>
    <published>2016-07-24T08:19:08.000Z</published>
    <updated>2016-07-25T14:56:14.722Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装Sublime-Text3&quot;&gt;&lt;a href=&quot;#安装Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;安装Sublime Text3&quot;&gt;&lt;/a&gt;安装Sublime Text3&lt;/h1&gt;&lt;p&gt;Sublime Text&lt;a href=&quot;http://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方网站&lt;/a&gt;提供了Sublime Text各系统各版本的下载，目前Sublime Text的最新版本是&lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text3&lt;/a&gt;。这里以Windows版本的SublimeText3安装为例。注意在安装时勾选Add to explorer context menu，这样在右键单击文件时就可以直接使用Sublime Text打开。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;配置环境变量&quot;&gt;&lt;a href=&quot;#配置环境变量&quot; class=&quot;headerlink&quot; title=&quot;配置环境变量&quot;&gt;&lt;/a&gt;配置环境变量&lt;/h1&gt;&lt;p&gt;使用&lt;code&gt;Win + R&lt;/code&gt;运行&lt;code&gt;sysdm.cpl&lt;/code&gt;打开“系统属性”。然后在“高级”选项卡里选择“环境变量”，编辑“Path”，增加Sublime Text的安装目录（例如D:\Sublime Text 3）。&lt;br&gt;接下来就可以在命令行里面利用subl命令直接使用Sublime Text了：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;subl file    :: 使用Sublime Text打开file文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subl folder  :: 使用Sublime Text打开folder文件夹&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subl .       :: 使用Sublime Text当前文件夹&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;快捷键&quot;&gt;&lt;a href=&quot;#快捷键&quot; class=&quot;headerlink&quot; title=&quot;快捷键&quot;&gt;&lt;/a&gt;快捷键&lt;/h1&gt;&lt;p&gt;按功能快捷键列表如下&lt;br&gt;通用（General）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl+Z: 撤销&lt;br&gt;   Ctrl+Y: 恢复撤销&lt;br&gt;   Ctrl+T：词互换&lt;br&gt;   Ctrl + U:回退，软撤销&lt;br&gt;   ↑↓←→：上下左右移动光标，注意不是不是KJHL！&lt;br&gt;   Alt：调出菜单&lt;br&gt;   Ctrl + Shift + P：调出命令板（Command Palette）&lt;br&gt;   Ctrl + `：调出控制台&lt;br&gt;   Ctrl+K+B 开启/关闭侧边栏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;缩进&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   ctrl+] 增加缩进&lt;br&gt;   ctrl+[ 减少缩进&lt;br&gt;   Tab：自动缩进四个空格&lt;br&gt;   Shift+Tab： 去除缩进&lt;br&gt;   ctrl+shift+v ：粘贴时缩进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编辑（Editing）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + Enter：在当前行下面新增一行然后跳至该行&lt;br&gt;   Ctrl + Shift + Enter：在当前行上面增加一行并跳至该行&lt;br&gt;   Ctrl + ←/→：进行逐词移动&lt;br&gt;   Ctrl + Shift + ←/→:进行逐词选择&lt;br&gt;   Ctrl + ↑/↓:移动当前显示区域&lt;br&gt;   Ctrl + Shift + ↑/↓:移动当前行，与上下行互换&lt;br&gt;   Ctrl+鼠标左键：可以同时选择要编辑的多处文本&lt;br&gt;   Ctrl+Shift+D ：复制光标所在整行，插入在该行之前&lt;br&gt;   Ctrl+Shift+K ：删除整行&lt;br&gt;   Ctrl+KK ：从光标处删除至行尾&lt;br&gt;   Ctrl+K Backspace ：从光标处删除至行首&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;选择（Selecting）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + D：选择当前光标所在的词并高亮该词所有出现的位置，再次Ctrl +&lt;br&gt;   D选择该词出现的下一个位置，在多重选词的过程中，使用Ctrl +&lt;br&gt;   K进行跳过，使用Ctrl + U进行回退，使用Esc退出多重编辑&lt;br&gt;   Ctrl + Shift + L：将当前选中区域打散&lt;br&gt;   Ctrl+L：选择整行（按住-继续选择下行）&lt;br&gt;   Ctrl + J：把当前选中区域合并为一行&lt;br&gt;   Ctrl + M：在起始括号和结尾括号间切换，光标移动至括号内开始或结束的位置&amp;gt;&lt;br&gt;   Ctrl + Shift + M：快速选择括号间的内容&lt;br&gt;   Ctrl + Shift + J：快速选择同缩进的内容&lt;br&gt;   Ctrl + Shift + Space：快速选择当前作用域（Scope）的内容&lt;br&gt;   Ctrl+Shift+A ：选择光标位置父标签对儿&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查找&amp;amp;替换（Finding&amp;amp;Replacing）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   F3：跳至当前关键字下一个位置&lt;br&gt;   Shift+F3：跳到当前关键字上一个位置，可一次性选择全部的相同文本进行同时编辑&lt;br&gt;   Alt + F3：选中当前关键字出现的所有位置&lt;br&gt;   Ctrl + F/H：进行标准查找/替换，之后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* Alt + C：切换大小写敏感（Case-sensitive）模式
* Alt + W：切换整字匹配（Whole matching）模式
* Alt + R：切换正则匹配（Regex matching）模式
* Ctrl + Shift + H：替换当前关键字
* Ctrl + Alt + Enter：替换所有关键字匹配
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   Ctrl + Shift + F：多文件搜索&amp;amp;替换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;格式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  Ctrl+Shift+[ ： 折叠代码&lt;br&gt;  Ctrl+Shift+] ：展开代码&lt;br&gt;  Ctrl+K+U ：改为大写&lt;br&gt;  Ctrl+K+L ：改为小写&lt;br&gt;  Alt+. ：闭合当前标签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;注释&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl+Shift+/ ：注释已选择内容&lt;br&gt;   Ctrl+/ ：注释整行（如已选择内容，同“Ctrl+Shift+/”效果）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;跳转（Jumping）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + P：跳转到指定文件，输入文件名后可以：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* @ 符号跳转：输入@symbol跳转到symbol符号所在的位置
* # 关键字跳转：输入#keyword跳转到keyword所在的位置
* : 行号跳转：输入:12跳转到文件的第12行。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;   Ctrl + R：跳转到指定符号 快速列出/&lt;br&gt;   跳转到某个函数，对于Markdown，会列出其大纲&lt;br&gt;   Ctrl + G：跳转到指定行号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;窗口（Window）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   Ctrl + Shift + N：创建一个新窗口&lt;br&gt;   Ctrl + N：在当前窗口创建一个新标签&lt;br&gt;   Ctrl + W：关闭当前标签，当窗口内没有标签时会关闭该窗口&lt;br&gt;   Ctrl + Shift + T：恢复刚刚关闭的标签&lt;br&gt;   Ctrl+Tab： 当前窗口中的标签页切换&lt;br&gt;   Ctrl+F2 ：设置/取消书签&lt;br&gt;  Shift+F2 ：上一个书签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;屏幕（Screen）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;   F11：切换普通全屏&lt;br&gt;   Shift + F11：切换无干扰全屏&lt;br&gt;   Alt+Shift+1:（非小键盘）窗口分屏，恢复默认1屏&lt;br&gt;   Alt+Shift+2:左右分屏-2列&lt;br&gt;   Alt+Shift+3:左右分屏-3列&lt;br&gt;   Alt+Shift+4: 左右分屏-4列&lt;br&gt;   Alt+Shift+5:等分4屏&lt;br&gt;   Alt+Shift+8: 垂直分屏-2屏&lt;br&gt;   Alt+Shift+9: 垂直分屏-3屏&lt;br&gt;   分屏之后，使用Ctrl + 数字键跳转到指定屏，使用Ctrl + Shift +&lt;br&gt;   数字键将当前屏移动到指定屏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;快捷键配置&quot;&gt;&lt;a href=&quot;#快捷键配置&quot; class=&quot;headerlink&quot; title=&quot;快捷键配置&quot;&gt;&lt;/a&gt;快捷键配置&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.io/en/latest/reference/settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;系统快捷键的默认配置&lt;/a&gt;&lt;br&gt;自定义快捷键配置：&lt;br&gt;打开&lt;code&gt;Preferences -&amp;gt; Key Bindings - User&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Sublime-Text内运行javascript-ES6&quot;&gt;&lt;a href=&quot;#Sublime-Text内运行javascript-ES6&quot; class=&quot;headerlink&quot; title=&quot;Sublime Text内运行javascript(ES6)&quot;&gt;&lt;/a&gt;Sublime Text内运行javascript(ES6)&lt;/h1&gt;&lt;p&gt;1.首先安装nodejs&lt;br&gt;当然你可以使用其它诸如jsc之类的环境来运行js, 本文使用的是nodejs. 首先确保你的电脑已经安装好nodejs, 并已将其添加到环境变量中 (一般安装时自动添加或者询问是否添加)&lt;/p&gt;
&lt;p&gt;2.添加build system&lt;br&gt;在sublime text中依次打开&lt;code&gt;Tools -&amp;gt; Build System -&amp;gt; New Build System…&lt;/code&gt;粘贴以下代码后保存(如Node.sublime-build), 然后把Build System设成Automatic&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; “cmd”: [“node”, “—use-strict”, “—harmony”, “$file”], “selector”: “source.js”&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.附加说明&lt;br&gt;在以上的build文件中(Node.sublime-build), node是执行命令,&lt;code&gt;—harmony&lt;/code&gt;和&lt;code&gt;—use-strict&lt;/code&gt;是执行参数, &lt;code&gt;$file&lt;/code&gt;是当前文件名, 所以一次build操作实际上相当于在命令行中执行了&lt;code&gt;node —use-strict —harmony filename&lt;/code&gt;. &lt;code&gt;—harmony&lt;/code&gt;表示启用ES Harmony features, 而这些features目前只能在strict模式下运行, 所以需要同时添加&lt;code&gt;use-strict&lt;/code&gt;参数(详见&lt;a href=&quot;http://stackoverflow.com/questions/17253509/what-is-extended-mode&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;what-is-extended-mode&lt;/a&gt;).&lt;br&gt;如果不想启用es6的特性,把build文件更改成以下代码保存即可.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123; “cmd”: [“node”, “$file”], “selector”: “source.js”&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4.具体使用&lt;br&gt;在sublime test中新建一个test.js文件, 然后输入你的测试代码, 比如:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;for (let i = 0; i &amp;lt; 3; i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    console.log(&amp;apos;i:&amp;apos;, i);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用快捷键 &lt;code&gt;ctrl + b&lt;/code&gt;, 将得到以下执行结果:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;i: 0i: 1i: 2[Finished in 0.1s]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注解:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  (1)文件必须是存在于磁盘中的, 而不是untitled的,&lt;br&gt;  否则sublime无法找到相应的文件.&lt;br&gt;  (2)Nodejs安装目录需要加入path环境变量中，否则Ctrl+B运行 会出现：&lt;br&gt;  [WinError2] 系统找不到指定的文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;正则表达式（学习中）·&quot;&gt;&lt;a href=&quot;#正则表达式（学习中）·&quot; class=&quot;headerlink&quot; title=&quot;正则表达式（学习中）·&quot;&gt;&lt;/a&gt;正则表达式（学习中）·&lt;/h1&gt;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Regular_expression&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;正则表达式&lt;/a&gt;&lt;/em&gt;是非常强大的文本查找&amp;amp;替换工具，Sublime Text中使用Alt + R切换正则匹配模式的开启/关闭。Sublime Text的使用&lt;em&gt;&lt;a href=&quot;http://www.boost.org/doc/libs/1_44_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Boost里的Perl正则表达式风格&lt;/a&gt;&lt;/em&gt;。&lt;br&gt;&lt;a href=&quot;http://regex.info/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mastering Regex&lt;/a&gt;（中译本：&lt;a href=&quot;http://book.douban.com/subject/2154713/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;精通正则表达式&lt;/a&gt;）对正则表达式的原理和各语言下的使用进行了详细介绍。&lt;br&gt;优秀教程：&lt;br&gt;&lt;a href=&quot;http://deerchao.net/tutorials/regex/regex.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“正则表达式30分钟入门教程”&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://msdn.microsoft.com/zh-cn/library/ae5bf541(v=vs.90&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MSDN正则表达式教程&lt;/a&gt;)&lt;a href=&quot;http://www.williamlong.info/archives/433.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;月光博客～常用正则表达式&lt;/a&gt;在线测试工具：&lt;br&gt;&lt;a href=&quot;http://regexpal.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regexpal&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.regexr.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;regexer&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://sublime-text-unofficial-documentation.readthedocs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;非官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.sublimetext.com/docs/3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://sublime.wbond.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Package Control&lt;/a&gt; 大量的Sublime Text插件和主题。&lt;br&gt;&lt;a href=&quot;http://zh.lucida.me/blog/sublime-text-complete-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 全程指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jeffjade.com/2015/12/15/2015-04-17-toss-sublime-text/#three&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何优雅地使用Sublime Text&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装Sublime-Text3&quot;&gt;&lt;a href=&quot;#安装Sublime-Text3&quot; class=&quot;headerlink&quot; title=&quot;安装Sublime Text3&quot;&gt;&lt;/a&gt;安装Sublime Text3&lt;/h1&gt;&lt;p&gt;Sublime Text&lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;官方网站&lt;/a&gt;提供了Sublime Text各系统各版本的下载，目前Sublime Text的最新版本是&lt;a href=&quot;http://www.sublimetext.com/3&quot;&gt;Sublime Text3&lt;/a&gt;。这里以Windows版本的SublimeText3安装为例。注意在安装时勾选Add to explorer context menu，这样在右键单击文件时就可以直接使用Sublime Text打开。&lt;br&gt;
    
    </summary>
    
    
      <category term="sublime text3" scheme="http://yoursite.com/tags/sublime-text3/"/>
    
  </entry>
  
  <entry>
    <title>Winsows上Nodejs的安装配置</title>
    <link href="http://yoursite.com/2016/07/23/nodejs-0/"/>
    <id>http://yoursite.com/2016/07/23/nodejs-0/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-07-25T14:05:05.454Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装Nodejs&quot;&gt;&lt;a href=&quot;#安装Nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装Nodejs&quot;&gt;&lt;/a&gt;安装Nodejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统：windows8.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最简单安装的方法，在&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载.msi格式，或者从我的百度云盘链接: &lt;a href=&quot;http://pan.baidu.com/s/1mim4hvU&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1mim4hvU&lt;/a&gt; 密码: scaf，默认安装会自动配置环境变量，也可以更改安装目录。我的安装目录&lt;code&gt;C:\Program Files\nodejs&lt;/code&gt;。npm已经集成在nodejs，不用单独安装。在该目录下新建两个文件夹node_cache和node_global。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://i1.piimg.com/567571/62c1c72771c19ca2.png&quot; alt=&quot;nodejs目录结构&quot;&gt;&lt;br&gt;node_cache是npm缓存目录，避免相同的包每次都下载。&lt;br&gt;node_global是全局安装的目录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;npm install xxx -g&lt;/code&gt;时， 模块将被下载安装到”全局目录”中。”全局目录”通过&lt;br&gt;&lt;code&gt;npm config set prefix&lt;/code&gt;“目录路径” 来设置。&lt;br&gt;通过 &lt;code&gt;npm config get prefix&lt;/code&gt; 来获取当前设置的目录。使用全局安装方式统一安装的&lt;br&gt;一个目录中去,这样既方便管理、结构清晰还可以重复利用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在管理员身份下运行cmd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config set cache &amp;quot;C:\Program Files\nodejs\node_cache&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm config set prefix &amp;quot;C:\Program Files\nodejs\node_global&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;环境变量配置&quot;&gt;&lt;a href=&quot;#环境变量配置&quot; class=&quot;headerlink&quot; title=&quot;环境变量配置&quot;&gt;&lt;/a&gt;环境变量配置&lt;/h1&gt;&lt;p&gt;由于改变了node_modules的默认安装目录,需要重新配置环境变量,&lt;code&gt;计算机\&amp;gt;系统属性\&amp;gt;高级\&amp;gt;环境变量&lt;/code&gt;&lt;br&gt;用户环境变量&lt;br&gt;编辑PATH:&lt;code&gt;C:\Program Files\nodejs\node_modules\npm;C:\Program Files\nodejs\node_global&lt;/code&gt;&lt;br&gt;添加NODE_PATH:&lt;code&gt;C:\Program Files\nodejs\node_global\node_modules&lt;/code&gt;&lt;br&gt;系统环境变量&lt;br&gt;编辑path：&lt;code&gt;C:\Program Files\nodejs\&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Windows-系统下设置Nodejs-NPM全局路径&quot;&gt;&lt;a href=&quot;#Windows-系统下设置Nodejs-NPM全局路径&quot; class=&quot;headerlink&quot; title=&quot;Windows 系统下设置Nodejs NPM全局路径&quot;&gt;&lt;/a&gt;Windows 系统下设置Nodejs NPM全局路径&lt;/h1&gt;&lt;p&gt;在cmd下执行以下命令无效的情况下&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config set cache &amp;quot;C:\Program Files\nodejs\node_cache&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm config set prefix &amp;quot;C:\Program Files\nodejs\node_global&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在nodejs的安装目录中找到&lt;code&gt;node_modules\npm\.npmrc文件&lt;/code&gt;（C:\Program Files\nodejs\node_modules\npm）&lt;/p&gt;
&lt;p&gt;修改如下即可：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;prefix=C:\Program Files\nodejs\node_global&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;cache=C:\Program Files\nodejs\node_cache&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装成功&quot;&gt;&lt;a href=&quot;#安装成功&quot; class=&quot;headerlink&quot; title=&quot;安装成功&quot;&gt;&lt;/a&gt;安装成功&lt;/h1&gt;&lt;p&gt;安装完成后在管理员下运行cmd&lt;br&gt;&lt;img src=&quot;http://7xrn7f.com1.z0.glb.clouddn.com/16-7-23/79224504.jpg&quot; alt=&quot;安装nodejs版本号&quot;&gt;&lt;br&gt;如上图所示则安装成功&lt;/p&gt;
&lt;h1 id=&quot;安装相关环境&quot;&gt;&lt;a href=&quot;#安装相关环境&quot; class=&quot;headerlink&quot; title=&quot;安装相关环境&quot;&gt;&lt;/a&gt;安装相关环境&lt;/h1&gt;&lt;p&gt;切记在管理员下运行cmd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g jshint&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g csslint&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;全局安装与本地安装&quot;&gt;&lt;a href=&quot;#全局安装与本地安装&quot; class=&quot;headerlink&quot; title=&quot;全局安装与本地安装&quot;&gt;&lt;/a&gt;全局安装与本地安装&lt;/h1&gt;&lt;p&gt;&lt;code&gt;npm install -g ***&lt;/code&gt;表示全局安装，这样安装的安装包都在当前用户下，在磁盘的所有其他地方都可以访问到，比较方面。否则&lt;code&gt;npm install ***&lt;/code&gt;表示本地安装，安装在当前目录下，只能在当前目录下使用。&lt;br&gt;如果一个包是要当做命令一样的来使用，就推荐进行全局安装，而如果一个包是使用在项目里面的话，则使用本地安装，这样避免了不同项目对不同版本的包之间的相互依赖的问题。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装Nodejs&quot;&gt;&lt;a href=&quot;#安装Nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装Nodejs&quot;&gt;&lt;/a&gt;安装Nodejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;系统：windows8.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最简单安装的方法，在&lt;a href=&quot;https://nodejs.org/en/&quot;&gt;官网&lt;/a&gt;下载.msi格式，或者从我的百度云盘链接: &lt;a href=&quot;http://pan.baidu.com/s/1mim4hvU&quot;&gt;http://pan.baidu.com/s/1mim4hvU&lt;/a&gt; 密码: scaf，默认安装会自动配置环境变量，也可以更改安装目录。我的安装目录&lt;code&gt;C:\Program Files\nodejs&lt;/code&gt;。npm已经集成在nodejs，不用单独安装。在该目录下新建两个文件夹node_cache和node_global。&lt;/p&gt;
    
    </summary>
    
    
      <category term="NODE" scheme="http://yoursite.com/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>JSHint使用基础</title>
    <link href="http://yoursite.com/2016/07/23/nodejs-1/"/>
    <id>http://yoursite.com/2016/07/23/nodejs-1/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-07-25T14:04:10.927Z</updated>
    
    <content type="html">&lt;p&gt;JSHint是一款在线的js代码验证工具，它能帮助你找出在开发中不经意犯下错误和可能存在的潜在问题。强烈建议尽可能的使用检查工具来确认你的编码风格以及设计模式的正确性。JSHint 提供在线和本地使用(基于 Node.js)。同时，还有很多插件支持VS，Eclipse，Notepad++，Sublime Text等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;JSHint主页：&lt;a href=&quot;http://jshint.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/&lt;/a&gt;&lt;br&gt;JSHint下载安装：&lt;a href=&quot;http://jshint.com/install/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/install/&lt;/a&gt;&lt;br&gt;JSHint官方文档：&lt;a href=&quot;http://jshint.com/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jshint.com/docs/&lt;/a&gt;&lt;br&gt;Github：&lt;a href=&quot;https://github.com/jshint/jshint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/jshint/jshint/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.hyjiacan.com/javascript-jshint/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript代码验证工具 JSHint&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;安装jshint&quot;&gt;&lt;a href=&quot;#安装jshint&quot; class=&quot;headerlink&quot; title=&quot;安装jshint&quot;&gt;&lt;/a&gt;安装jshint&lt;/h1&gt;&lt;p&gt;在Node.js上全局安装jshint&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install jshint -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在对应目录下运行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ jshint move.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;move.js: line 41, col 10, Missing semicolon.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1 error&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;一个错误，少一个分号。&lt;br&gt;如果路径是短横线 (-)，那么JSHint会从标准输入读取数据。&lt;/p&gt;
&lt;h1 id=&quot;配置JSHint&quot;&gt;&lt;a href=&quot;#配置JSHint&quot; class=&quot;headerlink&quot; title=&quot;配置JSHint&quot;&gt;&lt;/a&gt;配置JSHint&lt;/h1&gt;&lt;p&gt;有三种配置方式：&lt;br&gt;1.使用指定的配置文件 .jshintrc&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个设置允许您每个项目有不同的配置文件。把你的文件放到项目根目录,只要你运行&lt;br&gt;JSHint从任何地方在你的项目目录树,将使用相同的配置文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;JSHint默认使用用户home目录下的.jshintrc文件（json格式）作为配置文件,也可以在你的项目目录下添加一个.jshintrc文件，JSHint会在检测文件时从文件所在目录往上找，直到找到jshintrc文件为止。&lt;br&gt;&lt;a href=&quot;https://github.com/jshint/jshint/blob/master/examples/.jshintrc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jshintrc文件示例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.通过 –config标记手动配置&lt;br&gt;如果你并没有将规则文件命名为符合规则的名字（即用.jshintrc），那么可以在运行JSHint的时候手动指定规则文件，例如你将规则文件命名为jshint.json。那么可以使用一下命令来运行JSHint并应用你的规则：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jshint my_app.js --config /root/application/jshint.json  //指定规则文件路径&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.把配置写在 jshintConfig 目录下的 package.json 文件中&lt;br&gt; 配置文件是指定了JSHint配置选项开头的json数据格式，例如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;  &amp;quot;undef&amp;quot;: true,  &amp;quot;unused&amp;quot;: true,  &amp;quot;globals&amp;quot;: &amp;#123; &amp;quot;MY_GLOBAL&amp;quot;: false &amp;#125;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的配置中，JSHint 会对未定义(undefined)和未使用(unused) 的变量发出警告，globals是指定全局变量。&lt;/p&gt;
&lt;h1 id=&quot;内置配置&quot;&gt;&lt;a href=&quot;#内置配置&quot; class=&quot;headerlink&quot; title=&quot;内置配置&quot;&gt;&lt;/a&gt;内置配置&lt;/h1&gt;&lt;p&gt;对于需要对单个文件进行特定设置的需求，我们可以在文件最上方使用注释行来设定JSHint:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint undef: true, unused: true */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* globals MY_GLOBAL */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码片段将启用警告未定义的和未使用的变量和告诉JSHint全局变量命名MY_GLOBAL。&lt;br&gt;类似对于文件的设定，对于函数的设定方式需要把相应的注释行移到函数内：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// From another file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function b() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;quot;use strict&amp;quot;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  /* ... */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;屏蔽警告&quot;&gt;&lt;a href=&quot;#屏蔽警告&quot; class=&quot;headerlink&quot; title=&quot;屏蔽警告&quot;&gt;&lt;/a&gt;屏蔽警告&lt;/h2&gt;&lt;p&gt;某些警告是无法通过错误来进行屏蔽的，这时候你首先需要知道你要屏蔽错误的错误代码，通过添加&lt;code&gt;--verbose&lt;/code&gt;参数来获得：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;jshint --verbose myfile.js&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;myfile.js: line 6, col 3, Unnecessary directive &amp;quot;use strict&amp;quot;. (W034)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果需要屏蔽这个错误，可在文件中加入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint -W034 */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样，代码为 W034的警告就会被隐藏。有两点需要注意:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;这种语法只对警告(W开头的代码)有效，而对错误 (E开头的代码)是无效的。&lt;/li&gt;
&lt;li&gt;这种语法会隐藏所有指定代码的警告。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;要重新显示上面隐藏的警告，使用下面的语法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint +W034 */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;JSHint-指令&quot;&gt;&lt;a href=&quot;#JSHint-指令&quot; class=&quot;headerlink&quot; title=&quot;JSHint 指令&quot;&gt;&lt;/a&gt;JSHint 指令&lt;/h1&gt;&lt;p&gt;jshint: 设置JSHint选项指令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jshint strict: true */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;jslint：设置是否兼容 JSLint&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* jslint vars: true */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;globals: 告诉 JSHint 全局变量是在其它地方定义的。当值(value)为false(默认)时，JSHint会认为变量是只读的。通常和 undef 选项一起使用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* global MY_LIB: false */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在globals配置中，也可以把全局变量加到黑名单中，以使得变量在当前文件中禁用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* global -BAD_LIB */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;exported: 告诉 JSHint 变量在当前文件定义但是会在其它文件中使用的指令，通常和 unused 指令一起使用&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/* exported EXPORTED_LIB */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ignore: 告诉 JSHint 要跳过的代码块&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;// Code here will be linted with JSHint.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* jshint ignore:start */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// Code here will be linted with ignored by JSHint.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/* jshint ignore:end */&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JSHint会跳过检查所有位于/&lt;em&gt; jshint ignore:start &lt;/em&gt;/ 和/&lt;em&gt; jshint ignore:end &lt;/em&gt;/ 间的代码。&lt;br&gt;也可以在行的尾部添加行注释以跳过当前行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ignoreThis(); // jshint ignore:line&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;JSHint-选项&quot;&gt;&lt;a href=&quot;#JSHint-选项&quot; class=&quot;headerlink&quot; title=&quot;JSHint 选项&quot;&gt;&lt;/a&gt;JSHint 选项&lt;/h1&gt;&lt;p&gt;JSHint本身是个命令行工具，它提供了灵活了的选项设置方式。&lt;br&gt;JSHint 有两种选项: &lt;code&gt;enforcing&lt;/code&gt; 和&lt;code&gt;relaxing&lt;/code&gt;&lt;br&gt;&lt;code&gt;enforcing&lt;/code&gt; 用于使JSHint的检查更加严格，而&lt;code&gt;relaxing&lt;/code&gt;用于阻止一些警告。&lt;br&gt;&lt;a href=&quot;https://github.com/jshint/jshint/blob/master/examples/.jshintrc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多选项在jshintrc文件示例&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://jshint.com/docs/options/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多选项的含义见官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;hacker的方式&quot;&gt;&lt;a href=&quot;#hacker的方式&quot; class=&quot;headerlink&quot; title=&quot;hacker的方式&quot;&gt;&lt;/a&gt;hacker的方式&lt;/h1&gt;&lt;p&gt;上面说的方式官方的文档都有更加详细的说明，可如果你总是想禁用掉特定的警告该怎么办呢?比方说对于以下代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;if (err) return next(err);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;JSHint会警告&lt;code&gt;Expected &amp;#39;{&amp;#39; and instead saw &amp;#39;return&amp;#39;.&lt;/code&gt;，因为我（node社区很多人也是）不喜欢在单行的返回代码前后添加大括号，但是我也不想总是在文件最上面添加注释添加一块专门的注释来禁用它。一种可行的办法是修改编辑器的代码检测插件，不过难度有点高，另一种方法就是修改JSHint 的代码，我们只需要对一个reporter文件稍做修改即可。打开文件&lt;code&gt;jshint/src/reporters/default.js&lt;/code&gt;，在&lt;code&gt;var error = result.error;&lt;/code&gt;下面加入两行代码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var code = error.code;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;if (code === &amp;apos;W116&amp;apos;) return;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大功告成，保存以后再用JSHint就再也看不到那样的警告了。（当然，如果你的JSHint使用别的reporter那就另当别论了）。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;JSHint是一款在线的js代码验证工具，它能帮助你找出在开发中不经意犯下错误和可能存在的潜在问题。强烈建议尽可能的使用检查工具来确认你的编码风格以及设计模式的正确性。JSHint 提供在线和本地使用(基于 Node.js)。同时，还有很多插件支持VS，Eclipse，Notepad++，Sublime Text等。&lt;br&gt;
    
    </summary>
    
    
      <category term="jshint" scheme="http://yoursite.com/tags/jshint/"/>
    
  </entry>
  
  <entry>
    <title>Git与Github</title>
    <link href="http://yoursite.com/2016/07/23/git-0/"/>
    <id>http://yoursite.com/2016/07/23/git-0/</id>
    <published>2016-07-23T04:23:08.000Z</published>
    <updated>2016-07-25T14:44:39.380Z</updated>
    
    <content type="html">&lt;p&gt;Git 是一个为了更好地管理 Linux内核开发而创立的分布式版本控制和软件配置管理软件。 国内外知名 Git 代码托管网站有：&lt;br&gt;&lt;a href=&quot;http://GitHub.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Coding.net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coding&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://code.csdn.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;code.csdn&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub 使用 Git 作为版本控制系统（version control system）提供在线源码托管的服务，同时是个有社交功能的开发者社区。&lt;br&gt;国外类似服务：&lt;br&gt;&lt;a href=&quot;https://bitbucket.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Bitbucket&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Gitlab.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitlab&lt;/a&gt;&lt;br&gt;国内类似服务：&lt;br&gt;&lt;a href=&quot;http://Gitcafe.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitcafe&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git教程 - 廖雪峰的官方网站&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://git-scm.com/book/en/v2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pro Git&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git - 简明指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://marklodato.github.io/visual-git-guide/index-zh-cn.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;图解 Git&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.yangzhiping.com/tech/github.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何高效利用GitHub–阳志平&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.worldhello.net/gotgithub/#id4&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;worldhello&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;help.github.com/&quot;&gt;Github帮助文档&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git Magic&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;过后填坑···&quot;&gt;&lt;a href=&quot;#过后填坑···&quot; class=&quot;headerlink&quot; title=&quot;过后填坑···&quot;&gt;&lt;/a&gt;过后填坑···&lt;/h1&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;Git 是一个为了更好地管理 Linux内核开发而创立的分布式版本控制和软件配置管理软件。 国内外知名 Git 代码托管网站有：&lt;br&gt;&lt;a href=&quot;http://GitHub.com&quot;&gt;github&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://Coding.net&quot;&gt;Coding&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://code.csdn.net/&quot;&gt;code.csdn&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="NODE" scheme="http://yoursite.com/tags/NODE/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text3 前端插件安装与使用</title>
    <link href="http://yoursite.com/2016/07/05/sublime-0/"/>
    <id>http://yoursite.com/2016/07/05/sublime-0/</id>
    <published>2016-07-05T04:23:08.000Z</published>
    <updated>2016-07-26T01:20:12.919Z</updated>
    
    <content type="html">&lt;h1 id=&quot;安装package-control&quot;&gt;&lt;a href=&quot;#安装package-control&quot; class=&quot;headerlink&quot; title=&quot;安装package control&quot;&gt;&lt;/a&gt;安装package control&lt;/h1&gt;&lt;p&gt;安装插件需要先安装package control，有两种安装package control的方法，&lt;a href=&quot;https://packagecontrol.io/installation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方安装方法&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制台安装&lt;br&gt;在sublime text3&lt;code&gt;ctrl+~&lt;/code&gt;呼出控制台或者&lt;code&gt;View &amp;gt; Show Console&lt;/code&gt;,然后在控制台粘贴以下Python code：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import urllib.request,os,hashlib; h = &amp;apos;2915d1851351e5ee549c20394736b442&amp;apos; + &amp;apos;8bc59f460fa1548d1514676163dafc88&amp;apos;; pf = &amp;apos;Package Control.sublime-package&amp;apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &amp;apos;http://packagecontrol.io/&amp;apos; + pf.replace(&amp;apos; &amp;apos;, &amp;apos;%20&amp;apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&amp;apos;Error validating download (got %s instead of %s), please try manual install&amp;apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &amp;apos;wb&amp;apos; ).write(by)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的代码根据版本不同会更新，所以每次使用都链接上方的地址获取&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;上面的代码会创建安装&lt;code&gt;Installed Packages&lt;/code&gt;的文件夹，自动下载&lt;code&gt;Package Control.sublime-package&lt;/code&gt;到这个文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;手动安装&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入 Preferences &amp;gt; Browse Packages…&lt;/li&gt;
&lt;li&gt;进入 &lt;code&gt;Installed Packages/&lt;/code&gt; 目录下&lt;/li&gt;
&lt;li&gt;下载 &lt;code&gt;[Package Control.sublime-package](https://packagecontrol.io/Package%20Control.sublime-package)&lt;/code&gt;到 &lt;code&gt;Installed  Packages/&lt;/code&gt;目录下。&lt;/li&gt;
&lt;li&gt;重启 Sublime Text3&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装插件的常用方法&quot;&gt;&lt;a href=&quot;#安装插件的常用方法&quot; class=&quot;headerlink&quot; title=&quot;安装插件的常用方法&quot;&gt;&lt;/a&gt;安装插件的常用方法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ctrl+shift+p&lt;/code&gt;进入Command Palette，输入&lt;code&gt;install&lt;/code&gt;进入 Package Control: Install Package，输入要安装的插件的名称回车安装。&lt;/li&gt;
&lt;li&gt;如果在在列表中没有要安装的插件，可以在github上下载插件安装包，然后打开菜单栏里的“Preferences”—&amp;gt;”Browse Packages”，打开包的位置，然后将下载的Zip包“解压”后复制到该文件夹内即可，重启Sublime Text3 插件就会安装成功了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Emmet&quot;&gt;&lt;a href=&quot;#Emmet&quot; class=&quot;headerlink&quot; title=&quot;Emmet&quot;&gt;&lt;/a&gt;Emmet&lt;/h1&gt;&lt;p&gt; &lt;a href=&quot;http://docs.emmet.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Emmet官方使用文档&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://yanxyz.github.io/emmet-docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EMMET中文文档参考 yanxyz@github&lt;/a&gt;&lt;br&gt; &lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;速查表&lt;/a&gt;&lt;br&gt; Emmet使用仿CSS选择器的语法来生成代码，大大提高了HTML/CSS代码编写的速度。&lt;br&gt; 直接在编辑器中输入HTML或CSS的代码的缩写，然后按tab键就可以拓展为完整的代码片。&lt;/p&gt;
&lt;h2 id=&quot;功能：&quot;&gt;&lt;a href=&quot;#功能：&quot; class=&quot;headerlink&quot; title=&quot;功能：&quot;&gt;&lt;/a&gt;功能：&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;1. 展开缩写
2. 匹配标签
3. 跳转到配对标签
4. 包裹缩写
5. 跳转到编辑点
6. 选择
7. 切换注释
8. 分割合并标签
9. 删除标签
10. 合并行
11. 更新图片尺寸
12. 计算数学表达式
13. 增减数字
14. 重构 CSS 值
15. 编码/解码图像为 data:URL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;缩写是 Emmet的核心：这些特殊的表达式被实时的解析转化为代码块，缩写的语法类似于 CSS 选择器。&lt;/p&gt;
&lt;h2 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h2&gt;&lt;p&gt;所有未知的缩写都会转换成标签，例如，&lt;code&gt;foo → &amp;lt;foo&amp;gt;&amp;lt;/foo&amp;gt;&lt;/code&gt;&lt;br&gt;后代：&amp;gt;&lt;br&gt;兄弟：+&lt;br&gt;上级：^&lt;br&gt;分组：()&lt;br&gt;乘法：*&lt;br&gt;自增符号：$&lt;br&gt;ID：#&lt;br&gt;类属性：.&lt;br&gt;自定义属性：[title=”Hello world”]&lt;br&gt;文本：{}&lt;br&gt;隐式标签：当展开缩写时，Emmet 尝试获取缩写所处位置的父元素上下文，比如 HTML 元素。如果获取成功，Emmet 使用它的名字来解析隐式标签名。&lt;/p&gt;
&lt;h2 id=&quot;元素类型&quot;&gt;&lt;a href=&quot;#元素类型&quot; class=&quot;headerlink&quot; title=&quot;元素类型&quot;&gt;&lt;/a&gt;元素类型&lt;/h2&gt;&lt;p&gt;当编辑 HTML/XML 文档时，缩写展开为 HTML/XML 标签。不过一些元素，比如 a 或 img， 缩写展开后带有属性：&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;或&lt;code&gt;&amp;lt;img src=&amp;quot;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&lt;/code&gt;。Emmet 所有元素的定义放在 &lt;code&gt;snippets.json&lt;/code&gt; 文件里，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;html&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;abbreviations&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;a&amp;quot;: &amp;quot;&amp;lt;a href=\&amp;quot;\&amp;quot;&amp;gt;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;link&amp;quot;: &amp;quot;&amp;lt;link rel=\&amp;quot;stylesheet\&amp;quot; href=\&amp;quot;\&amp;quot; /&amp;gt;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;snippets&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;quot;cc:ie6&amp;quot;: &amp;quot;&amp;lt;!--[if lte IE 6]&amp;gt;\n\t$&amp;#123;child&amp;#125;|\n&amp;lt;![endif]--&amp;gt;&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;css&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        ...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;css缩写&quot;&gt;&lt;a href=&quot;#css缩写&quot; class=&quot;headerlink&quot; title=&quot;css缩写&quot;&gt;&lt;/a&gt;css缩写&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;在属性前或缩写前放一个连字符，Emmet 会自动给这个属性添加厂商前缀。&lt;/li&gt;
&lt;li&gt;渐变&lt;br&gt;可以输入函数 lg(…) (或 linear-gradient(…)) 函数，并且像缩写一样展开。如果用做属性值，Emmet 将使用属性名来生成新的属性。&lt;br&gt;&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;linear-gradient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;模糊匹配&lt;br&gt;为了让书写 CSS 更容易， Emmet 实现了模糊查找。每次输入未知的缩写时，Emmet 尝试查找最相近的代码片断。&lt;br&gt;例如，缩写不是 ov:h(overflow: hidden;) ，而是 ov-h, ovh 甚至 oh。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;值&lt;br&gt;比如我们在写 width：100px的时候，只需要 w100 即可&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;p 表示%&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;e 表示 em&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;x 表示 ex&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;附加属性&lt;br&gt;@f可以生成：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;@font-face &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;font-family:;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;src:url();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;html-缩写&quot;&gt;&lt;a href=&quot;#html-缩写&quot; class=&quot;headerlink&quot; title=&quot;html 缩写&quot;&gt;&lt;/a&gt;html 缩写&lt;/h2&gt;&lt;p&gt;所有未知的缩写都会转换成标签，例如，foo → &lt;foo&gt;&lt;/foo&gt;&lt;br&gt;! ：生成后h5文档&lt;br&gt;a ：&lt;code&gt;&amp;lt;a href=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;&lt;br&gt;更多查&lt;a href=&quot;http://docs.emmet.io/cheat-sheet/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;速查表&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SublimeLinter&quot;&gt;&lt;a href=&quot;#SublimeLinter&quot; class=&quot;headerlink&quot; title=&quot;SublimeLinter&quot;&gt;&lt;/a&gt;SublimeLinter&lt;/h1&gt;&lt;p&gt;SublimeLinter 是前端编码利器——Sublime Text 的一款插件，用于高亮提示用户编写的代码中存在的不规范和错误的写法，支持 JavaScript、CSS、HTML、Java、PHP、Python、Ruby 等十多种开发语言。如何在 Windows 中配置 SublimeLinter 进行 JS &amp;amp; CSS 校验?&lt;/p&gt;
&lt;h2 id=&quot;SublimeLinter-jshint&quot;&gt;&lt;a href=&quot;#SublimeLinter-jshint&quot; class=&quot;headerlink&quot; title=&quot;SublimeLinter-jshint&quot;&gt;&lt;/a&gt;SublimeLinter-jshint&lt;/h2&gt;&lt;p&gt;安装此插件之前需要确保本机安装jshint,在安装nodejs(&lt;em&gt;Winsows上Nodejs的安装配置&lt;/em&gt;)下安装jshint（**）&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install -g jshint&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install -g csslint&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SublimeLinter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;主页&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SideBarEnhancements&quot;&gt;&lt;a href=&quot;#SideBarEnhancements&quot; class=&quot;headerlink&quot; title=&quot;SideBarEnhancements&quot;&gt;&lt;/a&gt;SideBarEnhancements&lt;/h1&gt;&lt;p&gt;侧边栏加强软件:CTRL+K,CTRL+B&lt;br&gt;可配置打开方式,使html文件直接通过快捷键以浏览器打开&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;//chrome&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+1&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //Firefox&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+2&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;E:\\firefox\\firefox.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //opera&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+3&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files\\Opera developer\\launcher.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   //ie&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#123; &amp;quot;keys&amp;quot;: [&amp;quot;ctrl+4&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;quot;args&amp;quot;: &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;paths&amp;quot;: [],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;application&amp;quot;: &amp;quot;C:\\Program Files (x86)\\Internet Explorer\\iexplore.exe&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;,&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/titoBouzout/SideBarEnhancements&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github主页&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;SideBarFolders&quot;&gt;&lt;a href=&quot;#SideBarFolders&quot; class=&quot;headerlink&quot; title=&quot;SideBarFolders&quot;&gt;&lt;/a&gt;SideBarFolders&lt;/h1&gt;&lt;p&gt;打开的文件夹都太多了，再用这个来管理文件夹&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/SideBarFolders&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/titoBouzout/SideBarFolders&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;BracketHighlighter&quot;&gt;&lt;a href=&quot;#BracketHighlighter&quot; class=&quot;headerlink&quot; title=&quot;BracketHighlighter&quot;&gt;&lt;/a&gt;BracketHighlighter&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/BracketHighlighter&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;BracketHighlighter&lt;/a&gt;插件以高亮显示配对括号以及当前光标所在区域&lt;/p&gt;
&lt;h1 id=&quot;JSFormat&quot;&gt;&lt;a href=&quot;#JSFormat&quot; class=&quot;headerlink&quot; title=&quot;JSFormat&quot;&gt;&lt;/a&gt;JSFormat&lt;/h1&gt;&lt;p&gt;功能：Javascript的代码格式化插件&lt;br&gt;简介：很多网站的JS代码都进行了压缩，一行式的甚至混淆压缩，这让我们看起来很吃力。而这个插件能帮我们把原始代码进行格式的整理，包括换行和缩进等等，是代码一目了然，更快读懂。&lt;br&gt;使用：在已压缩的JS文件中，右键选择jsFormat或者使用默认快捷键（Ctrl+Alt+F）&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/JsFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/jdc0589/JsFormat&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;TrailingSpaces&quot;&gt;&lt;a href=&quot;#TrailingSpaces&quot; class=&quot;headerlink&quot; title=&quot;TrailingSpaces&quot;&gt;&lt;/a&gt;TrailingSpaces&lt;/h1&gt;&lt;p&gt;有时候，在代码结尾打多了几个空格或Tab并没有任何显示效果TrailingSpaces这款插件能高亮显示多余的空格和Tab.&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/TrailingSpaces&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/SublimeText/TrailingSpaces&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Alignment&quot;&gt;&lt;a href=&quot;#Alignment&quot; class=&quot;headerlink&quot; title=&quot;Alignment&quot;&gt;&lt;/a&gt;Alignment&lt;/h1&gt;&lt;p&gt;功能：”=”号对齐&lt;br&gt;简介：变量定义太多，长短不一，可一键对齐&lt;br&gt;使用：默认快捷键Ctrl+Alt+A和QQ截屏冲突，可设置其他快捷键如：Ctrl+Shift+Alt+A；先选择要对齐的文本&lt;br&gt;&lt;a href=&quot;https://packagecontrol.io/packages/Alignment&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;ColorPicker&quot;&gt;&lt;a href=&quot;#ColorPicker&quot; class=&quot;headerlink&quot; title=&quot;ColorPicker&quot;&gt;&lt;/a&gt;ColorPicker&lt;/h1&gt;&lt;p&gt;一款取色器:CTRL+ALT+&lt;/p&gt;
&lt;h1 id=&quot;sublimeREPL&quot;&gt;&lt;a href=&quot;#sublimeREPL&quot; class=&quot;headerlink&quot; title=&quot;sublimeREPL&quot;&gt;&lt;/a&gt;sublimeREPL&lt;/h1&gt;&lt;p&gt;SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等）。Sublime Text的Python控制台仅支持单行输入，十分不方便，所以Sublime​REPL以进行一些编码实验（Experiments）。&lt;/p&gt;
&lt;h1 id=&quot;DocBlocker&quot;&gt;&lt;a href=&quot;#DocBlocker&quot; class=&quot;headerlink&quot; title=&quot;DocBlocker&quot;&gt;&lt;/a&gt;DocBlocker&lt;/h1&gt;&lt;p&gt;对方法等进行注释,一个真正简单的方式来轻松地创建许多语言包括JavaScript，PHP和CoffeeScript的文档块。只要在函数的上面输入/**，按Tab就可以了。DocBlockr会观察函数需要的变量名和类型，并创建文档块。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/spadgos/sublime-jsdocs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;CSScomb&quot;&gt;&lt;a href=&quot;#CSScomb&quot; class=&quot;headerlink&quot; title=&quot;CSScomb&quot;&gt;&lt;/a&gt;CSScomb&lt;/h1&gt;&lt;p&gt;CssComb是为CSS属性进行排序和格式化插件,&lt;a href=&quot;http://csscomb.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;br&gt;它依赖于Node.js，安装NodeJS后，即可使用CssComb插件，nodejs安装见此（**）&lt;br&gt;使用：菜单&lt;code&gt;Tools-&amp;gt;Run CSScomb&lt;/code&gt;或在CSS文件中按快捷键&lt;code&gt;Ctrl+Shift+C&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;Terminal&quot;&gt;&lt;a href=&quot;#Terminal&quot; class=&quot;headerlink&quot; title=&quot;Terminal&quot;&gt;&lt;/a&gt;Terminal&lt;/h1&gt;&lt;p&gt;在编程过程中，我们经常需要使用到命令行窗口,Terminal插件可以允许在Sublime Text 3中打开cmd命令窗口,安装好该插件后,即可使用快捷键&lt;code&gt;Ctrl+Shift+T&lt;/code&gt;呼出命令行窗口。&lt;/p&gt;
&lt;h1 id=&quot;MarkDown-Editing&quot;&gt;&lt;a href=&quot;#MarkDown-Editing&quot; class=&quot;headerlink&quot; title=&quot;MarkDown Editing&quot;&gt;&lt;/a&gt;MarkDown Editing&lt;/h1&gt;&lt;p&gt;支持Markdown语法高亮,支持Github Favored Markdown语法,自带3个主题。&lt;/p&gt;
&lt;h1 id=&quot;MarkdownPreview&quot;&gt;&lt;a href=&quot;#MarkdownPreview&quot; class=&quot;headerlink&quot; title=&quot;MarkdownPreview&quot;&gt;&lt;/a&gt;MarkdownPreview&lt;/h1&gt;&lt;p&gt;MarkdownPreview：按&lt;code&gt;CTRL + B&lt;/code&gt;生成网页HTML，在最前面添加&lt;code&gt;[TOC]&lt;/code&gt;自动生成目录。&lt;/p&gt;
&lt;h1 id=&quot;Autoprefixer&quot;&gt;&lt;a href=&quot;#Autoprefixer&quot; class=&quot;headerlink&quot; title=&quot;Autoprefixer&quot;&gt;&lt;/a&gt;Autoprefixer&lt;/h1&gt;&lt;p&gt;这是一款CSS3私有前缀自动补全插件，该插件使用CanIUse资料库，能精准判断哪些属性需要什么前缀，与CssComb插件一样，该插件也需要系统已安装Node.js环境。&lt;br&gt;使用方法：在输入CSS3属性后（冒号前）按Tab键。&lt;/p&gt;
&lt;h1 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h1&gt;&lt;p&gt;在工作中，版本控制软件最常用的软件之一，而最流行的VCS是Git。你是否厌倦了保存文本文件，并切换回终端运行一些 Git 命令。如果你能从文本编辑器本身执行Git命令，岂不是很好？&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装package-control&quot;&gt;&lt;a href=&quot;#安装package-control&quot; class=&quot;headerlink&quot; title=&quot;安装package control&quot;&gt;&lt;/a&gt;安装package control&lt;/h1&gt;&lt;p&gt;安装插件需要先安装package control，有两种安装package control的方法，&lt;a href=&quot;https://packagecontrol.io/installation&quot;&gt;官方安装方法&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="sublime text3" scheme="http://yoursite.com/tags/sublime-text3/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用</title>
    <link href="http://yoursite.com/2016/07/01/hexo-1/"/>
    <id>http://yoursite.com/2016/07/01/hexo-1/</id>
    <published>2016-07-01T04:23:08.000Z</published>
    <updated>2016-07-26T01:19:49.322Z</updated>
    
    <content type="html">&lt;h1 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h1&gt;&lt;p&gt;默认目录结构如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── .deploy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── public&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── package.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;deploy：执行hexo deploy命令部署到GitHub上的内容目录&lt;/li&gt;
&lt;li&gt;public：执行hexo generate命令，输出的静态网页内容目录&lt;/li&gt;
&lt;li&gt;scaffolds：layout模板文件目录，其中的md文件可以添加编辑&lt;/li&gt;
&lt;li&gt;scripts：扩展脚本目录，这里可以自定义一些javascript脚本&lt;/li&gt;
&lt;li&gt;source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这 里，该目录下可新建页面目录。&lt;ul&gt;
&lt;li&gt;_drafts：草稿文章&lt;/li&gt;
&lt;li&gt;_posts：发布文章&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;themes：主题文件目录&lt;/li&gt;
&lt;li&gt;_config.yml：全局配置文件，大多数的设置都在这里&lt;/li&gt;
&lt;li&gt;package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Hexo上传README文件&quot;&gt;&lt;a href=&quot;#Hexo上传README文件&quot; class=&quot;headerlink&quot; title=&quot;Hexo上传README文件&quot;&gt;&lt;/a&gt;Hexo上传README文件&lt;/h1&gt;&lt;p&gt;Hexo原理就是hexo在执行hexo generate时会在本地先把博客生成的一套静态站点放到public文件夹中，在执行hexo deploy时将其复制到.deploy文件夹中。&lt;/p&gt;
&lt;p&gt;Github的版本库通常建议同时附上README.md说明文件，但是hexo默认情况下会把所有md文件解析成html文件，所以即使你在线生成了README.md，它也会在你下一次部署时被删去。怎么解决呢？&lt;/p&gt;
&lt;p&gt;在执行hexo deploy前把在本地写好的README.md文件复制到.deploy文件夹中，再去执行hexo deploy。&lt;/p&gt;
&lt;h1 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install &amp;lt;plugin-name&amp;gt; --save # 安装插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm update                       # 升级插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm uninstall &amp;lt;plugin-name&amp;gt;      # 卸载插件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hexo插件&lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Plugins&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Plugins · hexojs/hexo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;RSS订阅插件&quot;&gt;&lt;a href=&quot;#RSS订阅插件&quot; class=&quot;headerlink&quot; title=&quot;RSS订阅插件&quot;&gt;&lt;/a&gt;RSS订阅插件&lt;/h2&gt;&lt;p&gt;以管理员运行命令行，进入hexo目录下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-feed --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个命令来自&lt;a href=&quot;https://www.npmjs.com/package/hexo-generator-feed&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-feed&lt;/a&gt;&lt;br&gt;修改 Hexo 根目录下的 _config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;feed:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       type: atom&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       path: atom.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       limit: 20&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意格式，‘feed’不能缩进&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Sitemap插件&quot;&gt;&lt;a href=&quot;#Sitemap插件&quot; class=&quot;headerlink&quot; title=&quot;Sitemap插件&quot;&gt;&lt;/a&gt;Sitemap插件&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Sitemap 的提交主要的目的，是要避免搜索引擎的爬虫没有完整的收录整个网页的内容，所以提交 Sitemap&lt;br&gt;是能够补足搜索引擎的不足，进而加速网页的收录速度，达到搜寻引擎友好的目的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-sitemap --save&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-generator-baidu-sitemap --save&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个命令来自&lt;a href=&quot;https://www.npmjs.com/package/hexo-generator-sitemap&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-generator-sitemap&lt;/a&gt;&lt;br&gt;对于国内用户还需要安装插件 hexo-generator-baidu-sitemap&lt;br&gt;修改配置文件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       path: sitemap.xml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;baidusitemap:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            path: baidusitemap.xml&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;统计&quot;&gt;&lt;a href=&quot;#统计&quot; class=&quot;headerlink&quot; title=&quot;统计&quot;&gt;&lt;/a&gt;统计&lt;/h1&gt;&lt;p&gt;简单易使用&lt;a href=&quot;http://ibruce.info/2015/04/04/busuanzi/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;不蒜子&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;评论&quot;&gt;&lt;a href=&quot;#评论&quot; class=&quot;headerlink&quot; title=&quot;评论&quot;&gt;&lt;/a&gt;评论&lt;/h1&gt;&lt;p&gt;在Hexo中，默认使用的评论是国外的Disqus,但是Disqus只支持G+ twitter等登陆，我改为国内的&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;评论系统。&lt;br&gt;我使用next主题，hexo 版本为3.2.2，在&lt;code&gt;\hexo\themes\next\layout\_partial\comment.ejs&lt;/code&gt;中自动配置多说评论框代码，只需在hexo根目录下的配置文件中加上&lt;code&gt;duoshuo_shortname: Kongwsh&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;404页面&quot;&gt;&lt;a href=&quot;#404页面&quot; class=&quot;headerlink&quot; title=&quot;404页面&quot;&gt;&lt;/a&gt;404页面&lt;/h1&gt;&lt;p&gt;Github Pages提供制作404页面的教程：&lt;a href=&quot;https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Creating a custom 404 page for your GitHub Pages site&lt;/a&gt; 。不过 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you want your Project Pages site to have a custom 404 page, you must use a custom domain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;直接在根目录下创建自己的404.html或者404.md就可以。但是自定义404页面仅对绑定顶级域名的项目才起作用，GitHub默认分配的二级域名是不起作用的，使用hexo server在本机调试也是不起作用的。&lt;br&gt;404公益是个特别好的想法，目前有以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.qq.com/404/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;腾讯公益404&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yibo.iyiyun.com/Index/web404&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;404公益_益云(公益互联网)社会创新中心&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://404page.missingkids.org.tw/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;失蹤兒童少年資料管理中心404&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;网站图标&quot;&gt;&lt;a href=&quot;#网站图标&quot; class=&quot;headerlink&quot; title=&quot;网站图标&quot;&gt;&lt;/a&gt;网站图标&lt;/h1&gt;&lt;p&gt;将favicon.ico放到工程根目录下即可，也就是hexo\source目录。可以在Faviconer制作你的ico图标，国内有&lt;a href=&quot;http://www.bitbug.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;比特虫&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;hexo更新&quot;&gt;&lt;a href=&quot;#hexo更新&quot; class=&quot;headerlink&quot; title=&quot;hexo更新&quot;&gt;&lt;/a&gt;hexo更新&lt;/h1&gt;&lt;p&gt;更新hexo:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm update -g hexo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更新主题：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cd themes/你的主题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git pull&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;更新插件：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;图床&quot;&gt;&lt;a href=&quot;#图床&quot; class=&quot;headerlink&quot; title=&quot;图床&quot;&gt;&lt;/a&gt;图床&lt;/h1&gt;&lt;p&gt;图床专门用来存放图片，同时允许把图片对外连接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://portal.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://maxiang.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;马克飞象&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yotuku.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;yotuku&lt;/a&gt; 我用的这个，免费的。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tietuku.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;贴图库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;其他&quot;&gt;&lt;a href=&quot;#其他&quot; class=&quot;headerlink&quot; title=&quot;其他&quot;&gt;&lt;/a&gt;其他&lt;/h1&gt;&lt;p&gt;以下还没做&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;绑定域名&lt;/li&gt;
&lt;li&gt;分享&lt;/li&gt;
&lt;li&gt;搜索&lt;/li&gt;
&lt;li&gt;同步 Dropbox &lt;/li&gt;
&lt;li&gt;将独立域名与GitHub Pages的空间绑定，官方教程：&lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using a custom domain with GitHub Pages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;迁移&lt;/li&gt;
&lt;li&gt;CDN加速&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录结构&quot;&gt;&lt;a href=&quot;#目录结构&quot; class=&quot;headerlink&quot; title=&quot;目录结构&quot;&gt;&lt;/a&gt;目录结构&lt;/h1&gt;&lt;p&gt;默认目录结构如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── .deploy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── public&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scaffolds&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── scripts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── source&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   ├── _drafts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;|   └── _posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;├── _config.yml&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;└── package.json&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="Github Page" scheme="http://yoursite.com/tags/Github-Page/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建Github Pages博客记录</title>
    <link href="http://yoursite.com/2016/06/30/hexo-0/"/>
    <id>http://yoursite.com/2016/06/30/hexo-0/</id>
    <published>2016-06-30T04:23:08.000Z</published>
    <updated>2016-07-24T12:43:13.289Z</updated>
    
    <content type="html">&lt;h1 id=&quot;HEXO-简介&quot;&gt;&lt;a href=&quot;#HEXO-简介&quot; class=&quot;headerlink&quot; title=&quot;HEXO 简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;HEXO 简介&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Hexo出自&lt;em&gt;&lt;a href=&quot;https://github.com/tommy351&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tommy351&lt;/a&gt;&lt;/em&gt;之手，基于Node.js的静态博客程序，Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;Hexo &lt;em&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;安装前提&quot;&gt;&lt;a href=&quot;#安装前提&quot; class=&quot;headerlink&quot; title=&quot;安装前提&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装前提&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;注意：系统：win8.1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装git&lt;br&gt;下载安装&lt;em&gt; &lt;a href=&quot;https://git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;安装node.js&lt;br&gt;简单安装方法，&lt;em&gt;&lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;&lt;/em&gt;下载.msi格式，默认安装会自动配置环境变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;安装Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;使用npm命令即可直接安装 (可以直接在屏幕任意地方直接右键: Git Bash Here)&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo -g&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;“g”表示全局安装,静候几分钟安装完成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意要在管理员下运行命令行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;部署Hexo&quot;&gt;&lt;a href=&quot;#部署Hexo&quot; class=&quot;headerlink&quot; title=&quot;部署Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;部署Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;现在本地创建hexo文件夹（例如我的D:\HEXO），在哪都行，然后进入hexo目录，右键 Git Bash Here&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo init&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Hexo 自动创建所需的文件&lt;br&gt;npm 安装依赖环境&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ok了。&lt;/p&gt;
&lt;h1 id=&quot;运行Hexo&quot;&gt;&lt;a href=&quot;#运行Hexo&quot; class=&quot;headerlink&quot; title=&quot;运行Hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;运行Hexo&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;现在在D:\HEXO内右键&lt;em&gt;Git Bash Here&lt;/em&gt; 输入以下命令&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行成功的界面&lt;br&gt;&lt;img src=&quot;http://i2.piimg.com/567571/efef15c89c1f71e8.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;访问 &lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 查看效果&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/420c06e6efb72f6d.png&quot; alt=&quot;效果图&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;Github&quot;&gt;&lt;a href=&quot;#Github&quot; class=&quot;headerlink&quot; title=&quot;Github&quot;&gt;&lt;/a&gt;&lt;strong&gt;Github&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;注册github账号&lt;/li&gt;
&lt;li&gt;添加SSH公钥&lt;/li&gt;
&lt;li&gt;使用GitHub Pages建立博客&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注册完github账号，如何让本地git项目与远程的github建立联系呢，使用SSH key。&lt;/p&gt;
&lt;h2 id=&quot;检查SSH-Key&quot;&gt;&lt;a href=&quot;#检查SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;检查SSH Key&quot;&gt;&lt;/a&gt;检查SSH Key&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd ~/.ssh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提示“No such file or directory”代表咱是第一回用。&lt;/p&gt;
&lt;h2 id=&quot;生成新的SSH-Key&quot;&gt;&lt;a href=&quot;#生成新的SSH-Key&quot; class=&quot;headerlink&quot; title=&quot;生成新的SSH Key&quot;&gt;&lt;/a&gt;生成新的SSH Key&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ssh-keygen -t rsa -C &amp;quot;you@youremail.com&amp;quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;屏幕提示：Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):（回车）&lt;br&gt;Enter passphrase (empty for no passphrase):（回车）&lt;br&gt;Enter same passphrase again:（回车）&lt;br&gt;hexo 自动部署如果有密码就会失败。&lt;/p&gt;
&lt;h2 id=&quot;添加SSH-Key到GitHub&quot;&gt;&lt;a href=&quot;#添加SSH-Key到GitHub&quot; class=&quot;headerlink&quot; title=&quot;添加SSH Key到GitHub&quot;&gt;&lt;/a&gt;添加SSH Key到GitHub&lt;/h2&gt;&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd ~/.ssh/ &amp;amp;&amp;amp; ls&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到此目录下的文件：&lt;code&gt;id_rsa&lt;/code&gt; &lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat id_rsa.pub&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把SSH key 复制下来&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/e8bd1567403a0940.png&quot; alt=&quot;3&quot;&gt;&lt;br&gt;哈，登录自己的github账号 Settings —&amp;gt; SSH and GPG keys—&amp;gt; Add SSH keys &lt;a href=&quot;https://github.com/settings/keys&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/settings/keys&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://i4.piimg.com/567571/8a8501d59a29c75d.png&quot; alt=&quot;4&quot;&gt;&lt;br&gt;测试一下有没有添加成功&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;ssh -T git@github.com&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; &lt;code&gt;Hi Kongwsh! You&amp;#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;/code&gt;说明已经配置成功。&lt;/p&gt;
&lt;h2 id=&quot;设置用户信息&quot;&gt;&lt;a href=&quot;#设置用户信息&quot; class=&quot;headerlink&quot; title=&quot;设置用户信息&quot;&gt;&lt;/a&gt;设置用户信息&lt;/h2&gt; &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.name &amp;quot;Kongwsh&amp;quot;//用户名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git config --global user.email  &amp;quot;echokws@163.com&amp;quot;//填写自己的邮箱&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;本机已成功连接到github。&lt;/p&gt;
&lt;h2 id=&quot;使用GitHub-Pages建立博客&quot;&gt;&lt;a href=&quot;#使用GitHub-Pages建立博客&quot; class=&quot;headerlink&quot; title=&quot;使用GitHub Pages建立博客&quot;&gt;&lt;/a&gt;使用GitHub Pages建立博客&lt;/h2&gt;&lt;p&gt;Github Pages可以被认为是用户编写的、托管在github上的静态网页。点这里官方说明&lt;a href=&quot;https://pages.github.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://pages.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GitHub Pages分两种，一种是你的GitHub用户名建立的username.github.io这样的用户&amp;amp;组织页（站），另一种是依附项目的pages。&lt;/p&gt;
&lt;p&gt;想建立个人博客是用的第一种，形如Kongwsh.github.io这样的可访问的站，每个用户名下面只能建立一个。建立与名字一致的仓库名，格式为yourname.github.io。&lt;br&gt;&lt;img src=&quot;http://i1.piimg.com/567571/097549dcd2066599.png&quot; alt=&quot;5&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;开始使用hexo&quot;&gt;&lt;a href=&quot;#开始使用hexo&quot; class=&quot;headerlink&quot; title=&quot;开始使用hexo&quot;&gt;&lt;/a&gt;&lt;strong&gt;开始使用hexo&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;hexo-命令&quot;&gt;&lt;a href=&quot;#hexo-命令&quot; class=&quot;headerlink&quot; title=&quot;hexo 命令&quot;&gt;&lt;/a&gt;hexo 命令&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new &amp;quot;postName&amp;quot; #新建文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo new page &amp;quot;pageName&amp;quot; #新建页面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo generate #生成静态页面至public目录&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo server #开启预览访问端口（默认端口4000，&amp;apos;ctrl + c&amp;apos;关闭server）&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo deploy #将.deploy目录部署到GitHub&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo clean # 清理 database 和 /public目录， /public 目录里是生成的静态文件数据&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;简写为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;hexo n == hexo new&lt;br&gt;hexo g == hexo generate&lt;br&gt;hexo s == hexo server&lt;br&gt;hexo d == hexo deploy&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;组合命令：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo d -g #生成加部署 &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s -g #预览加部署&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hexo s -debug #开启调试模式，观察命令行输出是否有异常，这些信息有助于定位错误&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意：当本地调试出现诡异现象时候，请先使用 hexo clean 清理已经生成的静态文件后重试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;进入hexo目录，右键&lt;em&gt;Git Bash Here&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm install hexo-deployer-git --save ## 安装部署所需要的插件&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;克隆hexo主题&quot;&gt;&lt;a href=&quot;#克隆hexo主题&quot; class=&quot;headerlink&quot; title=&quot;克隆hexo主题&quot;&gt;&lt;/a&gt;克隆hexo主题&lt;/h2&gt;&lt;p&gt;初始化hexo时也会自动生成一个主题, Hexo还支持个性定制主题, 可以根据自己的喜好对主题进行修改, &lt;a href=&quot;https://github.com/hexojs/hexo/wiki/Themes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;更多主题&lt;/a&gt; 可以在官网中找到。&lt;br&gt;以&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;next&lt;/a&gt; 主题为例，Next主题&lt;a href=&quot;http://theme-next.iissnan.com/getting-started.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;克隆主题&quot;&gt;&lt;a href=&quot;#克隆主题&quot; class=&quot;headerlink&quot; title=&quot;克隆主题&quot;&gt;&lt;/a&gt;克隆主题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cd your-hexo-site&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;启用主题&quot;&gt;&lt;a href=&quot;#启用主题&quot; class=&quot;headerlink&quot; title=&quot;启用主题&quot;&gt;&lt;/a&gt;启用主题&lt;/h3&gt;&lt;p&gt;打开站点根目录下配置文件_config.yml， 找到 theme 字段，并将其值更改为 next。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; theme: next&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt; 修改配置文件冒号后一定空一格，否则不起作用。&lt;br&gt;在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。 &lt;/p&gt;
&lt;h3 id=&quot;验证主题&quot;&gt;&lt;a href=&quot;#验证主题&quot; class=&quot;headerlink&quot; title=&quot;验证主题&quot;&gt;&lt;/a&gt;验证主题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo s -debug&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;用浏览器访问&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;，检查站点是否正确运行。&lt;/p&gt;
&lt;h2 id=&quot;Hexo配置&quot;&gt;&lt;a href=&quot;#Hexo配置&quot; class=&quot;headerlink&quot; title=&quot;Hexo配置&quot;&gt;&lt;/a&gt;Hexo配置&lt;/h2&gt;&lt;p&gt;配置 Hexo目录 下的 _config.yml&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# Hexo Configuration&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/configuration.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Source: https://github.com/hexojs/hexo/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Site&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;title: Kongwsh           # 网站标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;subtitle:                # 副标题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;description: Front-End   # 描述，给搜索引擎用的，在生成html中的head-&amp;gt;meta中可看到&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;author: Kong             # 网站作者&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;language: zh-Hans        # 语言&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;email: echokws@163.com   # 邮箱&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;timezone: Asia/Hong_Kong # 时区&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;avatar: /images/avatar.jpg # 头像&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# URL #域名和文件结构&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## If your site is put in a subdirectory, set url as &amp;apos;http://yoursite.com/child&amp;apos; and root as &amp;apos;/child/&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;url: http://ibruce.info #你的域名&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;root: /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;permalink: :year/:month/:day/:title/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag_dir: tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;archive_dir: archives&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category_dir: categories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;code_dir: downloads/code&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Writing #写文章选项&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;new_post_name: :title.md # File name of new posts&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default_layout: post #默认layout方式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;auto_spacing: false # Add spaces between asian characters and western characters&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;titlecase: false # Transform title into titlecase&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;external_link: true # Open external links in new tab&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;max_open_file: 100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;multi_thread: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;filename_case: 0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;render_drafts: false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;highlight: #代码高亮&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  enable: true #是否启用&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  line_number: false #是否显示行号&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  tab_replace:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Category &amp;amp; Tag #分类与标签&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;default_category: uncategorized # default&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category_map:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag_map:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 2: Enable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 1: Disable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 0: Fully Disable&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;archive: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;category: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;tag: 1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Server #本地服务参数&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Hexo uses Connect as a server&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## You can customize the logger format as defined in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## http://www.senchalabs.org/connect/logger.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;port: 4000&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;logger: true&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;logger_format:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Date / Time format #日期显示格式&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Hexo uses Moment.js to parse and display date&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## You can customize the date format as defined in&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## http://momentjs.com/docs/#/displaying/format/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;date_format: MMM D YYYY&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;time_format: H:mm:ss&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Pagination #分页设置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Set per_page to 0 to disable pagination&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;per_page: 10 #每页10篇文章&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;pagination_dir: page&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Disqus #社会化评论disqus&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;disqus_shortname:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Extensions #插件，暂时未安装插件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Plugins: https://github.com/tommy351/hexo/wiki/Plugins&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Themes: https://github.com/tommy351/hexo/wiki/Themes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## 主题&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;theme: modernist # raytaylorism # pacman # modernist # light&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;exclude_generator:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# Deployment&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;deploy: &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  type: git   # 部署位置&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  repository: git@github.com:Kongwsh/Kongwsh.github.io.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  # 这里填写项目的地址 git@github.com:Git用户名/Git用户名.github.io.git 参照上面&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  branch: master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;写文章&quot;&gt;&lt;a href=&quot;#写文章&quot; class=&quot;headerlink&quot; title=&quot;写文章&quot;&gt;&lt;/a&gt;写文章&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;hexo new &amp;quot;postName&amp;quot;  #新建博文,其中postName是博文题目&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行命令后，会在项目\source_posts中生成postName.md文件，用编辑器打开编写即可。&lt;a href=&quot;http://wowubuntu.com/markdown/index.html#blockquote&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown语法说明&lt;/a&gt;&lt;br&gt;当然，也可以直接在\source_posts中新建一个md文件。&lt;br&gt;如果不想博文在首页全部显示, 并能出现 &lt;code&gt;阅读全文&lt;/code&gt;按钮效果, 需要在你想在首页显示的部分下添加  &lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;此处及以上的内容会在首页显示&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!--more--&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;一下是在首页隐藏的部分&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HEXO-简介&quot;&gt;&lt;a href=&quot;#HEXO-简介&quot; class=&quot;headerlink&quot; title=&quot;HEXO 简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;HEXO 简介&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;Hexo出自&lt;em&gt;&lt;a href=&quot;https://github.com/tommy351&quot;&gt;tommy351&lt;/a&gt;&lt;/em&gt;之手，基于Node.js的静态博客程序，Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。hexo生成的静态网页可以直接放到GitHub Pages，BAE，SAE等平台上。&lt;br&gt;Hexo &lt;em&gt;&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot;&gt;官方文档&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="HEXO" scheme="http://yoursite.com/tags/HEXO/"/>
    
      <category term="Github Page" scheme="http://yoursite.com/tags/Github-Page/"/>
    
  </entry>
  
</feed>
